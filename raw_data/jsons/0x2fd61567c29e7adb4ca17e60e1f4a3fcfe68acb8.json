{"SourceCode": "/**\r\n *Submitted for verification at Etherscan.io on 2019-06-25\r\n*/\r\n\r\n/*\r\n * \ucee8\ud2b8\ub799\ud2b8 \uac1c\uc694\r\n * 1. \ubaa9\uc801\r\n *  \uba54\uc778\ub137 \uc6b4\uc601\uc774 \uc2dc\uc791\ub418\uae30 \uc804\uae4c\uc9c0 \ud55c\uc2dc\uc801\uc778 \uc6b4\uc601\uc744 \ubaa9\uc801\uc73c\ub85c \ud558\uace0 \uc788\ub2e4.\r\n *  \uba54\uc778\ub137\uc774 \uc6b4\uc601\ub418\uba74 \ucee8\ud2b8\ub799\ud2b8\uc758 \uac70\ub798\ub294 \ubaa8\ub450 \uc911\ub2e8\ub418\uba70, \uba54\uc778\ub137 \ucf54\uc778\ud2b8\ub85c \uc804\ud658\uc744 \uc2dc\uc791\ud558\uba70,\r\n *  \uc804\ud658 \uc808\ucc28\ub97c \uac04\ub2e8\ud558\uac8c \uc218\ud589\ud560 \uc218 \uc788\uc73c\uba70, \ube14\ub85d\uccb4\uc778 \ub0b4 \uae30\ub85d\uc744 \ud1b5\ud574 \uc2e0\ub8b0\ub3c4\ub97c \uc5bb\uc744 \uc218 \uc788\ub3c4\ub85d \uc124\uacc4 \ub418\uc5c8\ub2e4.\r\n * 2. \uc6a9\uc5b4 \uc124\uba85\r\n *  Owner : \ucee8\ud2b8\ub799\ud2b8\ub97c \uc0dd\uc131\ud55c \ucee8\ud2b8\ub799\ud2b8\uc758 \uc8fc\uc778\r\n *  Delegator : Owner\uc758 Private Key\ub97c \ub9e4\ubc88 \uc0ac\uc6a9\ud558\uae30\uc5d0\ub294 \ubcf4\uc548\uc801\uc778 \uc774\uc288\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 \ub3c4\uc785\ub41c\r\n *              \uc77c\ubd80 Owner \uad8c\ud55c\uc744 \uc2e4\ud589\ud560 \uc218 \uc788\ub3c4\ub85d \uc784\uba85\ud55c \ub300\ud589\uc790\r\n *              \ud2b9\ud788, \ucee8\ud2b8\ub799\ud2b8\uc758 \uac70\ub798\uac00 \uc911\ub2e8\ub41c \uc0c1\ud0dc\uc5d0\uc11c Delegator\ub9cc \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \uc804\uc6a9 \ud568\uc218\ub97c \uc2e4\ud589\ud558\uc5ec\r\n *              \ucee8\ud2b8\ub799\ud2b8\uc758 \ud1a0\ud070\uc744 \ud68c\uc218\ud558\uace0, \uba54\uc778\ub137\uc758 \ucf54\uc778\uc73c\ub85c \uc804\ud658\ud574\uc8fc\ub294 \ud575\uc2ec\uc801\uc778 \uae30\ub2a5\uc744 \uc218\ud589\r\n *  Holder : \ud1a0\ud070\uc744 \ubcf4\uc720\ud560 \uc218 \uc788\ub294 Address\ub97c \uac00\uc9c0\uace0 \uc788\ub294 \uacc4\uc815\r\n * 3. \uc6b4\uc6a9\r\n *  3.1. TokenContainer Structure\r\n *   3.1.1 Charge Amount\r\n *    Charge Amount\ub294 Holder\uac00 \uad6c\ub9e4\ud558\uc5ec \ucda9\uc804\ud55c \ud1a0\ud070\ub7c9\uc785\ub2c8\ub2e4.\r\n *    Owner\uc758 \uacbd\uc6b0\uc5d0\ub294 \ucee8\ud2b8\ub799\ud2b8 \uc804\uccb4\uc5d0 \ucda9\uc804\ub41c \ud1a0\ud070\ub7c9. \uc989, Total Supply\uc640 \uac19\uc2b5\ub2c8\ub2e4.\r\n *   3.1.2 Unlock Amount\r\n *    \uae30\ubcf8\uc801\uc73c\ub85c \ubaa8\ub4e0 \ud1a0\ud070\uc740 Lock \uc0c1\ud0dc\uc778 \uac83\uc774 \uae30\ubcf8 \uc0c1\ud0dc\uc774\uba70, Owner \ub610\ub294 Delegator\uac00 Unlock \ud574\uc900 \ub9cc\ud07c Balance\ub85c \uc804\ud658\ub429\ub2c8\ub2e4.\r\n *    Unlock Amount\ub294 Charge Amount \uc911 Unlock \ub41c \ub9cc\ud07c\ub9cc \ud45c\uc2dc\ud569\ub2c8\ub2e4.\r\n *    Unlock Amount\ub294 Charge Amount \ubcf4\ub2e4 \ucee4\uc9c8 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\r\n *   3.1.3 Balance\r\n *    ERC20\uc758 Balance\uc640 \uac19\uc73c\uba70, \uae30\ubcf8\uc801\uc73c\ub85c\ub294 Charge Amount - Unlock Amount \uac12\uc5d0\uc11c \ubd80\ud130 \uc2dc\uc791\ud569\ub2c8\ub2e4.\r\n *    \uc790\uc720\ub86d\uac8c \uac70\ub798\uac00 \uac00\ub2a5\ud558\ubbc0\ub85c Balance\ub294 \ub354 \ud06c\uac70\ub098 \uc791\uc544\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\r\n * 4. \ud1a0\ud070 -> \ucf54\uc778 \uc804\ud658 \uc808\ucc28\r\n *  4.1. Owner \uad8c\ud55c\uc73c\ub85c \ucee8\ud2b8\ub799\ud2b8\uc758 \uac70\ub798\ub97c \uc644\uc804\ud788 \uc911\ub2e8 \uc2dc\ud0b4(lock())\r\n *  4.2. \uad50\ud658\uc744 \uc2e4\ud589\ud558\uae30 \uc704\ud55c ExchangeContract\ub97c \uc0dd\uc131\r\n *  4.3. ExchangeContract\uc758 Address\ub97c Owner\uc758 \uad8c\ud55c\uc73c\ub85c Delegator\ub85c \uc9c0\uc815\r\n *  4.4. Holder\uac00 ExchangeContract\uc758 exchangeSYM()\uc744 \uc2e4\ud589\ud558\uc5ec \uc794\uc561\uc744 ExchangeHolder\uc5d0\uac8c \ubaa8\ub450 \uc804\ub2ec\r\n *  4.5. ExchangeHolder\ub85c\uc758 \uc785\uae08\uc744 \ud655\uc778\r\n *  4.6. \uc694\uccad\uc5d0 \ub300\uc751\ub418\ub294 \uba54\uc778\ub137\uc758 \uacc4\uc815\uc73c\ub85c \ud574\ub2f9\ub418\ub294 \uc591\ub9cc\ud07c \uc1a1\uae08\r\n *  4.7. ExchangeContract\uc758 withdraw()\ub97c \uc0ac\uc6a9\ud558\uc5ec Owner\uac00 \ucd5c\uc885\uc801\uc73c\ub85c \ud68c\uc218\ud558\ub294 \uac83\uc73c\ub85c \uc804\ud658\uc808\ucc28 \uc644\ub8cc\r\n */\r\n /*\r\n  *  * Contract Overview \r\n * 1. Purpose\r\n *  It is intended to operate for a limited time until mainnet launch.\r\n *  When the mainnet is launched, all transactions of the contract will be suspended from that day on forward and will initiate the token swap to the mainnet.\r\n * 2. Key Definitions\r\n *  Owner : An entity from which smart contract is created\r\n *  Delegator : The appointed agent is created to prevent from using the contract owner's private key for every transaction made, since it can cause a serious security issue.  \r\n *              In particular, it performs core functons at the time of the token swap event, such as executing a dedicated, Delegator-specific function while contract transaction is under suspension and\r\n *              withdraw contract's tokens. \r\n *  Holder : An account in which tokens can be stored (also referrs to all users of the contract: Owner, Delegator, Spender, ICO buyers, ect.)\r\n * 3. Operation\r\n *  3.1. TokenContainer Structure\r\n *   3.1.1 Charge Amount\r\n *    Charge Amount is the charged token amount purcahsed by Holder.\r\n *    In case for the Owner, the total charged amount in the contract equates to the Total Supply.\r\n *   3.1.2 Unlock Amount\r\n *    Generally, all tokens are under a locked state by default and balance appears according to the amount that Owner or Delegator Unlocks.\r\n *    Unlock Amount only displays tokens that are unlocked from the Charge Amount.\r\n *    Unlock Amount cannot be greater than the Charge Amount.\r\n *   3.1.3 Balance\r\n *     Similiar to the ERC20 Balance; It starts from Charged Amount - Unlock Amount value.\r\n *     You can send & receive tokens at will and it will offset the Balance amount accordingly.\r\n * 4. Token Swap Process\r\n *  4.1. Completely suspend trading operations from the contract address with owner privileges (lock ()).\r\n *  4.2. Create an ExchangeContract contract to execute the exchange.\r\n *  4.3. Owner appoints the ExchangeContract address to the Delegator.\r\n *  4.4. The Holder executes an exchangeSYM() embedded in the ExchangeContract to transfer all the Balance to ExchangeHolder\r\n *  4.5. Verify ExchangeHolder's deposit amount. \r\n *  4.6. Remit an appropriate amount into the mainnet account that corresponds to the request.  \r\n *  4.7. By using the ExchangeContract's withdraw(), the token swap process completes as the Owner makes the final withdrawal.\r\n  */\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b);\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address who) external view returns (uint256);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract Ownable {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () internal {\r\n        _owner = msg.sender;\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(isOwner());\r\n        _;\r\n    }\r\n\r\n    function isOwner() public view returns (bool) {\r\n        return msg.sender == _owner;\r\n    }\r\n\r\n    /*\r\n     * \uc6b4\uc6a9\uc0c1 Owner \ubcc0\uacbd\uc740 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc73c\ubbc0\ub85c \uad8c\ud55c \ubcc0\uacbd \ud568\uc218 \uc81c\uac70\ud558\uc600\ub2e4.\r\n     */\r\n    /*\r\n     * The privilege change function is removed since the Owner change isn't used during the operation.\r\n     */\r\n    /* not used\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n    */\r\n}\r\n\r\n/*\r\n * Owner\uc758 \uad8c\ud55c \uc911 \uc77c\ubd80\ub97c \ub300\uc2e0 \ud589\uc0ac\ud560 \uc218 \uc788\ub3c4\ub85d \ub300\ud589\uc790\ub97c \uc9c0\uc815/\ud574\uc81c \ud560 \uc218 \uc788\ub294 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc815\uc758\ud558\uace0 \uc788\ub2e4.\r\n */\r\n /*\r\n * It defines an interface where the Owner can appoint / dismiss an agent that can partially excercize privileges in lieu of the Owner's \r\n */\r\ncontract Delegable is Ownable {\r\n    address private _delegator;\r\n    \r\n    event DelegateAppointed(address indexed previousDelegator, address indexed newDelegator);\r\n    \r\n    constructor () internal {\r\n        _delegator = address(0);\r\n    }\r\n    \r\n    /*\r\n     * delegator\ub97c \uac00\uc838\uc634\r\n     */\r\n    /*\r\n     * Call-up Delegator\r\n     */\r\n    function delegator() public view returns (address) {\r\n        return _delegator;\r\n    }\r\n    \r\n    /*\r\n     * delegator\ub9cc \uc2e4\ud589 \uac00\ub2a5\ud558\ub3c4\ub85d \uc9c0\uc815\ud558\ub294 \uc811\uadfc \uc81c\ud55c\r\n     */\r\n    /*\r\n     * Access restriction in which only appointed delegator is executable\r\n     */\r\n    modifier onlyDelegator() {\r\n        require(isDelegator());\r\n        _;\r\n    }\r\n    \r\n    /*\r\n     * owner \ub610\ub294 delegator\uac00 \uc2e4\ud589 \uac00\ub2a5\ud558\ub3c4\ub85d \uc9c0\uc815\ud558\ub294 \uc811\uadfc \uc81c\ud55c\r\n     */\r\n    /*\r\n     * Access restriction in which only appointed delegator or Owner are executable\r\n     */\r\n    modifier ownerOrDelegator() {\r\n        require(isOwner() || isDelegator());\r\n        _;\r\n    }\r\n    \r\n    function isDelegator() public view returns (bool) {\r\n        return msg.sender == _delegator;\r\n    }\r\n    \r\n    /*\r\n     * delegator\ub97c \uc784\uba85\r\n     */\r\n    /*\r\n     * Appoint the delegator\r\n     */\r\n    function appointDelegator(address delegator) public onlyOwner returns (bool) {\r\n        require(delegator != address(0));\r\n        require(delegator != owner());\r\n        return _appointDelegator(delegator);\r\n    }\r\n    \r\n    /*\r\n     * \uc9c0\uc815\ub41c delegator\ub97c \ud574\uc784\r\n     */\r\n    /*\r\n     * Dimiss the appointed delegator\r\n     */\r\n    function dissmissDelegator() public onlyOwner returns (bool) {\r\n        require(_delegator != address(0));\r\n        return _appointDelegator(address(0));\r\n    }\r\n    \r\n    /*\r\n     * delegator\ub97c \ubcc0\uacbd\ud558\ub294 \ub0b4\ubd80 \ud568\uc218\r\n     */\r\n    /*\r\n     * An internal function that allows delegator changes \r\n     */\r\n    function _appointDelegator(address delegator) private returns (bool) {\r\n        require(_delegator != delegator);\r\n        emit DelegateAppointed(_delegator, delegator);\r\n        _delegator = delegator;\r\n        return true;\r\n    }\r\n}\r\n\r\n/*\r\n * ERC20\uc758 \uae30\ubcf8 \uc778\ud130\ud398\uc774\uc2a4\ub294 \uc720\uc9c0\ud558\uc5ec \uc77c\ubc18\uc801\uc778 \ud1a0\ud070 \uc804\uc1a1\uc774 \uac00\ub2a5\ud558\uba74\uc11c,\r\n * \uc77c\ubd80 \ucd94\uac00 \uad00\ub9ac \uae30\ub2a5\uc744 \uad6c\ud604\ud558\uae30 \uc704\ud55c Struct \ubc0f \ud568\uc218\uac00 \ucd94\uac00\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.\r\n * \ud2b9\ud788, \ud1a0\ud070 -> \ucf54\uc778 \uad50\ud658\uc744 \uc704\ud55c Delegator \uc784\uba85\uc740 Owner\uac00 \uc9c1\uc811 \uc218\ud589\ud560 \ucee8\ud2b8\ub799\ud2b8\uc758 \uc8fc\uc18c\ub97c \uc784\uba85\ud558\uae30 \ub54c\ubb38\uc5d0\r\n * \uc678\ubd80\uc5d0\uc11c \uc784\uc758\ub85c \uad8c\ud55c\uc744 \ud68d\ub4dd\ud558\uae30 \ub9e4\uc6b0 \uc5b4\ub824\uc6b4 \uad6c\uc870\ub97c \uac00\uc9d1\ub2c8\ub2e4.\r\n * \ub610\ud55c, exchange() \ud568\uc218\uc758 \uc2e4\ud589\uc740 ExchangeContract\uc5d0\uc11c Holder\uac00 \uc9c1\uc811 exchangeSYM() \ud568\uc218\ub97c\r\n * \uc2e4\ud589\ud55c \uac83\uc774 \ud2b8\ub9ac\uac70\uac00 \ub418\uae30 \ub54c\ubb38\uc5d0 \uc784\uc758\uc758 \uc0ac\uc6a9\uc790\uac00 \ub2e4\ub978 \uc0ac\ub78c\uc758 \ud1a0\ud070\uc744 \ud0c8\ucde8\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\r\n */\r\n /*\r\n * The basic interface of ERC20 is remained untouched therefore basic functions like token transactions will be available. \r\n * On top of that, Structs and functions have been added to implement some additional management functions.\r\n * In particular, we created an additional Delegator agent to initiate the token swap so that the swap is performed by the delegator but directly from the Owner's contract address.\r\n * By implementing an additional agent, it has built a difficult structure to acquire rights arbitrarily from the outside.\r\n * In addition, the execution of exchange() cannot be taken by any other Holders' because the exchangeSYM() is triggered directly by the Holder's execution \r\n */\r\ncontract ERC20Like is IERC20, Delegable {\r\n    using SafeMath for uint256;\r\n\r\n    uint256 internal _totalSupply;  // \ucd1d \ubc1c\ud589\ub7c9 // Total Supply\r\n    bool isLock = false;  // \uacc4\uc57d \uc7a0\uae08 \ud50c\ub798\uadf8 // Contract Lock Flag\r\n\r\n    /*\r\n     * \ud1a0\ud070 \uc815\ubcf4(\ucda9\uc804\ub7c9, \ud574\uae08\ub7c9, \uac00\uc6a9\uc794\uc561) \ubc0f Spender \uc815\ubcf4\ub97c \uc800\uc7a5\ud558\ub294 \uad6c\uc870\uccb4\r\n     */\r\n    /*\r\n     * Structure that stores token information (charge, unlock, balance) as well as Spender information\r\n     */\r\n    struct TokenContainer {\r\n        uint256 chargeAmount; // \ucda9\uc804\ub7c9 // charge amount\r\n        uint256 unlockAmount; // \ud574\uae08\ub7c9 // unlock amount\r\n        uint256 balance;  // \uac00\uc6a9\uc794\uc561 // available balance\r\n        mapping (address => uint256) allowed; // Spender\r\n    }\r\n\r\n    mapping (address => TokenContainer) internal _tokenContainers;\r\n    \r\n    event ChangeCirculation(uint256 circulationAmount);\r\n    event Charge(address indexed holder, uint256 chargeAmount, uint256 unlockAmount);\r\n    event IncreaseUnlockAmount(address indexed holder, uint256 unlockAmount);\r\n    event DecreaseUnlockAmount(address indexed holder, uint256 unlockAmount);\r\n    event Exchange(address indexed holder, address indexed exchangeHolder, uint256 amount);\r\n    event Withdraw(address indexed holder, uint256 amount);\r\n\r\n    // \ucd1d \ubc1c\ud589\ub7c9 \r\n    // Total token supply \r\n    function totalSupply() public view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    // \uac00\uc6a9\uc794\uc561 \uac00\uc838\uc624\uae30\r\n    // Call-up available balance\r\n    function balanceOf(address holder) public view returns (uint256) {\r\n        return _tokenContainers[holder].balance;\r\n    }\r\n\r\n    // Spender\uc758 \ub0a8\uc740 \uc794\uc561 \uac00\uc838\uc624\uae30\r\n    // Call-up Spender's remaining balance\r\n    function allowance(address holder, address spender) public view returns (uint256) {\r\n        return _tokenContainers[holder].allowed[spender];\r\n    }\r\n\r\n    // \ud1a0\ud070\uc1a1\uae08\r\n    // Transfer token\r\n    function transfer(address to, uint256 value) public returns (bool) {\r\n        _transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    // Spender \uc9c0\uc815 \ubc0f \uae08\uc561 \uc9c0\uc815\r\n    // Appoint a Spender and set an amount \r\n    function approve(address spender, uint256 value) public returns (bool) {\r\n        _approve(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    // Spender \ud1a0\ud070\uc1a1\uae08\r\n    // Transfer token via Spender \r\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\r\n        _transfer(from, to, value);\r\n        _approve(from, msg.sender, _tokenContainers[from].allowed[msg.sender].sub(value));\r\n        return true;\r\n    }\r\n\r\n    // Spender\uac00 \ud560\ub2f9 \ubc1b\uc740 \uc591 \uc99d\uac00\r\n    // Increase a Spender amount alloted by the Owner/Delegator\r\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n        require(!isLock);\r\n        uint256 value = _tokenContainers[msg.sender].allowed[spender].add(addedValue);\r\n        if (msg.sender == owner()) {  // Sender\uac00 \uacc4\uc57d \uc18c\uc720\uc790\uc778 \uacbd\uc6b0 \uc804\uccb4 \ubc1c\ud589\ub7c9 \uc870\uc808\r\n            require(_tokenContainers[msg.sender].chargeAmount >= _tokenContainers[msg.sender].unlockAmount.add(addedValue));\r\n            _tokenContainers[msg.sender].unlockAmount = _tokenContainers[msg.sender].unlockAmount.add(addedValue);\r\n            _tokenContainers[msg.sender].balance = _tokenContainers[msg.sender].balance.add(addedValue);\r\n        }\r\n        _approve(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    // Spender\uac00 \ud560\ub2f9 \ubc1b\uc740 \uc591 \uac10\uc18c\r\n    // Decrease a Spender amount alloted by the Owner/Delegator\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n        require(!isLock);\r\n        // \uae30\uc874\uc5d0 \ud560\ub2f9\ub41c \uae08\uc561\uc758 \uc794\uc561\ubcf4\ub2e4 \ub354 \ub9ce\uc740 \uae08\uc561\uc744 \uc904\uc774\ub824\uace0 \ud558\ub294 \uacbd\uc6b0 \ud560\ub2f9\uc561\uc774 0\uc774 \ub418\ub3c4\ub85d \ucc98\ub9ac\r\n        //// If you reduce more than the alloted amount in the balance, we made sure the alloted amount is set to zero instead of minus\r\n        if (_tokenContainers[msg.sender].allowed[spender] < subtractedValue) {\r\n            subtractedValue = _tokenContainers[msg.sender].allowed[spender];\r\n        }\r\n        \r\n        uint256 value = _tokenContainers[msg.sender].allowed[spender].sub(subtractedValue);\r\n        if (msg.sender == owner()) {  // Sender\uac00 \uacc4\uc57d \uc18c\uc720\uc790\uc778 \uacbd\uc6b0 \uc804\uccb4 \ubc1c\ud589\ub7c9 \uc870\uc808 // // Adjust the total circulation amount if the Sender equals the contract owner\r\n            _tokenContainers[msg.sender].unlockAmount = _tokenContainers[msg.sender].unlockAmount.sub(subtractedValue);\r\n            _tokenContainers[msg.sender].balance = _tokenContainers[msg.sender].balance.sub(subtractedValue);\r\n        }\r\n        _approve(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    // \ud1a0\ud070\uc1a1\uae08 \ub0b4\ubd80 \uc2e4\ud589 \ud568\uc218 \r\n    // An internal execution function for troken transfer\r\n    function _transfer(address from, address to, uint256 value) private {\r\n        require(!isLock);\r\n        // 3.1. Known vulnerabilities of ERC-20 token\r\n        // \ud604\uc7ac \ucee8\ud2b8\ub799\ud2b8\ub85c\ub294 \uc1a1\uae08\ud560 \uc218 \uc5c6\ub3c4\ub85d \uc608\uc678 \ucc98\ub9ac // Exceptions were added to not allow deposits to be made in the current contract . \r\n        require(to != address(this));\r\n        require(to != address(0));\r\n\r\n        _tokenContainers[from].balance = _tokenContainers[from].balance.sub(value);\r\n        _tokenContainers[to].balance = _tokenContainers[to].balance.add(value);\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    // Spender \uc9c0\uc815 \ub0b4\ubd80 \uc2e4\ud589 \ud568\uc218\r\n    // Internal execution function for assigning a Spender\r\n    function _approve(address holder, address spender, uint256 value) private {\r\n        require(!isLock);\r\n        require(spender != address(0));\r\n        require(holder != address(0));\r\n\r\n        _tokenContainers[holder].allowed[spender] = value;\r\n        emit Approval(holder, spender, value);\r\n    }\r\n\r\n    /* extension */\r\n    /**\r\n     * \ucda9\uc804\ub7c9 \r\n     */\r\n    /**\r\n     * Charge Amount \r\n     */\r\n    function chargeAmountOf(address holder) external view returns (uint256) {\r\n        return _tokenContainers[holder].chargeAmount;\r\n    }\r\n\r\n    /**\r\n     * \ud574\uae08\ub7c9\r\n     */\r\n    /**\r\n     * Unlock Amount\r\n     */\r\n    function unlockAmountOf(address holder) external view returns (uint256) {\r\n        return _tokenContainers[holder].unlockAmount;\r\n    }\r\n\r\n    /**\r\n     * \uac00\uc6a9\uc794\uc561\r\n     */\r\n    /**\r\n     * Available amount in the balance\r\n     */\r\n    function availableBalanceOf(address holder) external view returns (uint256) {\r\n        return _tokenContainers[holder].balance;\r\n    }\r\n\r\n    /**\r\n     * Holder\uc758 \uacc4\uc815 \uc794\uc561 \uc694\uc57d \ucd9c\ub825(JSON \ud3ec\ub9f7)\r\n     */\r\n    /**\r\n     * An output of Holder's account balance summary (JSON format)\r\n     */\r\n    function receiptAccountOf(address holder) external view returns (string memory) {\r\n        bytes memory blockStart = bytes(\"{\");\r\n        bytes memory chargeLabel = bytes(\"\\\"chargeAmount\\\" : \\\"\");\r\n        bytes memory charge = bytes(uint2str(_tokenContainers[holder].chargeAmount));\r\n        bytes memory unlockLabel = bytes(\"\\\", \\\"unlockAmount\\\" : \\\"\");\r\n        bytes memory unlock = bytes(uint2str(_tokenContainers[holder].unlockAmount));\r\n        bytes memory balanceLabel = bytes(\"\\\", \\\"availableBalance\\\" : \\\"\");\r\n        bytes memory balance = bytes(uint2str(_tokenContainers[holder].balance));\r\n        bytes memory blockEnd = bytes(\"\\\"}\");\r\n\r\n        string memory receipt = new string(blockStart.length + chargeLabel.length + charge.length + unlockLabel.length + unlock.length + balanceLabel.length + balance.length + blockEnd.length);\r\n        bytes memory receiptBytes = bytes(receipt);\r\n\r\n        uint readIndex = 0;\r\n        uint writeIndex = 0;\r\n\r\n        for (readIndex = 0; readIndex < blockStart.length; readIndex++) {\r\n            receiptBytes[writeIndex++] = blockStart[readIndex];\r\n        }\r\n        for (readIndex = 0; readIndex < chargeLabel.length; readIndex++) {\r\n            receiptBytes[writeIndex++] = chargeLabel[readIndex];\r\n        }\r\n        for (readIndex = 0; readIndex < charge.length; readIndex++) {\r\n            receiptBytes[writeIndex++] = charge[readIndex];\r\n        }\r\n        for (readIndex = 0; readIndex < unlockLabel.length; readIndex++) {\r\n            receiptBytes[writeIndex++] = unlockLabel[readIndex];\r\n        }\r\n        for (readIndex = 0; readIndex < unlock.length; readIndex++) {\r\n            receiptBytes[writeIndex++] = unlock[readIndex];\r\n        }\r\n        for (readIndex = 0; readIndex < balanceLabel.length; readIndex++) {\r\n            receiptBytes[writeIndex++] = balanceLabel[readIndex];\r\n        }\r\n        for (readIndex = 0; readIndex < balance.length; readIndex++) {\r\n            receiptBytes[writeIndex++] = balance[readIndex];\r\n        }\r\n        for (readIndex = 0; readIndex < blockEnd.length; readIndex++) {\r\n            receiptBytes[writeIndex++] = blockEnd[readIndex];\r\n        }\r\n\r\n        return string(receiptBytes);\r\n    }\r\n\r\n    // uint \uac12\uc744 string \uc73c\ub85c \ubcc0\ud658\ud558\ub294 \ub0b4\ubd80 \ud568\uc218\r\n    // An internal function that converts an uint value to a string\r\n    function uint2str(uint _i) internal pure returns (string memory _uintAsString) {\r\n        if (_i == 0) {\r\n            return \"0\";\r\n        }\r\n        uint j = _i;\r\n        uint len;\r\n        while (j != 0) {\r\n            len++;\r\n            j /= 10;\r\n        }\r\n        bytes memory bstr = new bytes(len);\r\n        uint k = len - 1;\r\n        while (_i != 0) {\r\n            bstr[k--] = byte(uint8(48 + _i % 10));\r\n            _i /= 10;\r\n        }\r\n        return string(bstr);\r\n    }\r\n\r\n    // \uc804\uccb4 \uc720\ud1b5\ub7c9 - Owner\uc758 unlockAmount\r\n    // Total circulation supply, or the unlockAmount of the Owner's\r\n    function circulationAmount() external view returns (uint256) {\r\n        return _tokenContainers[owner()].unlockAmount;\r\n    }\r\n\r\n    // \uc804\uccb4 \uc720\ud1b5\ub7c9 \uc99d\uac00\r\n    // Increase the token's total circulation supply \r\n    /*\r\n     * \ucee8\ud2b8\ub799\ud2b8 \uc0c1\uc5d0 \uc720\ud1b5\ub418\ub294 \ud1a0\ud070\ub7c9\uc744 \uc99d\uac00 \uc2dc\ud0b5\ub2c8\ub2e4.\r\n     * Owner\uac00 \ubcf4\uc720\ud55c \uc804\uccb4 \ud1a0\ud070\ub7c9\uc5d0\uc11c Unlock \ub41c \uc591 \ub9cc\ud07c\uc774 \ud604\uc7ac \uc720\ud1b5\ub7c9\uc774\ubbc0\ub85c,\r\n     * Unlock Amount\uc640 Balance \uac00 \uc99d\uac00\ud558\uba70, Charge Amount\ub294 \ubcc0\ub3d9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\r\n     */\r\n    /*\r\n     * This function increases the amount of circulated tokens that are distributed on the contract.\r\n     * The circulated token is referring to the Unlock tokens out of the contract Owner's total supply, so the Charge Amount is not affected (refer back to the Balance definition above).\r\n     * This function increases in the Unlock Amount as well as in the Balance.\r\n     */\r\n    function increaseCirculation(uint256 amount) external onlyOwner returns (uint256) {\r\n        require(!isLock);\r\n        require(_tokenContainers[msg.sender].chargeAmount >= _tokenContainers[msg.sender].unlockAmount.add(amount));\r\n        _tokenContainers[msg.sender].unlockAmount = _tokenContainers[msg.sender].unlockAmount.add(amount);\r\n        _tokenContainers[msg.sender].balance = _tokenContainers[msg.sender].balance.add(amount);\r\n        emit ChangeCirculation(_tokenContainers[msg.sender].unlockAmount);\r\n        return _tokenContainers[msg.sender].unlockAmount;\r\n    }\r\n\r\n    // \uc804\uccb4 \uc720\ud1b5\ub7c9 \uac10\uc18c\r\n    // Reduction of the token's total supply\r\n    /*\r\n     * \ucee8\ud2b8\ub799\ud2b8 \uc0c1\uc5d0 \uc720\ud1b5\ub418\ub294 \ud1a0\ud070\ub7c9\uc744 \uac10\uc18c \uc2dc\ud0b5\ub2c8\ub2e4.\r\n     * Owner\uac00 \ubcf4\uc720\ud55c \uc804\uccb4 \ud1a0\ud070\ub7c9\uc5d0\uc11c Unlock \ub41c \uc591 \ub9cc\ud07c\uc774 \ud604\uc7ac \uc720\ud1b5\ub7c9\uc774\ubbc0\ub85c,\r\n     * Unlock Amount\uc640 Balance \uac00 \uac10\uc18c\ud558\uba70, Charge Amount\ub294 \ubcc0\ub3d9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\r\n     * Owner\ub9cc \uc2e4\ud589\ud560 \uc218 \uc788\uc73c\uba70, \uc815\ucc45\uc801\uc778 \uacc4\ud68d\uc5d0 \ub9de\ucd94\uc5b4 \uc2e4\ud589\ub418\uc5b4\uc57c\ud558\ubbc0\ub85c 0\ubcf4\ub2e4 \uc791\uc544\uc9c0\ub294 \uac12\uc774 \uc785\ub825\ub418\ub294 \uacbd\uc6b0 \uc2e4\ud589\uc744 \uc911\ub2e8\ud569\ub2c8\ub2e4.\r\n     */\r\n    /*\r\n     * This function decreases the amount of circulated tokens that are distributed on the contract.\r\n     * The circulated token is referring to the Unlock tokens out of the contract Owner's total supply, so the Charge Amount is not affected (refer back to the Balance definition above).\r\n     * This function decreases in the Unlock Amount as well as in the Balance.\r\n     */\r\n    function decreaseCirculation(uint256 amount) external onlyOwner returns (uint256) {\r\n        require(!isLock);\r\n        _tokenContainers[msg.sender].unlockAmount = _tokenContainers[msg.sender].unlockAmount.sub(amount);\r\n        _tokenContainers[msg.sender].balance = _tokenContainers[msg.sender].balance.sub(amount);\r\n        emit ChangeCirculation(_tokenContainers[msg.sender].unlockAmount);\r\n        return _tokenContainers[msg.sender].unlockAmount;\r\n    }\r\n\r\n    /*\r\n     * \ud2b9\uc815 \uc0ac\uc6a9\uc790(ICO, PreSale \uad6c\ub9e4\uc790)\uac00 \uad6c\ub9e4\ud55c \uae08\uc561 \ub9cc\ud07c\uc758 \ucda9\uc804\ub7c9\uc744 \uc9c1\uc811 \uc785\ub825\ud560 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\r\n     * \ucee8\ud2b8\ub799\ud2b8 \ub0b4 \ud1a0\ud070\uc758 \uc720\ud1b5\ub7c9\uc5d0 \ub9de\ucd94\uc5b4 \ub3d9\uc791\ud558\ubbc0\ub85c, Owner\uc758 Balance\uac00 \ubd80\uc871\ud558\uba74 \uc2e4\ud589\uc744 \uc911\ub2e8\ud799\ub2c8\ub2e4.\r\n     * \ucda9\uc804\ud55c \ud1a0\ud070\uc740 lock\uc778 \uc0c1\ud0dc\ub85c \uc2dc\uc791\ub418\uba70, charge() \ud568\uc218\ub294 \ucda9\uc804\uacfc \ub3d9\uc2dc\uc5d0 Unlock\ud558\ub294 \uc591\uc744 \uc9c0\uc815\ud558\uc5ec\r\n     * increaseUnlockAmount() \ud568\uc218\uc758 \uc2e4\ud589 \ud69f\uc218\ub97c \uc904\uc77c \uc218 \uc788\ub2e4.\r\n     */\r\n    /*\r\n     * This function is used to directly input the token amount that is purchased by particular Holders (ICO, Pre-sale buyers). It can be performed by the Owner or the Delegator.\r\n     * Since the contract operates in concurrent to the tokens in circulation, the function will fail to execute when Owner's balance is insuffient. \r\n     * All charged tokens are locked amount. \r\n     */\r\n    function charge(address holder, uint256 chargeAmount, uint256 unlockAmount) external ownerOrDelegator {\r\n        require(!isLock);\r\n        require(holder != address(0));\r\n        require(holder != owner());\r\n        require(chargeAmount > 0);\r\n        require(chargeAmount >= unlockAmount);\r\n        require(_tokenContainers[owner()].balance >= chargeAmount);\r\n\r\n        _tokenContainers[owner()].balance = _tokenContainers[owner()].balance.sub(chargeAmount);\r\n\r\n        _tokenContainers[holder].chargeAmount = _tokenContainers[holder].chargeAmount.add(chargeAmount);\r\n        _tokenContainers[holder].unlockAmount = _tokenContainers[holder].unlockAmount.add(unlockAmount);\r\n        _tokenContainers[holder].balance = _tokenContainers[holder].balance.add(unlockAmount);\r\n        \r\n        emit Charge(holder, chargeAmount, unlockAmount);\r\n    }\r\n    \r\n    /*\r\n     * \ud2b9\uc815 \uc0ac\uc6a9\uc790(ICO, PreSale \uad6c\ub9e4\uc790)\uac00 \uad6c\ub9e4\ud55c \uae08\uc561 \uc548\uc5d0\uc11c \ud574\uae08\ub7c9\uc744 \ubcc0\uacbd\ud560 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\r\n     * \ucd1d \ucda9\uc804\ub7c9 \uc548\uc5d0\uc11c \ubcc0\ud654\uac00 \uc77c\uc5b4\ub098\ubbc0\ub85c Unlock Amount\uac00 Charge Amount\ubcf4\ub2e4 \ucee4\uc9c8 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\r\n     */\r\n    /*\r\n     * This function is used to change the Unlock Amount of tokens that is purchased by particular Holders (ICO, Pre-sale buyers).\r\n     * Unlock Amount cannot be larger than Charge Amount because changes occur within the total charge amount.\r\n     */\r\n    function increaseUnlockAmount(address holder, uint256 unlockAmount) external ownerOrDelegator {\r\n        require(!isLock);\r\n        require(holder != address(0));\r\n        require(holder != owner());\r\n        require(_tokenContainers[holder].chargeAmount >= _tokenContainers[holder].unlockAmount.add(unlockAmount));\r\n\r\n        _tokenContainers[holder].unlockAmount = _tokenContainers[holder].unlockAmount.add(unlockAmount);\r\n        _tokenContainers[holder].balance = _tokenContainers[holder].balance.add(unlockAmount);\r\n        \r\n        emit IncreaseUnlockAmount(holder, unlockAmount);\r\n    }\r\n    \r\n    /*\r\n     * \ud2b9\uc815 \uc0ac\uc6a9\uc790(ICO, PreSale \uad6c\ub9e4\uc790)\uac00 \uad6c\ub9e4\ud55c \uae08\uc561 \uc548\uc5d0\uc11c \ud574\uae08\ub7c9\uc744 \ubcc0\uacbd\ud560 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\r\n     * Balance\ub97c Lock \uc0c1\ud0dc\ub85c \uc804\ud658\ud558\ub294 \uac83\uc774\ubbc0\ub85c Lock Amount\uc758 \uac12\uc740 Balance\ubcf4\ub2e4 \ucee4\uc9c8 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\r\n     */\r\n    /*\r\n     * This function is used to change the Unlock Amount of tokens that is purchased by particular Holders (ICO, Pre-sale buyers).\r\n     * Since the Balance starts from a locked state, the number of locked tokens cannot be greater than the Balance.\r\n     */\r\n    function decreaseUnlockAmount(address holder, uint256 lockAmount) external ownerOrDelegator {\r\n        require(!isLock);\r\n        require(holder != address(0));\r\n        require(holder != owner());\r\n        require(_tokenContainers[holder].balance >= lockAmount);\r\n\r\n        _tokenContainers[holder].unlockAmount = _tokenContainers[holder].unlockAmount.sub(lockAmount);\r\n        _tokenContainers[holder].balance = _tokenContainers[holder].balance.sub(lockAmount);\r\n        \r\n        emit DecreaseUnlockAmount(holder, lockAmount);\r\n    }\r\n\r\n    /*\r\n     * \ud2b9\uc815 \uc0ac\uc6a9\uc790(ICO, PreSale \uad6c\ub9e4\uc790)\uac00 \uad6c\ub9e4\ud55c \uae08\uc561 \uc548\uc5d0\uc11c \uc804\uccb4\ub97c \ud574\uae08\ud560 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\r\n     * Charge Amount \uc911 Unlock Amount \ub7c9\uc744 \uc81c\uc678\ud55c \ub098\uba38\uc9c0 \ub9cc\ud07c\uc744 \uc77c\uad04\uc801\uc73c\ub85c \ud574\uc81c\ud569\ub2c8\ub2e4.\r\n     */\r\n    /*\r\n     * This function is used to change the Unlock Amount of tokens that is purchased by particular Holders (ICO, Pre-sale buyers).\r\n     * It unlocks all locked tokens in the Charge Amount, other than tokens already unlocked. \r\n     */\r\n    function unlockAmountAll(address holder) external ownerOrDelegator {\r\n        require(!isLock);\r\n        require(holder != address(0));\r\n        require(holder != owner());\r\n\r\n        uint256 unlockAmount = _tokenContainers[holder].chargeAmount.sub(_tokenContainers[holder].unlockAmount);\r\n\r\n        require(unlockAmount > 0);\r\n        \r\n        _tokenContainers[holder].unlockAmount = _tokenContainers[holder].unlockAmount.add(unlockAmount);\r\n        _tokenContainers[holder].balance = _tokenContainers[holder].balance.add(unlockAmount);\r\n    }\r\n\r\n    /*\r\n     * \uacc4\uc57d \uc7a0\uae08\r\n     * \uacc4\uc57d\uc774 \uc7a0\uae30\uba74 \ucee8\ud2b8\ub799\ud2b8\uc758 \uac70\ub798\uac00 \uc911\ub2e8\ub41c \uc0c1\ud0dc\uac00 \ub418\uba70,\r\n     * \uac70\ub798\uac00 \uc911\ub2e8\ub41c \uc0c1\ud0dc\uc5d0\uc11c\ub294 Owner\uc640 Delegator\ub97c \ud3ec\ud568\ud55c \ubaa8\ub4e0 Holder\ub294 \uac70\ub798\ub97c \ud560 \uc218 \uc5c6\uac8c \ub41c\ub2e4.\r\n     * \ubaa8\ub4e0 \uac70\ub798\uac00 \uc911\ub2e8\ub41c \uc0c1\ud0dc\uc5d0\uc11c \ubaa8\ub4e0 Holder\uc758 \uc0c1\ud0dc\uac00 \ubcc0\uacbd\ub418\uc9c0 \uc54a\uac8c \ub9cc\ub4e0 \ud6c4\uc5d0\r\n     * \ud1a0\ud070 -> \ucf54\uc778 \uc804\ud658 \uc808\ucc28\ub97c \uc9c4\ud589\ud558\uae30 \uc704\ud568\uc774\ub2e4.\r\n     * \ub2e8, \uc774 \uc0c1\ud0dc\uc5d0\uc11c\ub294 Exchange Contract\ub97c Owner\uac00 \uc9c1\uc811 Delegator\ub85c \uc784\uba85\ud558\uc5ec\r\n     * Holder\uc758 \uc694\uccad\uc744 \ucc98\ub9ac\ud558\ub3c4\ub85d \ud558\uba70, \uc774\ub54c\ub294 \ud1a0\ud070 -> \ucf54\uc778 \uad50\ud658\ud68c\uc218\ub97c \uc704\ud55c exchange(), withdraw() \ud568\uc218 \uc2e4\ud589\ub9cc \ud5c8\uc6a9\uc774 \ub41c\ub2e4.\r\n     */\r\n    /*\r\n     * Contract lock\r\n     * If the contract is locked, all transactions will be suspended.\r\n     * All Holders including Owner and Delegator will not be able to make transaction during suspension.\r\n     * After all transactions have been stopped and all Holders have not changed their status\r\n     * This function is created primarily for the token swap event. \r\n     * In this process, it's important to note that the Owner of the Exchange contract should directly appoint a delegator when handling Holders' requests.\r\n     * Only the exchange () and withdraw () are allowed to be executed for token swap.\r\n     */\r\n    function lock() external onlyOwner returns (bool) {\r\n        isLock = true;\r\n        return isLock;\r\n    }\r\n\r\n    /*\r\n     * \uacc4\uc57d \uc7a0\uae08 \ud574\uc81c\r\n     * \uc7a0\uae34 \uacc4\uc57d\uc744 \ud574\uc81c\ud560 \ub54c \uc0ac\uc6a9\ub41c\ub2e4.\r\n     */\r\n    /*\r\n     * Release contract lock\r\n     * The function is used to revert a locked contract to a normal state. \r\n     */\r\n    function unlock() external onlyOwner returns (bool) {\r\n        isLock = false;\r\n        return isLock;\r\n    }\r\n    \r\n    /*\r\n     * \ud1a0\ud070 \uad50\ud658 \ucc98\ub9ac\uc6a9 \uc678\ubd80 \ud638\ucd9c \ud568\uc218\r\n     * \uacc4\uc57d \uc804\uccb4\uac00 \uc7a0\uae34 \uc0c1\ud0dc\uc77c \ub54c(\uad50\ud658 \ucc98\ub9ac \uc911 \uacc4\uc57d \uc911\ub2e8),\r\n     * \uc678\ubd80\uc5d0\uc11c\ub9cc \ud638\ucd9c \uac00\ub2a5\ud558\uba70, Delegator\uc774\uba74\uc11c Contract\uc778 \uacbd\uc6b0\uc5d0\ub9cc \ud638\ucd9c \uac00\ub2a5\ud558\ub2e4.\r\n     */\r\n    /*\r\n     * It is an external call function for token exchange processing\r\n     * This function is used when the entire contract is locked (contract lock during the token swap),\r\n     * It can be called only externally. Also, it can be only called when the agent is both Delegator and Contract.\r\n     */\r\n    function exchange(address holder) external onlyDelegator returns (bool) {\r\n        require(isLock);    // lock state only\r\n        require((delegator() == msg.sender) && isContract(msg.sender));    // contract delegator only\r\n        \r\n        uint256 balance = _tokenContainers[holder].balance;\r\n        _tokenContainers[holder].balance = 0;\r\n        _tokenContainers[msg.sender].balance = _tokenContainers[msg.sender].balance.add(balance);\r\n        \r\n        emit Exchange(holder, msg.sender, balance);\r\n        return true;\r\n    }\r\n    \r\n    /*\r\n     * \ud1a0\ud070 \uad50\ud658 \ucc98\ub9ac \ud6c4 \ud68c\uc218\ub41c \ud1a0\ud070\uc744 Owner\ud55c\ud14c \ub3cc\ub824\uc8fc\ub294 \ud568\uc218\r\n     * \uacc4\uc57d \uc804\uccb4\uac00 \uc7a0\uae34 \uc0c1\ud0dc\uc77c \ub54c(\uad50\ud658 \ucc98\ub9ac \uc911 \uacc4\uc57d \uc911\ub2e8),\r\n     * \uc678\ubd80\uc5d0\uc11c\ub9cc \ud638\ucd9c \uac00\ub2a5\ud558\uba70, Delegator\uc774\uba74\uc11c Contract\uc778 \uacbd\uc6b0\uc5d0\ub9cc \ud638\ucd9c \uac00\ub2a5\ud558\ub2e4.\r\n     */\r\n    /*\r\n     * This is a function in which the Delegator returns tokens to the Owner after the token swap process\r\n     * This function is used when the entire contract is locked (contract lock during the token swap),\r\n     * It can be called only externally. Also, it can be only called when the agent is both Delegator and Contract Owner.\r\n     */\r\n    function withdraw() external onlyDelegator returns (bool) {\r\n        require(isLock);    // lock state only\r\n        require((delegator() == msg.sender) && isContract(msg.sender));    // contract delegator only\r\n        \r\n        uint256 balance = _tokenContainers[msg.sender].balance;\r\n        _tokenContainers[msg.sender].balance = 0;\r\n        _tokenContainers[owner()].balance = _tokenContainers[owner()].balance.add(balance);\r\n        \r\n        emit Withdraw(msg.sender, balance);\r\n    }\r\n    \r\n    /*\r\n     * \ud604\uc7ac\uc758 \uc8fc\uc18c\uac00 \uc5d4\uc9c4\ub0b4\uc5d0 \ucc28\uc9c0\ud558\uace0 \uc788\ub294 \ucf54\ub4dc\uc758 \ud06c\uae30\ub97c \uacc4\uc0b0\ud558\uc5ec \ucee8\ud2b8\ub799\ud2b8\uc778\uc9c0 \ud655\uc778\ud558\ub294 \ub3c4\uad6c\r\n     * \ucee8\ud2b8\ub799\ud2b8\uc778 \uacbd\uc6b0\uc5d0\ub9cc \uc800\uc7a5\ub41c \ucf54\ub4dc\uc758 \ud06c\uae30\uac00 \uc874\uc7ac\ud558\ubbc0\ub85c \ucf54\ub4dc\uc758 \ud06c\uae30\uac00 \uc874\uc7ac\ud55c\ub2e4\uba74\r\n     * \ucee8\ud2b8\ub799\ud2b8\ub85c \ud310\ub2e8\ud560 \uc218\uc788\ub2e4.\r\n     */\r\n    /*\r\n     * This is a tool used for confirming a contract. It determines the size of code that the current address occupies within the blockchain network.\r\n     * Since the size of a stored code exists only in the case of a contract, it is can be used as a validation tool.\r\n     */\r\n    function isContract(address addr) private returns (bool) {\r\n      uint size;\r\n      assembly { size := extcodesize(addr) }\r\n      return size > 0;\r\n    }\r\n}\r\n\r\ncontract SymToken is ERC20Like {\r\n    string public name = \"SymVerse\";\r\n    string public symbol = \"SYM\";\r\n    uint256 public decimals = 18;\r\n\r\n    constructor () public {\r\n        _totalSupply = 1000000000 * (10 ** decimals);\r\n        _tokenContainers[msg.sender].chargeAmount = _totalSupply;\r\n        emit Charge(msg.sender, _tokenContainers[msg.sender].chargeAmount, _tokenContainers[msg.sender].unlockAmount);\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseCirculation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"receiptAccountOf\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isDelegator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"exchange\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"availableBalanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"holder\",\"type\":\"address\"},{\"name\":\"chargeAmount\",\"type\":\"uint256\"},{\"name\":\"unlockAmount\",\"type\":\"uint256\"}],\"name\":\"charge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"chargeAmountOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"circulationAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"dissmissDelegator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"holder\",\"type\":\"address\"},{\"name\":\"unlockAmount\",\"type\":\"uint256\"}],\"name\":\"increaseUnlockAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"unlockAmountOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"delegator\",\"type\":\"address\"}],\"name\":\"appointDelegator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseCirculation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"delegator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"holder\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"holder\",\"type\":\"address\"},{\"name\":\"lockAmount\",\"type\":\"uint256\"}],\"name\":\"decreaseUnlockAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"unlockAmountAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"lock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"circulationAmount\",\"type\":\"uint256\"}],\"name\":\"ChangeCirculation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"chargeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"unlockAmount\",\"type\":\"uint256\"}],\"name\":\"Charge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"unlockAmount\",\"type\":\"uint256\"}],\"name\":\"IncreaseUnlockAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"unlockAmount\",\"type\":\"uint256\"}],\"name\":\"DecreaseUnlockAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"exchangeHolder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Exchange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousDelegator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newDelegator\",\"type\":\"address\"}],\"name\":\"DelegateAppointed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "ContractName": "SymToken", "CompilerVersion": "v0.5.8+commit.23d335f2", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://2f9b1b5659027d24ec3c0ec6ce4d7c392bd13be6fa516d86b711da6337b4e713"}