{"SourceCode": "pragma solidity ^0.4.8;\r\n\r\n// \uc18c\uc720\uc790 \uad00\ub9ac\uc6a9 \uacc4\uc57d\r\ncontract Owned {\r\n    // \uc0c1\ud0dc \ubcc0\uc218\r\n    address public owner; // \uc18c\uc720\uc790 \uc8fc\uc18c\r\n\r\n    // \uc18c\uc720\uc790 \ubcc0\uacbd \uc2dc \uc774\ubca4\ud2b8\r\n    event TransferOwnership(address oldaddr, address newaddr);\r\n\r\n    // \uc18c\uc720\uc790 \ud55c\uc815 \uba54\uc11c\ub4dc\uc6a9 \uc218\uc2dd\uc790\r\n    modifier onlyOwner() { if (msg.sender != owner) return; _; }\r\n\r\n    // \uc0dd\uc131\uc790\r\n    function Owned() public {\r\n        owner = msg.sender; // \ucc98\uc74c\uc5d0 \uacc4\uc57d\uc744 \uc0dd\uc131\ud55c \uc8fc\uc18c\ub97c \uc18c\uc720\uc790\ub85c \ud55c\ub2e4\r\n    }\r\n    \r\n    // (1) \uc18c\uc720\uc790 \ubcc0\uacbd\r\n    function transferOwnership(address _new) onlyOwner public {\r\n        address oldaddr = owner;\r\n        owner = _new;\r\n        emit TransferOwnership(oldaddr, owner);\r\n    }\r\n}\r\n\r\n// (2) \ud68c\uc6d0 \uad00\ub9ac\uc6a9 \uacc4\uc57d\r\ncontract Members is Owned {\r\n    // (3) \uc0c1\ud0dc \ubcc0\uc218 \uc120\uc5b8\r\n    address public coin; // \ud1a0\ud070(\uac00\uc0c1 \ud654\ud3d0) \uc8fc\uc18c\r\n    MemberStatus[] public status; // \ud68c\uc6d0 \ub4f1\uae09 \ubc30\uc5f4\r\n    mapping(address => History) public tradingHistory; // \ud68c\uc6d0\ubcc4 \uac70\ub798 \uc774\ub825\r\n     \r\n    // (4) \ud68c\uc6d0 \ub4f1\uae09\uc6a9 \uad6c\uc870\uccb4\r\n    struct MemberStatus {\r\n        string name; // \ub4f1\uae09\uba85\r\n        uint256 times; // \ucd5c\uc800 \uac70\ub798 \ud68c\uc218\r\n        uint256 sum; // \ucd5c\uc800 \uac70\ub798 \uae08\uc561\r\n        int8 rate; // \uce90\uc2dc\ubc31 \ube44\uc728\r\n    }\r\n    // \uac70\ub798 \uc774\ub825\uc6a9 \uad6c\uc870\uccb4\r\n    struct History {\r\n        uint256 times; // \uac70\ub798 \ud68c\uc218\r\n        uint256 sum; // \uac70\ub798 \uae08\uc561\r\n        uint256 statusIndex; // \ub4f1\uae09 \uc778\ub371\uc2a4\r\n    }\r\n \r\n    // (5) \ud1a0\ud070 \ud55c\uc815 \uba54\uc11c\ub4dc\uc6a9 \uc218\uc2dd\uc790\r\n    modifier onlyCoin() { if (msg.sender == coin) _; }\r\n     \r\n    // (6) \ud1a0\ud070 \uc8fc\uc18c \uc124\uc815\r\n    function setCoin(address _addr) onlyOwner public {\r\n        coin = _addr;\r\n    }\r\n     \r\n    // (7) \ud68c\uc6d0 \ub4f1\uae09 \ucd94\uac00\r\n    function pushStatus(string _name, uint256 _times, uint256 _sum, int8 _rate) onlyOwner public {\r\n        status.push(MemberStatus({\r\n            name: _name,\r\n            times: _times,\r\n            sum: _sum,\r\n            rate: _rate\r\n        }));\r\n    }\r\n \r\n    // (8) \ud68c\uc6d0 \ub4f1\uae09 \ub0b4\uc6a9 \ubcc0\uacbd\r\n    function editStatus(uint256 _index, string _name, uint256 _times, uint256 _sum, int8 _rate) onlyOwner public {\r\n        if (_index < status.length) {\r\n            status[_index].name = _name;\r\n            status[_index].times = _times;\r\n            status[_index].sum = _sum;\r\n            status[_index].rate = _rate;\r\n        }\r\n    }\r\n     \r\n    // (9) \uac70\ub798 \ub0b4\uc5ed \uac31\uc2e0\r\n    function updateHistory(address _member, uint256 _value) onlyCoin public {\r\n        tradingHistory[_member].times += 1;\r\n        tradingHistory[_member].sum += _value;\r\n        // \uc0c8\ub85c\uc6b4 \ud68c\uc6d0 \ub4f1\uae09 \uacb0\uc815(\uac70\ub798\ub9c8\ub2e4 \uc2e4\ud589)\r\n        uint256 index;\r\n        int8 tmprate;\r\n        for (uint i = 0; i < status.length; i++) {\r\n            // \ucd5c\uc800 \uac70\ub798 \ud69f\uc218, \ucd5c\uc800 \uac70\ub798 \uae08\uc561 \ucda9\uc871 \uc2dc \uac00\uc7a5 \uce90\uc2dc\ubc31 \ube44\uc728\uc774 \uc88b\uc740 \ub4f1\uae09\uc73c\ub85c \uc124\uc815\r\n            if (tradingHistory[_member].times >= status[i].times &&\r\n                tradingHistory[_member].sum >= status[i].sum &&\r\n                tmprate < status[i].rate) {\r\n                index = i;\r\n            }\r\n        }\r\n        tradingHistory[_member].statusIndex = index;\r\n    }\r\n\r\n    // (10) \uce90\uc2dc\ubc31 \ube44\uc728 \ud68d\ub4dd(\ud68c\uc6d0\uc758 \ub4f1\uae09\uc5d0 \ud574\ub2f9\ud558\ub294 \ube44\uc728 \ud655\uc778)\r\n    function getCashbackRate(address _member) public constant returns (int8 rate){\r\n        rate = status[tradingHistory[_member].statusIndex].rate;\r\n    }\r\n}\r\n     \r\n// (11) \ud68c\uc6d0 \uad00\ub9ac \uae30\ub2a5\uc774 \uad6c\ud604\ub41c \uac00\uc0c1 \ud654\ud3d0\r\ncontract OreOreCoin is Owned{\r\n    // \uc0c1\ud0dc \ubcc0\uc218 \uc120\uc5b8\r\n    string public name; // \ud1a0\ud070 \uc774\ub984\r\n    string public symbol; // \ud1a0\ud070 \ub2e8\uc704\r\n    uint8 public decimals; // \uc18c\uc218\uc810 \uc774\ud558 \uc790\ub9bf\uc218\r\n    uint256 public totalSupply; // \ud1a0\ud070 \ucd1d\ub7c9\r\n    mapping (address => uint256) public balanceOf; // \uac01 \uc8fc\uc18c\uc758 \uc794\uace0\r\n    mapping (address => int8) public blackList; // \ube14\ub799\ub9ac\uc2a4\ud2b8\r\n    mapping (address => Members) public members; // \uac01 \uc8fc\uc18c\uc758 \ud68c\uc6d0 \uc815\ubcf4\r\n     \r\n    // \uc774\ubca4\ud2b8 \uc54c\ub9bc\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Blacklisted(address indexed target);\r\n    event DeleteFromBlacklist(address indexed target);\r\n    event RejectedPaymentToBlacklistedAddr(address indexed from, address indexed to, uint256 value);\r\n    event RejectedPaymentFromBlacklistedAddr(address indexed from, address indexed to, uint256 value);\r\n    event Cashback(address indexed from, address indexed to, uint256 value);\r\n     \r\n    // \uc0dd\uc131\uc790\r\n    function OreOreCoin(uint256 _supply, string _name, string _symbol, uint8 _decimals) public {\r\n        balanceOf[msg.sender] = _supply;\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n        totalSupply = _supply;\r\n    }\r\n \r\n    // \uc8fc\uc18c\ub97c \ube14\ub799\ub9ac\uc2a4\ud2b8\uc5d0 \ub4f1\ub85d\r\n    function blacklisting(address _addr) onlyOwner public {\r\n        blackList[_addr] = 1;\r\n        emit Blacklisted(_addr);\r\n    }\r\n \r\n    // \uc8fc\uc18c\ub97c \ube14\ub799\ub9ac\uc2a4\ud2b8\uc5d0\uc11c \ud574\uc81c\r\n    function deleteFromBlacklist(address _addr) onlyOwner public {\r\n        blackList[_addr] = -1;\r\n        emit DeleteFromBlacklist(_addr);\r\n    }\r\n \r\n    // \ud68c\uc6d0 \uad00\ub9ac \uacc4\uc57d \uc124\uc815\r\n    function setMembers(Members _members) public {\r\n        members[msg.sender] = Members(_members);\r\n    }\r\n \r\n    // \uc1a1\uae08\r\n    function transfer(address _to, uint256 _value)  public{\r\n        // \ubd80\uc815 \uc1a1\uae08 \ud655\uc778\r\n        if (balanceOf[msg.sender] < _value) return;\r\n        if (balanceOf[_to] + _value < balanceOf[_to]) return;\r\n\r\n        // \ube14\ub799\ub9ac\uc2a4\ud2b8\uc5d0 \uc874\uc7ac\ud558\ub294 \uacc4\uc815\uc740 \uc785\ucd9c\uae08 \ubd88\uac00\r\n        if (blackList[msg.sender] > 0) {\r\n            emit RejectedPaymentFromBlacklistedAddr(msg.sender, _to, _value);\r\n        } else if (blackList[_to] > 0) {\r\n            emit RejectedPaymentToBlacklistedAddr(msg.sender, _to, _value);\r\n        } else {\r\n            // (12) \uce90\uc2dc\ubc31 \uae08\uc561\uc744 \uacc4\uc0b0(\uac01 \ub300\uc0c1\uc758 \ube44\uc728\uc744 \uc0ac\uc6a9)\r\n            uint256 cashback = 0;\r\n            if(members[_to] > address(0)) {\r\n                cashback = _value / 100 * uint256(members[_to].getCashbackRate(msg.sender));\r\n                members[_to].updateHistory(msg.sender, _value);\r\n            }\r\n \r\n            balanceOf[msg.sender] -= (_value - cashback);\r\n            balanceOf[_to] += (_value - cashback);\r\n \r\n            emit Transfer(msg.sender, _to, _value);\r\n            emit Cashback(_to, msg.sender, cashback);\r\n        }\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"members\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"blackList\",\"outputs\":[{\"name\":\"\",\"type\":\"int8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"blacklisting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"deleteFromBlacklist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_members\",\"type\":\"address\"}],\"name\":\"setMembers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_supply\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"target\",\"type\":\"address\"}],\"name\":\"Blacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"target\",\"type\":\"address\"}],\"name\":\"DeleteFromBlacklist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"RejectedPaymentToBlacklistedAddr\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"RejectedPaymentFromBlacklistedAddr\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Cashback\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldaddr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newaddr\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"}]", "ContractName": "OreOreCoin", "CompilerVersion": "v0.4.21+commit.dfe3193c", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000001c6f307be4c4687e60000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000c446176696e636920636f696e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034441430000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://acfddfee79809035f0960306aa3ff75c9c5cc193cd2dc34237542e12a4cdc7fe"}