{"SourceCode": "/**\r\n * ERC20 token\r\n *\r\n * https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 {\r\n  // token\u603b\u91cf\r\n  uint public totalSupply;\r\n  // \u83b7\u53d6\u8d26\u6237_owner\u62e5\u6709token\u7684\u6570\u91cf\r\n  function balanceOf(address _owner) constant returns (uint);\r\n  //\u83b7\u53d6\u8d26\u6237_spender\u53ef\u4ee5\u4ece\u8d26\u6237_owner\u4e2d\u8f6c\u51fatoken\u7684\u6570\u91cf\r\n  function allowance(address _owner, address _spender) constant returns (uint);\r\n  // \u4ece\u53d1\u9001\u8005\u8d26\u6237\u4e2d\u5f80_to\u8d26\u6237\u8f6c\u6570\u91cf\u4e3a_value\u7684token\r\n  function transfer(address _to, uint _value) returns (bool ok);\r\n  //\u4ece\u8d26\u6237_from\u4e2d\u5f80\u8d26\u6237_to\u8f6c\u6570\u91cf\u4e3a_value\u7684token\uff0c\u4e0eapprove\u65b9\u6cd5\u914d\u5408\u4f7f\u7528\r\n  function transferFrom(address _from, address _to, uint _value) returns (bool ok);\r\n  // \u6d88\u606f\u53d1\u9001\u8d26\u6237\u8bbe\u7f6e\u8d26\u6237_spender\u80fd\u4ece\u53d1\u9001\u8d26\u6237\u4e2d\u8f6c\u51fa\u6570\u91cf\u4e3a_value\u7684token\r\n  function approve(address _spender, uint _value) returns (bool ok);\r\n  //\u53d1\u751f\u8f6c\u8d26\u65f6\u5fc5\u987b\u8981\u89e6\u53d1\u7684\u4e8b\u4ef6, \u7531transfer\u51fd\u6570\u7684\u6700\u540e\u4e00\u884c\u4ee3\u7801\u89e6\u53d1\u3002\r\n  event Transfer(address indexed _from, address indexed _to, uint _value);\r\n  //\u5f53\u51fd\u6570approve(address spender, uint value)\u6210\u529f\u6267\u884c\u65f6\u5fc5\u987b\u89e6\u53d1\u7684\u4e8b\u4ef6\r\n  event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n}\r\n\r\n\r\n\r\n/**\r\n * \u5e26\u5b89\u5168\u68c0\u67e5\u7684\u6570\u5b66\u8fd0\u7b97\u7b26\r\n */\r\ncontract SafeMath {\r\n  function safeMul(uint a, uint b) internal returns (uint) {\r\n    uint c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeDiv(uint a, uint b) internal returns (uint) {\r\n    assert(b > 0);\r\n    uint c = a / b;\r\n    assert(a == b * c + a % b);\r\n    return c;\r\n  }\r\n\r\n  function safeSub(uint a, uint b) internal returns (uint) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function safeAdd(uint a, uint b) internal returns (uint) {\r\n    uint c = a + b;\r\n    assert(c>=a && c>=b);\r\n    return c;\r\n  }\r\n\r\n  function max64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  function min64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n    return a < b ? a : b;\r\n  }\r\n\r\n  function max256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  function min256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    return a < b ? a : b;\r\n  }\r\n\r\n  function assert(bool assertion) internal {\r\n    if (!assertion) {\r\n      throw;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n/**\r\n * \u4fee\u590d\u4e86ERC20 short address attack\u95ee\u9898\u7684\u6807\u51c6ERC20 Token.\r\n *\r\n * Based on:\r\n * https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\r\n */\r\ncontract StandardToken is ERC20, SafeMath {\r\n\r\n  //\u521b\u5efa\u4e00\u4e2a\u72b6\u6001\u53d8\u91cf\uff0c\u8be5\u7c7b\u578b\u5c06\u4e00\u4e9baddress\u6620\u5c04\u5230\u65e0\u7b26\u53f7\u6574\u6570uint256\u3002\r\n  mapping(address => uint) balances;\r\n  mapping (address => mapping (address => uint)) allowed;\r\n\r\n  /**\r\n   *\r\n   * \u4fee\u590dERC20 short address attack\r\n   *\r\n   * http://vessenes.com/the-erc20-short-address-attack-explained/\r\n   */\r\n  modifier onlyPayloadSize(uint size) {\r\n     if(msg.data.length < size + 4) {\r\n       throw;\r\n     }\r\n     _;\r\n  }\r\n\r\n  function transfer(address _to, uint _value) onlyPayloadSize(2 * 32) returns (bool success) {\r\n    //\u4ece\u6d88\u606f\u53d1\u9001\u8005\u8d26\u6237\u4e2d\u51cf\u53bbtoken\u6570\u91cf_value\r\n    balances[msg.sender] = safeSub(balances[msg.sender], _value);\r\n    //\u5f80\u63a5\u6536\u8d26\u6237\u589e\u52a0token\u6570\u91cf_value\r\n    balances[_to] = safeAdd(balances[_to], _value);\r\n    //\u89e6\u53d1\u8f6c\u5e01\u4ea4\u6613\u4e8b\u4ef6\r\n    Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint _value)  returns (bool success) {\r\n    var _allowance = allowed[_from][msg.sender];\r\n\r\n    //\u63a5\u6536\u8d26\u6237\u589e\u52a0token\u6570\u91cf_value\r\n    balances[_to] = safeAdd(balances[_to], _value);\r\n    //\u652f\u51fa\u8d26\u6237_from\u51cf\u53bbtoken\u6570\u91cf_value\r\n    balances[_from] = safeSub(balances[_from], _value);\r\n    //\u6d88\u606f\u53d1\u9001\u8005\u53ef\u4ee5\u4ece\u8d26\u6237_from\u4e2d\u8f6c\u51fa\u7684\u6570\u91cf\u51cf\u5c11_value\r\n    allowed[_from][msg.sender] = safeSub(_allowance, _value);\r\n    //\u89e6\u53d1\u8f6c\u5e01\u4ea4\u6613\u4e8b\u4ef6\r\n    Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function balanceOf(address _owner) constant returns (uint balance) {\r\n    return balances[_owner];\r\n  }\r\n\r\n  function approve(address _spender, uint _value) returns (bool success) {\r\n    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;\r\n    allowed[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address _owner, address _spender) constant returns (uint remaining) {\r\n    //\u5141\u8bb8_spender\u4ece_owner\u4e2d\u8f6c\u51fa\u7684token\u6570\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * \u5141\u8bb8token\u62e5\u6709\u8005\u51cf\u5c11token\u603b\u91cf\r\n * \u52a0Burned\u4e8b\u4ef6\u4f7f\u5176\u533a\u522b\u4e8e\u6b63\u5e38\u7684transfers\r\n */\r\ncontract BurnableToken is StandardToken {\r\n\r\n  address public constant BURN_ADDRESS = 0;\r\n\r\n  event Burned(address burner, uint burnedAmount);\r\n\r\n  /**\r\n   * \u9500\u6bc1Token\r\n   *\r\n   */\r\n  function burn(uint burnAmount) {\r\n    address burner = msg.sender;\r\n    balances[burner] = safeSub(balances[burner], burnAmount);\r\n    totalSupply = safeSub(totalSupply, burnAmount);\r\n    Burned(burner, burnAmount);\r\n    Transfer(burner, BURN_ADDRESS, burnAmount);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * \u53d1\u884cEthereum token.\r\n *\r\n * \u521b\u5efatoken\u603b\u91cf\u5e76\u5206\u914d\u7ed9owner.\r\n * owner\u4e4b\u540e\u53ef\u4ee5\u628atoken\u5206\u914d\u7ed9\u5176\u4ed6\u4eba\r\n * owner\u53ef\u4ee5\u9500\u6bc1token\r\n *\r\n */\r\ncontract HLCToken is BurnableToken {\r\n\r\n  string public name;  // Token\u540d\u79f0\uff0c\u4f8b\u5982\uff1aHalal chain token\r\n  string public symbol;  // Token\u6807\u8bc6\uff0c\u4f8b\u5982\uff1aHLC\r\n  uint8 public decimals = 18;  // \u6700\u591a\u7684\u5c0f\u6570\u4f4d\u6570 18 \u662f\u5efa\u8bae\u7684\u9ed8\u8ba4\u503c\r\n  uint256 public totalSupply;\r\n  function HLCToken(address _owner, string _name, string _symbol, uint _totalSupply, uint8 _decimals) {\r\n    name = _name;\r\n    symbol = _symbol;\r\n    totalSupply = _totalSupply * 10 ** uint256(_decimals);\r\n    decimals = _decimals;\r\n\r\n    // \u628a\u521b\u5efatoken\u7684\u603b\u91cf\u5206\u914d\u7ed9owner\r\n    balances[_owner] = totalSupply;\r\n  }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BURN_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"name\":\"_decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"burnedAmount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "ContractName": "HLCToken", "CompilerVersion": "v0.4.24+commit.e67f0147", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000093ae51140169a39d9564fd11902c1ddf8bc0ce2100000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000003b9aca000000000000000000000000000000000000000000000000000000000000000009000000000000000000000000000000000000000000000000000000000000000a48616c616c436861696e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003484c430000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://0c6b7d01008167d28f06518a4a9cb37532ac49a8d21ca6bc50b4d23b08b38617"}