{"SourceCode": "pragma solidity >=0.4.22 <0.6.0;\r\n\r\ninterface tokenRecipient { \r\n    function receiveApproval(address _from, uint256 _value, address _token, bytes calldata _extraData) external; \r\n}\r\n\r\ncontract TokenERC20 {\r\n    //\u4ee4\u724c\u7684\u516c\u5171\u53d8\u91cf\r\n    // Public variables of the token\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals = 18;\r\n    //\u5341\u516b\u4f4d\u662f\u5f3a\u70c8\u5efa\u8bae\u7684\u9ed8\u8ba4\u503c\uff0c\u907f\u514d\u66f4\u6539\u5b83\r\n    // 18 decimals is the strongly suggested default, avoid changing it\r\n    uint256 public totalSupply;\r\n\r\n    //\u8fd9\u5c06\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u6240\u6709\u4f59\u989d\u7684\u6570\u7ec4\r\n    // This creates an array with all balances\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    \r\n    //\u8fd9\u5c06\u5728\u533a\u5757\u94fe\u4e0a\u751f\u6210\u4e00\u4e2a\u516c\u5171\u4e8b\u4ef6\uff0c\u8be5\u4e8b\u4ef6\u5c06\u901a\u77e5\u5ba2\u6237\u7aef\r\n    // This generates a public event on the blockchain that will notify clients\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    \r\n    //\u8fd9\u5c06\u5728\u533a\u5757\u94fe\u4e0a\u751f\u6210\u4e00\u4e2a\u516c\u5171\u4e8b\u4ef6\uff0c\u8be5\u4e8b\u4ef6\u5c06\u901a\u77e5\u5ba2\u6237\u7aef\r\n    // This generates a public event on the blockchain that will notify clients\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    \r\n    //\u8fd9\u5c06\u901a\u77e5\u5ba2\u6237\u70e7\u6bc1\u7684\u6570\u91cf\r\n    // This notifies clients about the amount burnt\r\n    event Burn(address indexed from, uint256 value);\r\n    /**\r\n     * \u6784\u9020\u51fd\u6570\r\n     * Constructor function\r\n     *\r\n     * \u4f7f\u7528\u521d\u59cb\u4f9b\u5e94\u4ee4\u724c\u521d\u59cb\u5316\u5951\u7ea6\uff0c\u4ee5\u5411\u5951\u7ea6\u7684\u521b\u5efa\u8005\u63d0\u4f9b\u4ee4\u724c\r\n     * Initializes contract with initial supply tokens to the creator of the contract\r\n     */\r\n    constructor(\r\n        uint256 initialSupply,\r\n        string memory tokenName,\r\n        string memory tokenSymbol\r\n    ) \r\n    \r\n    public {\r\n        totalSupply = initialSupply * 10 ** uint256(decimals);  // Update total supply with the decimal amount\r\n        balanceOf[msg.sender] = totalSupply;                // Give the creator all initial tokens\r\n        name = tokenName;                                   // Set the name for display purposes\r\n        symbol = tokenSymbol;                               // Set the symbol for display purposes\r\n    }\r\n\r\n    /**\r\n     * \u5185\u90e8\u8f6c\u8d26\uff0c\u53ea\u80fd\u6309\u672c\u5408\u540c\u8c03\u7528\r\n     * Internal transfer, only can be called by this contract\r\n     */\r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n        //\u9632\u6b62\u4f20\u8f93\u52300x0\u5730\u5740\u3002\u4f7f\u7528\u71c3\u70e7()\r\n        // Prevent transfer to 0x0 address. Use burn() instead\r\n        require(_to != address(0x0));\r\n        //\u68c0\u67e5\u5bc4\u4ef6\u4eba\u662f\u5426\u6709\u8db3\u591f\u7684\u94b1\r\n        // Check if the sender has enough\r\n        require(balanceOf[_from] >= _value);\r\n        //\u68c0\u67e5\u6ea2\u51fa\r\n        // Check for overflows\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        //\u5c06\u5176\u4fdd\u5b58\u4e3a\u5c06\u6765\u7684\u65ad\u8a00\r\n        // Save this for an assertion in the future\r\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\r\n        //\u51cf\u53bb\u53d1\u9001\u8005\r\n        // Subtract from the sender\r\n        balanceOf[_from] -= _value;\r\n        //\u5411\u6536\u4ef6\u4eba\u6dfb\u52a0\u76f8\u540c\u7684\u5185\u5bb9\r\n        // Add the same to the recipient\r\n        balanceOf[_to] += _value;\r\n        emit Transfer(_from, _to, _value);\r\n        //\u65ad\u8a00\u7528\u4e8e\u4f7f\u7528\u9759\u6001\u5206\u6790\u6765\u53d1\u73b0\u4ee3\u7801\u4e2d\u7684bug\u3002\u4ed6\u4eec\u4e0d\u5e94\u8be5\u5931\u8d25\r\n        // Asserts are used to use static analysis to find bugs in your code. They should never fail\r\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n    }\r\n\r\n    /**\r\n     * \u4f20\u9012\u4ee4\u724c\r\n     * Transfer tokens\r\n     *\r\n     * \u5c06\u201c_value\u201d\u4ee4\u724c\u4ece\u60a8\u7684\u5e10\u6237\u53d1\u9001\u5230\u201c_to\u201d\r\n     * Send `_value` tokens to `_to` from your account\r\n     *\r\n     * _to\u6536\u4ef6\u4eba\u7684\u5730\u5740\r\n     * @param _to The address of the recipient\r\n     * \r\n     * _value\u53d1\u9001\u7684\u6570\u91cf\r\n     * @param _value the amount to send\r\n     */\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        _transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u4ece\u5176\u4ed6\u5730\u5740\u8f6c\u79fb\u4ee4\u724c\r\n     * Transfer tokens from other address\r\n     *\r\n     * \u4ee3\u8868\u201c_from\u201d\u5411\u201c_to\u201d\u53d1\u9001\u201c_value\u201d\u4ee4\u724c\r\n     * Send `_value` tokens to `_to` on behalf of `_from`\r\n     *\r\n     *  _from\u53d1\u4ef6\u4eba\u5730\u5740\r\n     * @param _from The address of the sender\r\n     * \r\n     *  _to\u6536\u4ef6\u4eba\u7684\u5730\u5740\r\n     * @param _to The address of the recipient\r\n     * \r\n     *  _value\u53d1\u9001\u7684\u6570\u91cf\r\n     * @param _value the amount to send\r\n     */\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(_value <= allowance[_from][msg.sender]);     // Check allowance\r\n        allowance[_from][msg.sender] -= _value;\r\n        _transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u9884\u7559\u5176\u4ed6\u5730\u5740\r\n     * Set allowance for other address\r\n     * \r\n     * \u5141\u8bb8\u201c_spender\u201d\u4ee3\u8868\u60a8\u82b1\u8d39\u4e0d\u8d85\u8fc7\u201c_value\u201d\u4ee4\u724c\r\n     * Allows `_spender` to spend no more than `_value` tokens on your behalf\r\n     *\r\n     * _spender\u6388\u6743\u4f7f\u7528\u7684\u5730\u5740\r\n     * @param _spender The address authorized to spend\r\n     * \r\n     * _value\u4ed6\u4eec\u53ef\u4ee5\u82b1\u8d39\u7684\u6700\u5927\u91d1\u989d\r\n     * @param _value the max amount they can spend\r\n     */\r\n    function approve(address _spender, uint256 _value) public\r\n        returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u9884\u7559\u5176\u4ed6\u5730\u5740\u53ca\u901a\u77e5\r\n     * Set allowance for other address and notify \r\n     * \r\n     *\u5141\u8bb8\u201c_spender\u201d\u4ee3\u8868\u60a8\u82b1\u8d39\u4e0d\u8d85\u8fc7\u201c_value\u201d\u4ee4\u724c\uff0c\u7136\u540eping\u5173\u4e8e\u5b83\u7684\u5951\u7ea6\r\n     * Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it \r\n     * \r\n     *_spender\u6388\u6743\u4f7f\u7528\u7684\u5730\u5740\r\n     * @param _spender The address authorized to spend\r\n     * \r\n     * _value\u4ed6\u4eec\u53ef\u4ee5\u82b1\u8d39\u7684\u6700\u5927\u91d1\u989d\r\n     * @param _value the max amount they can spend\r\n     * \r\n     * _ata\u5411\u6279\u51c6\u7684\u5408\u540c\u53d1\u9001\u4e00\u4e9b\u989d\u5916\u7684\u4fe1\u606f\r\n     * @param _extraData some extra information to send to the approved contract\r\n     */\r\n    function approveAndCall(address _spender, uint256 _value, bytes memory _extraData)\r\n        public\r\n        returns (bool success) {\r\n        tokenRecipient spender = tokenRecipient(_spender);\r\n        if (approve(_spender, _value)) {\r\n            spender.receiveApproval(msg.sender, _value, address(this), _extraData);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u6467\u6bc1\u4ee4\u724c\r\n     * Destroy tokens\r\n     *\r\n     * \u4e0d\u53ef\u9006\u5730\u4ece\u7cfb\u7edf\u4e2d\u5220\u9664' _value '\u4ee4\u724c\r\n     * Remove `_value` tokens from the system irreversibly\r\n     *\r\n     *  _value\u8981\u70e7\u7684\u94b1\u7684\u6570\u91cf\r\n     * @param _value the amount of money to burn\r\n     */\r\n    function burn(uint256 _value) public returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value);   // Check if the sender has enough\r\n        balanceOf[msg.sender] -= _value;            // Subtract from the sender\r\n        totalSupply -= _value;                      // Updates totalSupply\r\n        emit Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u9500\u6bc1\u6765\u81ea\u5176\u4ed6\u5e10\u6237\u7684\u4ee4\u724c\r\n     * Destroy tokens from other account\r\n     *\r\n     *\u4ee3\u8868\u201c_from\u201d\u4e0d\u53ef\u9006\u5730\u4ece\u7cfb\u7edf\u4e2d\u5220\u9664\u201c_value\u201d\u4ee4\u724c\u3002\r\n     * Remove `_value` tokens from the system irreversibly on behalf of `_from`.\r\n     *\r\n     *  _from\u53d1\u4ef6\u4eba\u5730\u5740\r\n     * @param _from the address of the sender\r\n     * \r\n     * _value\u8981\u70e7\u7684\u94b1\u7684\u6570\u91cf\r\n     * @param _value the amount of money to burn\r\n     */\r\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\r\n        require(balanceOf[_from] >= _value);                // Check if the targeted balance is enough\r\n        require(_value <= allowance[_from][msg.sender]);    // Check allowance\r\n        balanceOf[_from] -= _value;                         // Subtract from the targeted balance\r\n        allowance[_from][msg.sender] -= _value;             // Subtract from the sender's allowance\r\n        totalSupply -= _value;                              // Update totalSupply\r\n        emit Burn(_from, _value);\r\n        return true;\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]", "ContractName": "TokenERC20", "CompilerVersion": "v0.5.1+commit.c8a2cb62", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000000000000000000000000000000000000005f5e100000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000a4c69466520436861696e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034c46430000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "BSD-3-Clause", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://8fc5bf5a5f61bdd392ce712ca17739c85a994618ceb037f832303bcd5df821b0"}