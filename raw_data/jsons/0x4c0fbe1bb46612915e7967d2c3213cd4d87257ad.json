{"SourceCode": "pragma solidity ^0.4.18;\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/179\r\n */\r\ncontract ERC20Basic {\r\n  uint256 public totalSupply;\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @title Basic token\r\n * @dev Basic version of StandardToken, with no allowances.\r\n */\r\ncontract BasicToken is ERC20Basic {\r\n  using SafeMath for uint256;\r\n\r\n  mapping(address => uint256) balances;\r\n\r\n  /**\r\n  * @dev transfer token for a specified address\r\n  * @param _to The address to transfer to.\r\n  * @param _value The amount to be transferred.\r\n  */\r\n  function transfer(address _to, uint256 _value) public returns (bool) {\r\n    require(_to != address(0));\r\n    require(_value <= balances[msg.sender]);\r\n\r\n    // SafeMath.sub will throw if there is not enough balance.\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n  * @dev Gets the balance of the specified address.\r\n  * @param _owner The address to query the the balance of.\r\n  * @return An uint256 representing the amount owned by the passed address.\r\n  */\r\n  function balanceOf(address _owner) public view returns (uint256 balance) {\r\n    return balances[_owner];\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) public view returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\n/**\r\n * @title Standard ERC20 token\r\n *\r\n * @dev Implementation of the basic standard token.\r\n * @dev https://github.com/ethereum/EIPs/issues/20\r\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\r\n */\r\ncontract StandardToken is ERC20, BasicToken {\r\n\r\n  mapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n\r\n  /**\r\n   * @dev Transfer tokens from one address to another\r\n   * @param _from address The address which you want to send tokens from\r\n   * @param _to address The address which you want to transfer to\r\n   * @param _value uint256 the amount of tokens to be transferred\r\n   */\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n    require(_to != address(0));\r\n    require(_value <= balances[_from]);\r\n    require(_value <= allowed[_from][msg.sender]);\r\n\r\n    balances[_from] = balances[_from].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n    Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r\n   *\r\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\r\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\r\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   * @param _spender The address which will spend the funds.\r\n   * @param _value The amount of tokens to be spent.\r\n   */\r\n  function approve(address _spender, uint256 _value) public returns (bool) {\r\n    allowed[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\r\n   * @param _owner address The address which owns the funds.\r\n   * @param _spender address The address which will spend the funds.\r\n   * @return A uint256 specifying the amount of tokens still available for the spender.\r\n   */\r\n  function allowance(address _owner, address _spender) public view returns (uint256) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n  /**\r\n   * @dev Increase the amount of tokens that an owner allowed to a spender.\r\n   *\r\n   * approve should be called when allowed[_spender] == 0. To increment\r\n   * allowed value is better to use this function to avoid 2 calls (and wait until\r\n   * the first transaction is mined)\r\n   * From MonolithDAO Token.sol\r\n   * @param _spender The address which will spend the funds.\r\n   * @param _addedValue The amount of tokens to increase the allowance by.\r\n   */\r\n  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\r\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\r\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Decrease the amount of tokens that an owner allowed to a spender.\r\n   *\r\n   * approve should be called when allowed[_spender] == 0. To decrement\r\n   * allowed value is better to use this function to avoid 2 calls (and wait until\r\n   * the first transaction is mined)\r\n   * From MonolithDAO Token.sol\r\n   * @param _spender The address which will spend the funds.\r\n   * @param _subtractedValue The amount of tokens to decrease the allowance by.\r\n   */\r\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\r\n    uint oldValue = allowed[msg.sender][_spender];\r\n    if (_subtractedValue > oldValue) {\r\n      allowed[msg.sender][_spender] = 0;\r\n    } else {\r\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n    }\r\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n    return true;\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n    /**\r\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n     * account.\r\n     */\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n     * @param _newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        require(_newOwner != address(0));\r\n        OwnershipTransferred(owner, _newOwner);\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    /**\r\n     * @dev \uc0c8\ub85c\uc6b4 \uad00\ub9ac\uc790\uac00 \uc2b9\uc778\ud574\uc57c\ub9cc \uc18c\uc720\uad8c\uc774 \uc774\uc804\ub41c\ub2e4\r\n     */\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        \r\n        OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @title APIS Token\r\n * @dev APIS \ud1a0\ud070\uc744 \uc0dd\uc131\ud55c\ub2e4\r\n */\r\ncontract ApisToken is StandardToken, Ownable {\r\n    // \ud1a0\ud070\uc758 \uc774\ub984\r\n    string public constant name = \"APIS\";\r\n    \r\n    // \ud1a0\ud070\uc758 \ub2e8\uc704\r\n    string public constant symbol = \"APIS\";\r\n    \r\n    // \uc18c\uc218\uc810 \uc790\ub9ac\uc218. ETH 18\uc790\ub9ac\uc5d0 \ub9de\ucd98\ub2e4\r\n    uint8 public constant decimals = 18;\r\n    \r\n    // \uc9c0\uac11\ubcc4\ub85c \uc1a1\uae08/\uc218\uae08 \uae30\ub2a5\uc758 \uc7a0\uae34 \uc5ec\ubd80\ub97c \uc800\uc7a5\r\n    mapping (address => LockedInfo) public lockedWalletInfo;\r\n    \r\n    /**\r\n     * @dev \ud50c\ub7ab\ud3fc\uc5d0\uc11c \uc6b4\uc601\ud558\ub294 \ub9c8\uc2a4\ud130\ub178\ub4dc \uc2a4\ub9c8\ud2b8 \ucee8\ud2b8\ub809\ud2b8 \uc8fc\uc18c\r\n     */\r\n    mapping (address => bool) public manoContracts;\r\n    \r\n    \r\n    /**\r\n     * @dev \ud1a0\ud070 \uc9c0\uac11\uc758 \uc7a0\uae40 \uc18d\uc131\uc744 \uc815\uc758\r\n     * \r\n     * @param timeLockUpEnd timeLockUpEnd \uc2dc\uac04\uae4c\uc9c0 \uc1a1/\uc218\uae08\uc5d0 \ub300\ud55c \uc81c\ud55c\uc774 \uc801\uc6a9\ub41c\ub2e4. \uc774\ud6c4\uc5d0\ub294 \uc81c\ud55c\uc774 \ud480\ub9b0\ub2e4\r\n     * @param sendLock \ucd9c\uae08 \uc7a0\uae40 \uc5ec\ubd80(true : \uc7a0\uae40, false : \ud480\ub9bc)\r\n     * @param receiveLock \uc785\uae08 \uc7a0\uae40 \uc5ec\ubd80 (true : \uc7a0\uae40, false : \ud480\ub9bc)\r\n     */\r\n    struct LockedInfo {\r\n        uint timeLockUpEnd;\r\n        bool sendLock;\r\n        bool receiveLock;\r\n    } \r\n    \r\n    \r\n    /**\r\n     * @dev \ud1a0\ud070\uc774 \uc1a1\uae08\ub410\uc744 \ub54c \ubc1c\uc0dd\ud558\ub294 \uc774\ubca4\ud2b8\r\n     * @param from \ud1a0\ud070\uc744 \ubcf4\ub0b4\ub294 \uc9c0\uac11 \uc8fc\uc18c\r\n     * @param to \ud1a0\ud070\uc744 \ubc1b\ub294 \uc9c0\uac11 \uc8fc\uc18c\r\n     * @param value \uc804\ub2ec\ub418\ub294 \ud1a0\ud070\uc758 \uc591 (Satoshi)\r\n     */\r\n    event Transfer (address indexed from, address indexed to, uint256 value);\r\n    \r\n    /**\r\n     * @dev \ud1a0\ud070 \uc9c0\uac11\uc758 \uc1a1\uae08/\uc785\uae08 \uae30\ub2a5\uc774 \uc81c\ud55c\ub418\uc5c8\uc744 \ub54c \ubc1c\uc0dd\ud558\ub294 \uc774\ubca4\ud2b8\r\n     * @param target \uc81c\ud55c \ub300\uc0c1 \uc9c0\uac11 \uc8fc\uc18c\r\n     * @param timeLockUpEnd \uc81c\ud55c\uc774 \uc885\ub8cc\ub418\ub294 \uc2dc\uac04(UnixTimestamp)\r\n     * @param sendLock \uc9c0\uac11\uc5d0\uc11c\uc758 \uc1a1\uae08\uc744 \uc81c\ud55c\ud558\ub294\uc9c0 \uc5ec\ubd80(true : \uc81c\ud55c, false : \ud574\uc81c)\r\n     * @param receiveLock \uc9c0\uac11\uc73c\ub85c\uc758 \uc785\uae08\uc744 \uc81c\ud55c\ud558\ub294\uc9c0 \uc5ec\ubd80 (true : \uc81c\ud55c, false : \ud574\uc81c)\r\n     */\r\n    event Locked (address indexed target, uint timeLockUpEnd, bool sendLock, bool receiveLock);\r\n    \r\n    /**\r\n     * @dev \uc9c0\uac11\uc5d0 \ub300\ud55c \uc1a1\uae08/\uc785\uae08 \uc81c\ud55c\uc744 \ud574\uc81c\ud588\uc744 \ub54c \ubc1c\uc0dd\ud558\ub294 \uc774\ubca4\ud2b8\r\n     * @param target \ud574\uc81c \ub300\uc0c1 \uc9c0\uac11 \uc8fc\uc18c\r\n     */\r\n    event Unlocked (address indexed target);\r\n    \r\n    /**\r\n     * @dev \uc1a1\uae08 \ubc1b\ub294 \uc9c0\uac11\uc758 \uc785\uae08\uc774 \uc81c\ud55c\ub418\uc5b4\uc788\uc5b4\uc11c \uc1a1\uae08\uc774 \uac70\uc808\ub418\uc5c8\uc744 \ub54c \ubc1c\uc0dd\ud558\ub294 \uc774\ubca4\ud2b8\r\n     * @param from \ud1a0\ud070\uc744 \ubcf4\ub0b4\ub294 \uc9c0\uac11 \uc8fc\uc18c\r\n     * @param to (\uc785\uae08\uc774 \uc81c\ud55c\ub41c) \ud1a0\ud070\uc744 \ubc1b\ub294 \uc9c0\uac11 \uc8fc\uc18c\r\n     * @param value \uc804\uc1a1\ud558\ub824\uace0 \ud55c \ud1a0\ud070\uc758 \uc591(Satoshi)\r\n     */\r\n    event RejectedPaymentToLockedUpWallet (address indexed from, address indexed to, uint256 value);\r\n    \r\n    /**\r\n     * @dev \uc1a1\uae08\ud558\ub294 \uc9c0\uac11\uc758 \ucd9c\uae08\uc774 \uc81c\ud55c\ub418\uc5b4\uc788\uc5b4\uc11c \uc1a1\uae08\uc774 \uac70\uc808\ub418\uc5c8\uc744 \ub54c \ubc1c\uc0dd\ud558\ub294 \uc774\ubca4\ud2b8\r\n     * @param from (\ucd9c\uae08\uc774 \uc81c\ud55c\ub41c) \ud1a0\ud070\uc744 \ubcf4\ub0b4\ub294 \uc9c0\uac11 \uc8fc\uc18c\r\n     * @param to \ud1a0\ud070\uc744 \ubc1b\ub294 \uc9c0\uac11 \uc8fc\uc18c\r\n     * @param value \uc804\uc1a1\ud558\ub824\uace0 \ud55c \ud1a0\ud070\uc758 \uc591(Satoshi)\r\n     */\r\n    event RejectedPaymentFromLockedUpWallet (address indexed from, address indexed to, uint256 value);\r\n    \r\n    /**\r\n     * @dev \ud1a0\ud070\uc744 \uc18c\uac01\ud55c\ub2e4. \r\n     * @param burner \ud1a0\ud070\uc744 \uc18c\uac01\ud558\ub294 \uc9c0\uac11 \uc8fc\uc18c\r\n     * @param value \uc18c\uac01\ud558\ub294 \ud1a0\ud070\uc758 \uc591(Satoshi)\r\n     */\r\n    event Burn (address indexed burner, uint256 value);\r\n    \r\n    /**\r\n     * @dev \uc544\ud53c\uc2a4 \ud50c\ub7ab\ud3fc\uc5d0 \ub9c8\uc2a4\ud130\ub178\ub4dc \uc2a4\ub9c8\ud2b8 \ucee8\ud2b8\ub809\ud2b8\uac00 \ub4f1\ub85d\ub418\uac70\ub098 \ud574\uc81c\ub420 \ub54c \ubc1c\uc0dd\ud558\ub294 \uc774\ubca4\ud2b8\r\n     */\r\n    event ManoContractRegistered (address manoContract, bool registered);\r\n    \r\n    /**\r\n     * @dev \ucee8\ud2b8\ub799\ud2b8\uac00 \uc0dd\uc131\ub420 \ub54c \uc2e4\ud589. \ucee8\ud2b8\ub809\ud2b8 \uc18c\uc720\uc790 \uc9c0\uac11\uc5d0 \ubaa8\ub4e0 \ud1a0\ud070\uc744 \ud560\ub2f9\ud55c\ub2e4.\r\n     * \ubc1c\ud589\ub7c9\uc774\ub098 \uc774\ub984\uc740 \uc18c\uc2a4\ucf54\ub4dc\uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\ub3c4\ub85d \ubcc0\uacbd\ud558\uc600\uc74c\r\n     */\r\n    function ApisToken() public {\r\n        // \ucd1d APIS \ubc1c\ud589\ub7c9 (95\uc5b5 2\ucc9c\ub9cc)\r\n        uint256 supplyApis = 9520000000;\r\n        \r\n        // wei \ub2e8\uc704\ub85c \ud1a0\ud070 \ucd1d\ub7c9\uc744 \uc0dd\uc131\ud55c\ub2e4.\r\n        totalSupply = supplyApis * 10 ** uint256(decimals);\r\n        \r\n        balances[msg.sender] = totalSupply;\r\n        \r\n        Transfer(0x0, msg.sender, totalSupply);\r\n    }\r\n    \r\n    \r\n    /**\r\n     * @dev \uc9c0\uac11\uc744 \uc9c0\uc815\ub41c \uc2dc\uac04\uae4c\uc9c0 \uc81c\ud55c\uc2dc\ud0a4\uac70\ub098 \ud574\uc81c\uc2dc\ud0a8\ub2e4. \uc81c\ud55c \uc2dc\uac04\uc774 \uacbd\uacfc\ud558\uba74 \ubaa8\ub4e0 \uc81c\ud55c\uc774 \ud574\uc81c\ub41c\ub2e4.\r\n     * @param _targetWallet \uc81c\ud55c\uc744 \uc801\uc6a9\ud560 \uc9c0\uac11 \uc8fc\uc18c\r\n     * @param _timeLockEnd \uc81c\ud55c\uc774 \uc885\ub8cc\ub418\ub294 \uc2dc\uac04(UnixTimestamp)\r\n     * @param _sendLock (true : \uc9c0\uac11\uc5d0\uc11c \ud1a0\ud070\uc744 \ucd9c\uae08\ud558\ub294 \uae30\ub2a5\uc744 \uc81c\ud55c\ud55c\ub2e4.) (false : \uc81c\ud55c\uc744 \ud574\uc81c\ud55c\ub2e4)\r\n     * @param _receiveLock (true : \uc9c0\uac11\uc73c\ub85c \ud1a0\ud070\uc744 \uc785\uae08\ubc1b\ub294 \uae30\ub2a5\uc744 \uc81c\ud55c\ud55c\ub2e4.) (false : \uc81c\ud55c\uc744 \ud574\uc81c\ud55c\ub2e4)\r\n     */\r\n    function walletLock(address _targetWallet, uint _timeLockEnd, bool _sendLock, bool _receiveLock) onlyOwner public {\r\n        require(_targetWallet != 0x0);\r\n        \r\n        // If all locks are unlocked, set the _timeLockEnd to zero.\r\n        if(_sendLock == false && _receiveLock == false) {\r\n            _timeLockEnd = 0;\r\n        }\r\n        \r\n        lockedWalletInfo[_targetWallet].timeLockUpEnd = _timeLockEnd;\r\n        lockedWalletInfo[_targetWallet].sendLock = _sendLock;\r\n        lockedWalletInfo[_targetWallet].receiveLock = _receiveLock;\r\n        \r\n        if(_timeLockEnd > 0) {\r\n            Locked(_targetWallet, _timeLockEnd, _sendLock, _receiveLock);\r\n        } else {\r\n            Unlocked(_targetWallet);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @dev \uc9c0\uac11\uc758 \uc785\uae09/\ucd9c\uae08\uc744 \uc9c0\uc815\ub41c \uc2dc\uac04\uae4c\uc9c0 \uc81c\ud55c\uc2dc\ud0a8\ub2e4. \uc81c\ud55c \uc2dc\uac04\uc774 \uacbd\uacfc\ud558\uba74 \ubaa8\ub4e0 \uc81c\ud55c\uc774 \ud574\uc81c\ub41c\ub2e4.\r\n     * @param _targetWallet \uc81c\ud55c\uc744 \uc801\uc6a9\ud560 \uc9c0\uac11 \uc8fc\uc18c\r\n     * @param _timeLockUpEnd \uc81c\ud55c\uc774 \uc885\ub8cc\ub418\ub294 \uc2dc\uac04(UnixTimestamp)\r\n     */\r\n    function walletLockBoth(address _targetWallet, uint _timeLockUpEnd) onlyOwner public {\r\n        walletLock(_targetWallet, _timeLockUpEnd, true, true);\r\n    }\r\n    \r\n    /**\r\n     * @dev \uc9c0\uac11\uc758 \uc785\uae09/\ucd9c\uae08\uc744 \uc601\uc6d0\ud788(33658-9-27 01:46:39+00) \uc81c\ud55c\uc2dc\ud0a8\ub2e4.\r\n     * @param _targetWallet \uc81c\ud55c\uc744 \uc801\uc6a9\ud560 \uc9c0\uac11 \uc8fc\uc18c\r\n     */\r\n    function walletLockBothForever(address _targetWallet) onlyOwner public {\r\n        walletLock(_targetWallet, 999999999999, true, true);\r\n    }\r\n    \r\n    \r\n    /**\r\n     * @dev \uc9c0\uac11\uc5d0 \uc124\uc815\ub41c \uc785\ucd9c\uae08 \uc81c\ud55c\uc744 \ud574\uc81c\ud55c\ub2e4\r\n     * @param _targetWallet \uc81c\ud55c\uc744 \ud574\uc81c\ud558\uace0\uc790 \ud558\ub294 \uc9c0\uac11 \uc8fc\uc18c\r\n     */\r\n    function walletUnlock(address _targetWallet) onlyOwner public {\r\n        walletLock(_targetWallet, 0, false, false);\r\n    }\r\n    \r\n    /**\r\n     * @dev \uc9c0\uac11\uc758 \uc1a1\uae08 \uae30\ub2a5\uc774 \uc81c\ud55c\ub418\uc5b4\uc788\ub294\uc9c0 \ud655\uc778\ud55c\ub2e4.\r\n     * @param _addr \uc1a1\uae08 \uc81c\ud55c \uc5ec\ubd80\ub97c \ud655\uc778\ud558\ub824\ub294 \uc9c0\uac11\uc758 \uc8fc\uc18c\r\n     * @return isSendLocked (true : \uc81c\ud55c\ub418\uc5b4 \uc788\uc74c, \ud1a0\ud070\uc744 \ubcf4\ub0bc \uc218 \uc5c6\uc74c) (false : \uc81c\ud55c \uc5c6\uc74c, \ud1a0\ud070\uc744 \ubcf4\ub0bc \uc218 \uc788\uc74c)\r\n     * @return until \uc7a0\uaca8\uc788\ub294 \uc2dc\uac04, UnixTimestamp\r\n     */\r\n    function isWalletLocked_Send(address _addr) public constant returns (bool isSendLocked, uint until) {\r\n        require(_addr != 0x0);\r\n        \r\n        isSendLocked = (lockedWalletInfo[_addr].timeLockUpEnd > now && lockedWalletInfo[_addr].sendLock == true);\r\n        \r\n        if(isSendLocked) {\r\n            until = lockedWalletInfo[_addr].timeLockUpEnd;\r\n        } else {\r\n            until = 0;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @dev \uc9c0\uac11\uc758 \uc785\uae08 \uae30\ub2a5\uc774 \uc81c\ud55c\ub418\uc5b4\uc788\ub294\uc9c0 \ud655\uc778\ud55c\ub2e4.\r\n     * @param _addr \uc785\uae08 \uc81c\ud55c \uc5ec\ubd80\ub97c \ud655\uc778\ud558\ub824\ub294 \uc9c0\uac11\uc758 \uc8fc\uc18c\r\n     * @return (true : \uc81c\ud55c\ub418\uc5b4 \uc788\uc74c, \ud1a0\ud070\uc744 \ubc1b\uc744 \uc218 \uc5c6\uc74c) (false : \uc81c\ud55c \uc5c6\uc74c, \ud1a0\ud070\uc744 \ubc1b\uc744 \uc218 \uc788\uc74c)\r\n     */\r\n    function isWalletLocked_Receive(address _addr) public constant returns (bool isReceiveLocked, uint until) {\r\n        require(_addr != 0x0);\r\n        \r\n        isReceiveLocked = (lockedWalletInfo[_addr].timeLockUpEnd > now && lockedWalletInfo[_addr].receiveLock == true);\r\n        \r\n        if(isReceiveLocked) {\r\n            until = lockedWalletInfo[_addr].timeLockUpEnd;\r\n        } else {\r\n            until = 0;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @dev \uc694\uccad\uc790\uc758 \uc9c0\uac11\uc5d0 \uc1a1\uae08 \uae30\ub2a5\uc774 \uc81c\ud55c\ub418\uc5b4\uc788\ub294\uc9c0 \ud655\uc778\ud55c\ub2e4.\r\n     * @return (true : \uc81c\ud55c\ub418\uc5b4 \uc788\uc74c, \ud1a0\ud070\uc744 \ubcf4\ub0bc \uc218 \uc5c6\uc74c) (false : \uc81c\ud55c \uc5c6\uc74c, \ud1a0\ud070\uc744 \ubcf4\ub0bc \uc218 \uc788\uc74c)\r\n     */\r\n    function isMyWalletLocked_Send() public constant returns (bool isSendLocked, uint until) {\r\n        return isWalletLocked_Send(msg.sender);\r\n    }\r\n    \r\n    /**\r\n     * @dev \uc694\uccad\uc790\uc758 \uc9c0\uac11\uc5d0 \uc785\uae08 \uae30\ub2a5\uc774 \uc81c\ud55c\ub418\uc5b4\uc788\ub294\uc9c0 \ud655\uc778\ud55c\ub2e4.\r\n     * @return (true : \uc81c\ud55c\ub418\uc5b4 \uc788\uc74c, \ud1a0\ud070\uc744 \ubcf4\ub0bc \uc218 \uc5c6\uc74c) (false : \uc81c\ud55c \uc5c6\uc74c, \ud1a0\ud070\uc744 \ubcf4\ub0bc \uc218 \uc788\uc74c)\r\n     */\r\n    function isMyWalletLocked_Receive() public constant returns (bool isReceiveLocked, uint until) {\r\n        return isWalletLocked_Receive(msg.sender);\r\n    }\r\n    \r\n    \r\n    /**\r\n     * @dev \uc544\ud53c\uc2a4 \ud50c\ub7ab\ud3fc\uc5d0\uc11c \uc6b4\uc601\ud558\ub294 \uc2a4\ub9c8\ud2b8 \ucee8\ud2b8\ub809\ud2b8 \uc8fc\uc18c\ub97c \ub4f1\ub85d\ud558\uac70\ub098 \ud574\uc81c\ud55c\ub2e4.\r\n     * @param manoAddr \ub9c8\uc2a4\ud130\ub178\ub4dc \uc2a4\ub9c8\ud2b8 \ucee8\ud2b8\ub809\ucee8\ud2b8\ub809\ud2b8\r\n     * @param registered true : \ub4f1\ub85d, false : \ud574\uc81c\r\n     */\r\n    function registerManoContract(address manoAddr, bool registered) onlyOwner public {\r\n        manoContracts[manoAddr] = registered;\r\n        \r\n        ManoContractRegistered(manoAddr, registered);\r\n    }\r\n    \r\n    \r\n    /**\r\n     * @dev _to \uc9c0\uac11\uc73c\ub85c _apisWei \ub9cc\ud07c\uc758 \ud1a0\ud070\uc744 \uc1a1\uae08\ud55c\ub2e4.\r\n     * @param _to \ud1a0\ud070\uc744 \ubc1b\ub294 \uc9c0\uac11 \uc8fc\uc18c\r\n     * @param _apisWei \uc804\uc1a1\ub418\ub294 \ud1a0\ud070\uc758 \uc591\r\n     */\r\n    function transfer(address _to, uint256 _apisWei) public returns (bool) {\r\n        // \uc790\uc2e0\uc5d0\uac8c \uc1a1\uae08\ud558\ub294 \uac83\uc744 \ubc29\uc9c0\ud55c\ub2e4\r\n        require(_to != address(this));\r\n        \r\n        // \ub9c8\uc2a4\ud130\ub178\ub4dc \ucee8\ud2b8\ub809\ud2b8\uc77c \uacbd\uc6b0, APIS \uc1a1\uc218\uc2e0\uc5d0 \uc81c\ud55c\uc744 \ub450\uc9c0 \uc54a\ub294\ub2e4\r\n        if(manoContracts[msg.sender] || manoContracts[_to]) {\r\n            return super.transfer(_to, _apisWei);\r\n        }\r\n        \r\n        // \uc1a1\uae08 \uae30\ub2a5\uc774 \uc7a0\uae34 \uc9c0\uac11\uc778\uc9c0 \ud655\uc778\ud55c\ub2e4.\r\n        if(lockedWalletInfo[msg.sender].timeLockUpEnd > now && lockedWalletInfo[msg.sender].sendLock == true) {\r\n            RejectedPaymentFromLockedUpWallet(msg.sender, _to, _apisWei);\r\n            return false;\r\n        } \r\n        // \uc785\uae08 \ubc1b\ub294 \uae30\ub2a5\uc774 \uc7a0\uae34 \uc9c0\uac11\uc778\uc9c0 \ud655\uc778\ud55c\ub2e4\r\n        else if(lockedWalletInfo[_to].timeLockUpEnd > now && lockedWalletInfo[_to].receiveLock == true) {\r\n            RejectedPaymentToLockedUpWallet(msg.sender, _to, _apisWei);\r\n            return false;\r\n        } \r\n        // \uc81c\ud55c\uc774 \uc5c6\ub294 \uacbd\uc6b0, \uc1a1\uae08\uc744 \uc9c4\ud589\ud55c\ub2e4.\r\n        else {\r\n            return super.transfer(_to, _apisWei);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @dev _to \uc9c0\uac11\uc73c\ub85c _apisWei \ub9cc\ud07c\uc758 APIS\ub97c \uc1a1\uae08\ud558\uace0 _timeLockUpEnd \uc2dc\uac04\ub9cc\ud07c \uc9c0\uac11\uc744 \uc7a0\uadfc\ub2e4\r\n     * @param _to \ud1a0\ud070\uc744 \ubc1b\ub294 \uc9c0\uac11 \uc8fc\uc18c\r\n     * @param _apisWei \uc804\uc1a1\ub418\ub294 \ud1a0\ud070\uc758 \uc591(wei)\r\n     * @param _timeLockUpEnd \uc7a0\uae08\uc774 \ud574\uc81c\ub418\ub294 \uc2dc\uac04\r\n     */\r\n    function transferAndLockUntil(address _to, uint256 _apisWei, uint _timeLockUpEnd) onlyOwner public {\r\n        require(transfer(_to, _apisWei));\r\n        \r\n        walletLockBoth(_to, _timeLockUpEnd);\r\n    }\r\n    \r\n    /**\r\n     * @dev _to \uc9c0\uac11\uc73c\ub85c _apisWei \ub9cc\ud07c\uc758 APIS\ub97c \uc1a1\uae08\ud558\uace0\uc601\uc6d0\ud788 \uc9c0\uac11\uc744 \uc7a0\uadfc\ub2e4\r\n     * @param _to \ud1a0\ud070\uc744 \ubc1b\ub294 \uc9c0\uac11 \uc8fc\uc18c\r\n     * @param _apisWei \uc804\uc1a1\ub418\ub294 \ud1a0\ud070\uc758 \uc591(wei)\r\n     */\r\n    function transferAndLockForever(address _to, uint256 _apisWei) onlyOwner public {\r\n        require(transfer(_to, _apisWei));\r\n        \r\n        walletLockBothForever(_to);\r\n    }\r\n    \r\n    \r\n    /**\r\n     * @dev \ud568\uc218\ub97c \ud638\ucd9c\ud558\ub294 \uc9c0\uac11\uc758 \ud1a0\ud070\uc744 \uc18c\uac01\ud55c\ub2e4.\r\n     * \r\n     * zeppelin-solidity/contracts/token/BurnableToken.sol \ucc38\uc870\r\n     * @param _value \uc18c\uac01\ud558\ub824\ub294 \ud1a0\ud070\uc758 \uc591(Satoshi)\r\n     */\r\n    function burn(uint256 _value) public {\r\n        require(_value <= balances[msg.sender]);\r\n        require(_value <= totalSupply);\r\n        \r\n        address burner = msg.sender;\r\n        balances[burner] -= _value;\r\n        totalSupply -= _value;\r\n        \r\n        Burn(burner, _value);\r\n    }\r\n    \r\n    \r\n    /**\r\n     * @dev Eth\uc740 \ubc1b\uc744 \uc218 \uc5c6\ub3c4\ub85d \ud55c\ub2e4.\r\n     */\r\n    function () public payable {\r\n        revert();\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @title WhiteList\r\n * @dev ICO \ucc38\uc5ec\uac00 \uac00\ub2a5\ud55c \ud654\uc774\ud2b8 \ub9ac\uc2a4\ud2b8\ub97c \uad00\ub9ac\ud55c\ub2e4\r\n */\r\ncontract WhiteList is Ownable {\r\n    \r\n    mapping (address => uint8) internal list;\r\n    \r\n    /**\r\n     * @dev \ud654\uc774\ud2b8\ub9ac\uc2a4\ud2b8\uc5d0 \ubcc0\ub3d9\uc774 \ubc1c\uc0dd\ud588\uc744 \ub54c \uc774\ubca4\ud2b8\r\n     * @param backer \ud654\uc774\ud2b8\ub9ac\uc2a4\ud2b8\uc5d0 \ub4f1\uc7ac\ud558\ub824\ub294 \uc9c0\uac11 \uc8fc\uc18c\r\n     * @param allowed (true : \ud654\uc774\ud2b8\ub9ac\uc2a4\ud2b8\uc5d0 \ucd94\uac00) (false : \uc81c\uac70)\r\n     */\r\n    event WhiteBacker(address indexed backer, bool allowed);\r\n    \r\n    \r\n    /**\r\n     * @dev \ud654\uc774\ud2b8\ub9ac\uc2a4\ud2b8\uc5d0 \ub4f1\ub85d\ud558\uac70\ub098 \ud574\uc81c\ud55c\ub2e4.\r\n     * @param _target \ud654\uc774\ud2b8\ub9ac\uc2a4\ud2b8\uc5d0 \ub4f1\uc7ac\ud558\ub824\ub294 \uc9c0\uac11 \uc8fc\uc18c\r\n     * @param _allowed (true : \ud654\uc774\ud2b8\ub9ac\uc2a4\ud2b8\uc5d0 \ucd94\uac00) (false : \uc81c\uac70) \r\n     */\r\n    function setWhiteBacker(address _target, bool _allowed) onlyOwner public {\r\n        require(_target != 0x0);\r\n        \r\n        if(_allowed == true) {\r\n            list[_target] = 1;\r\n        } else {\r\n            list[_target] = 0;\r\n        }\r\n        \r\n        WhiteBacker(_target, _allowed);\r\n    }\r\n    \r\n    /**\r\n     * @dev \ud654\uc774\ud2b8 \ub9ac\uc2a4\ud2b8\uc5d0 \ub4f1\ub85d(\ucd94\uac00)\ud55c\ub2e4\r\n     * @param _target \ucd94\uac00\ud560 \uc9c0\uac11 \uc8fc\uc18c\r\n     */\r\n    function addWhiteBacker(address _target) onlyOwner public {\r\n        setWhiteBacker(_target, true);\r\n    }\r\n    \r\n    /**\r\n     * @dev \ud654\uc774\ud2b8\ub9ac\uc2a4\ud2b8\uc5d0 \uc5ec\ub7ec \uc9c0\uac11 \uc8fc\uc18c\ub97c \ub3d9\uc2dc\uc5d0 \ub4f1\uc7ac\ud558\uac70\ub098 \uc81c\uac70\ud55c\ub2e4.\r\n     * \r\n     * \uac00\uc2a4 \uc18c\ubaa8\ub97c \uc904\uc5ec\ubcf4\uae30 \uc704\ud568\r\n     * @param _backers \ub300\uc0c1\uc774 \ub418\ub294 \uc9c0\uac11\ub4e4\uc758 \ub9ac\uc2a4\ud2b8\r\n     * @param _allows \ub300\uc0c1\uc774 \ub418\ub294 \uc9c0\uac11\ub4e4\uc758 \ucd94\uac00 \uc5ec\ubd80 \ub9ac\uc2a4\ud2b8 (true : \ucd94\uac00) (false : \uc81c\uac70)\r\n     */\r\n    function setWhiteBackersByList(address[] _backers, bool[] _allows) onlyOwner public {\r\n        require(_backers.length > 0);\r\n        require(_backers.length == _allows.length);\r\n        \r\n        for(uint backerIndex = 0; backerIndex < _backers.length; backerIndex++) {\r\n            setWhiteBacker(_backers[backerIndex], _allows[backerIndex]);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @dev \ud654\uc774\ud2b8\ub9ac\uc2a4\ud2b8\uc5d0 \uc5ec\ub7ec \uc9c0\uac11 \uc8fc\uc18c\ub97c \ub4f1\uc7ac\ud55c\ub2e4.\r\n     * \r\n     * \ubaa8\ub4e0 \uc8fc\uc18c\ub4e4\uc740 \ud654\uc774\ud2b8\ub9ac\uc2a4\ud2b8\uc5d0 \ucd94\uac00\ub41c\ub2e4.\r\n     * @param _backers \ub300\uc0c1\uc774 \ub418\ub294 \uc9c0\uac11\ub4e4\uc758 \ub9ac\uc2a4\ud2b8\r\n     */\r\n    function addWhiteBackersByList(address[] _backers) onlyOwner public {\r\n        for(uint backerIndex = 0; backerIndex < _backers.length; backerIndex++) {\r\n            setWhiteBacker(_backers[backerIndex], true);\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     * @dev \ud574\ub2f9 \uc9c0\uac11 \uc8fc\uc18c\uac00 \ud654\uc774\ud2b8 \ub9ac\uc2a4\ud2b8\uc5d0 \ub4f1\ub85d\ub418\uc5b4\uc788\ub294\uc9c0 \ud655\uc778\ud55c\ub2e4\r\n     * @param _addr \ub4f1\uc7ac \uc5ec\ubd80\ub97c \ud655\uc778\ud558\ub824\ub294 \uc9c0\uac11\uc758 \uc8fc\uc18c\r\n     * @return (true : \ub4f1\ub85d\ub418\uc5b4\uc788\uc74c) (false : \ub4f1\ub85d\ub418\uc5b4\uc788\uc9c0 \uc54a\uc74c)\r\n     */\r\n    function isInWhiteList(address _addr) public constant returns (bool) {\r\n        require(_addr != 0x0);\r\n        return list[_addr] > 0;\r\n    }\r\n    \r\n    /**\r\n     * @dev \uc694\uccad\ud558\ub294 \uc9c0\uac11\uc774 \ud654\uc774\ud2b8\ub9ac\uc2a4\ud2b8\uc5d0 \ub4f1\ub85d\ub418\uc5b4\uc788\ub294\uc9c0 \ud655\uc778\ud55c\ub2e4.\r\n     * @return (true : \ub4f1\ub85d\ub418\uc5b4\uc788\uc74c) (false : \ub4f1\ub85d\ub418\uc5b4\uc788\uc9c0 \uc54a\uc74c)\r\n     */\r\n    function isMeInWhiteList() public constant returns (bool isWhiteBacker) {\r\n        return list[msg.sender] > 0;\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * @title APIS Crowd Pre-Sale\r\n * @dev \ud1a0\ud070\uc758 \ud504\ub9ac\uc138\uc77c\uc744 \uc218\ud589\ud558\uae30 \uc704\ud55c \ucee8\ud2b8\ub799\ud2b8\r\n */\r\ncontract ApisCrowdSale is Ownable {\r\n    \r\n    // \uc18c\uc218\uc810 \uc790\ub9ac\uc218. Eth 18\uc790\ub9ac\uc5d0 \ub9de\ucd98\ub2e4\r\n    uint8 public constant decimals = 18;\r\n    \r\n    \r\n    // \ud06c\ub77c\uc6b0\ub4dc \uc138\uc77c\uc758 \ud310\ub9e4 \ubaa9\ud45c\ub7c9(APIS)\r\n    uint256 public fundingGoal;\r\n    \r\n    // \ud604\uc7ac \uc9c4\ud589\ud558\ub294 \ud310\ub9e4 \ubaa9\ud45c\ub7c9 \r\n    // QTUM\uacfc \uacf5\ub3d9\uc73c\ub85c \ud310\ub9e4\uac00 \uc9c4\ud589\ub418\uae30 \ub54c\ubb38\uc5d0,  QTUM \ucabd \ucee8\ud2b8\ub809\ud2b8\uc640 \ud569\uc0b0\ud55c \ud310\ub9e4\ub7c9\uc774 \ucd1d \ud310\ub9e4\ubaa9\ud45c\ub97c \ub118\uc9c0 \uc54a\ub3c4\ub85d \ud558\uae30 \uc704\ud568\r\n    uint256 public fundingGoalCurrent;\r\n    \r\n    // 1 ETH\uc73c\ub85c \uc0b4 \uc218 \uc788\ub294 APIS\uc758 \uac2f\uc218\r\n    uint256 public priceOfApisPerFund;\r\n    \r\n\r\n    // \ubc1c\uae09\ub41c Apis \uac2f\uc218 (\uc608\uc57d + \ubc1c\ud589)\r\n    //uint256 public totalSoldApis;\r\n    \r\n    // \ubc1c\ud589 \ub300\uae30\uc911\uc778 APIS \uac2f\uc218\r\n    //uint256 public totalReservedApis;\r\n    \r\n    // \ubc1c\ud589\ub418\uc11c \ucd9c\uae08\ub41c APIS \uac2f\uc218\r\n    //uint256 public totalWithdrawedApis;\r\n    \r\n    \r\n    // \uc785\uae08\ub41c \ud22c\uc790\uae08\uc758 \ucd1d\uc561 (\uc608\uc57d + \ubc1c\ud589)\r\n    //uint256 public totalReceivedFunds;\r\n    \r\n    // \uad6c\ub9e4 \ud655\uc815 \uc804 \ud22c\uc790\uae08\uc758 \ucd1d\uc561\r\n    //uint256 public totalReservedFunds;\r\n    \r\n    // \uad6c\ub9e4 \ud655\uc815\ub41c \ud22c\uc790\uae08\uc758 \ucd1d\uc561\r\n    //uint256 public totalPaidFunds;\r\n\r\n    \r\n    // \ud310\ub9e4\uac00 \uc2dc\uc791\ub418\ub294 \uc2dc\uac04\r\n    uint public startTime;\r\n    \r\n    // \ud310\ub9e4\uac00 \uc885\ub8cc\ub418\ub294 \uc2dc\uac04\r\n    uint public endTime;\r\n\r\n    // \ud310\ub9e4\uac00 \uc870\uae30\uc5d0 \uc885\ub8cc\ub420 \uacbd\uc6b0\ub97c \ub300\ube44\ud558\uae30 \uc704\ud568\r\n    bool closed = false;\r\n    \r\n\tSaleStatus public saleStatus;\r\n    \r\n    // APIS \ud1a0\ud070 \ucee8\ud2b8\ub809\ud2b8\r\n    ApisToken internal tokenReward;\r\n    \r\n    // \ud654\uc774\ud2b8\ub9ac\uc2a4\ud2b8 \ucee8\ud2b8\ub809\ud2b8\r\n    WhiteList internal whiteList;\r\n\r\n    \r\n    \r\n    mapping (address => Property) public fundersProperty;\r\n    \r\n    /**\r\n     * @dev APIS \ud1a0\ud070 \uad6c\ub9e4\uc790\uc758 \uc790\uc0b0 \ud604\ud669\uc744 \uc815\ub9ac\ud558\uae30 \uc704\ud55c \uad6c\uc870\uccb4\r\n     */\r\n    struct Property {\r\n        uint256 reservedFunds;   // \uc785\uae08\ud588\uc9c0\ub9cc \uc544\uc9c1 APIS\ub85c \ubcc0\ud658\ub418\uc9c0 \uc54a\uc740 Eth (\ud658\ubd88 \uac00\ub2a5)\r\n        uint256 paidFunds;    \t// APIS\ub85c \ubcc0\ud658\ub41c Eth (\ud658\ubd88 \ubd88\uac00)\r\n        uint256 reservedApis;   // \ubc1b\uc744 \uc608\uc815\uc778 \ud1a0\ud070\r\n        uint256 withdrawedApis; // \uc774\ubbf8 \ubc1b\uc740 \ud1a0\ud070\r\n        uint purchaseTime;      // \uad6c\uc785\ud55c \uc2dc\uac04\r\n    }\r\n\t\r\n\t\r\n\t/**\r\n\t * @dev \ud604\uc7ac \uc138\uc77c\uc758 \uc9c4\ud589 \ud604\ud669\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4.\r\n\t * totalSoldApis \ubc1c\uae09\ub41c Apis \uac2f\uc218 (\uc608\uc57d + \ubc1c\ud589)\r\n\t * totalReservedApis \ubc1c\ud589 \ub300\uae30 \uc911\uc778 Apis\r\n\t * totalWithdrawedApis \ubc1c\ud589\ub418\uc11c \ucd9c\uae08\ub41c APIS \uac2f\uc218\r\n\t * \r\n\t * totalReceivedFunds \uc785\uae08\ub41c \ud22c\uc790\uae08\uc758 \ucd1d\uc561 (\uc608\uc57d + \ubc1c\ud589)\r\n\t * totalReservedFunds \uad6c\ub9e4 \ud655\uc815 \uc804 \ud22c\uc790\uae08\uc758 \ucd1d\uc561\r\n\t * ttotalPaidFunds \uad6c\ub9e4 \ud655\uc815\ub41c \ud22c\uc790\uae08\uc758 \ucd1d\uc561\r\n\t */\r\n\tstruct SaleStatus {\r\n\t\tuint256 totalReservedFunds;\r\n\t\tuint256 totalPaidFunds;\r\n\t\tuint256 totalReceivedFunds;\r\n\t\t\r\n\t\tuint256 totalReservedApis;\r\n\t\tuint256 totalWithdrawedApis;\r\n\t\tuint256 totalSoldApis;\r\n\t}\r\n    \r\n    \r\n    \r\n    /**\r\n     * @dev APIS\ub97c \uad6c\uc785\ud558\uae30 \uc704\ud55c Eth\uc744 \uc785\uae08\ud588\uc744 \ub54c \ubc1c\uc0dd\ud558\ub294 \uc774\ubca4\ud2b8\r\n     * @param beneficiary APIS\ub97c \uad6c\ub9e4\ud558\uace0\uc790 \ud558\ub294 \uc9c0\uac11\uc758 \uc8fc\uc18c\r\n     * @param amountOfFunds \uc785\uae08\ud55c Eth\uc758 \uc591 (wei)\r\n     * @param amountOfApis \ud22c\uc790\uae08\uc5d0 \uc0c1\uc751\ud558\ub294 APIS \ud1a0\ud070\uc758 \uc591 (wei)\r\n     */\r\n    event ReservedApis(address beneficiary, uint256 amountOfFunds, uint256 amountOfApis);\r\n    \r\n    /**\r\n     * @dev \ud06c\ub77c\uc6b0\ub4dc \uc138\uc77c \ucee8\ud2b8\ub809\ud2b8\uc5d0\uc11c Eth\uc774 \uc778\ucd9c\ub418\uc5c8\uc744 \ub54c \ubc1c\uc0dd\ud558\ub294 \uc774\ubca4\ud2b8\r\n     * @param addr \ubc1b\ub294 \uc9c0\uac11\uc758 \uc8fc\uc18c\r\n     * @param amount \uc1a1\uae08\ub418\ub294 \uc591(wei)\r\n     */\r\n    event WithdrawalFunds(address addr, uint256 amount);\r\n    \r\n    /**\r\n     * @dev \uad6c\ub9e4\uc790\uc5d0\uac8c \ud1a0\ud070\uc774 \ubc1c\uae09\ub418\uc5c8\uc744 \ub54c \ubc1c\uc0dd\ud558\ub294 \uc774\ubca4\ud2b8\r\n     * @param funder \ud1a0\ud070\uc744 \ubc1b\ub294 \uc9c0\uac11\uc758 \uc8fc\uc18c\r\n     * @param amountOfFunds \uc785\uae08\ud55c \ud22c\uc790\uae08\uc758 \uc591 (wei)\r\n     * @param amountOfApis \ubc1c\uae09 \ubc1b\ub294 \ud1a0\ud070\uc758 \uc591 (wei)\r\n     */\r\n    event WithdrawalApis(address funder, uint256 amountOfFunds, uint256 amountOfApis);\r\n    \r\n    \r\n    /**\r\n     * @dev \ud22c\uc790\uae08 \uc785\uae08 \ud6c4, \uc544\uc9c1 \ud1a0\ud070\uc744 \ubc1c\uae09\ubc1b\uc9c0 \uc54a\uc740 \uc0c1\ud0dc\uc5d0\uc11c, \ud658\ubd88 \ucc98\ub9ac\ub97c \ud588\uc744 \ub54c \ubc1c\uc0dd\ud558\ub294 \uc774\ubca4\ud2b8\r\n     * @param _backer \ud658\ubd88 \ucc98\ub9ac\ub97c \uc9c4\ud589\ud558\ub294 \uc9c0\uac11\uc758 \uc8fc\uc18c\r\n     * @param _amountFunds \ud658\ubd88\ud558\ub294 \ud22c\uc790\uae08\uc758 \uc591\r\n     * @param _amountApis \ucde8\uc18c\ub418\ub294 APIS \uc591\r\n     */\r\n    event Refund(address _backer, uint256 _amountFunds, uint256 _amountApis);\r\n    \r\n    \r\n    /**\r\n     * @dev \ud06c\ub77c\uc6b0\ub4dc \uc138\uc77c \uc9c4\ud589 \uc911\uc5d0\ub9cc \ub3d9\uc791\ud558\ub3c4\ub85d \uc81c\ud55c\ud558\uace0, APIS\uc758 \uac00\uaca9\ub3c4 \uc124\uc815\ub418\uc5b4\uc57c\ub9cc \ud55c\ub2e4.\r\n     */\r\n    modifier onSale() {\r\n        require(now >= startTime);\r\n        require(now < endTime);\r\n        require(closed == false);\r\n        require(priceOfApisPerFund > 0);\r\n        require(fundingGoalCurrent > 0);\r\n        _;\r\n    }\r\n    \r\n    /**\r\n     * @dev \ud06c\ub77c\uc6b0\ub4dc \uc138\uc77c \uc885\ub8cc \ud6c4\uc5d0\ub9cc \ub3d9\uc791\ud558\ub3c4\ub85d \uc81c\ud55c\r\n     */\r\n    modifier onFinished() {\r\n        require(now >= endTime || closed == true);\r\n        _;\r\n    }\r\n    \r\n    /**\r\n     * @dev \ud654\uc774\ud2b8\ub9ac\uc2a4\ud2b8\uc5d0 \ub4f1\ub85d\ub418\uc5b4\uc788\uc5b4\uc57c\ud558\uace0 \uc544\uc9c1 \uad6c\ub9e4\uc644\ub8cc \ub418\uc9c0 \uc54a\uc740 \ud22c\uc790\uae08\uc774 \uc788\uc5b4\uc57c\ub9cc \ud55c\ub2e4.\r\n     */\r\n    modifier claimable() {\r\n        require(whiteList.isInWhiteList(msg.sender) == true);\r\n        require(fundersProperty[msg.sender].reservedFunds > 0);\r\n        _;\r\n    }\r\n    \r\n    \r\n    /**\r\n     * @dev \ud06c\ub77c\uc6b0\ub4dc \uc138\uc77c \ucee8\ud2b8\ub809\ud2b8\ub97c \uc0dd\uc131\ud55c\ub2e4.\r\n     * @param _fundingGoalApis \ud310\ub9e4\ud558\ub294 \ud1a0\ud070\uc758 \uc591 (APIS \ub2e8\uc704)\r\n     * @param _startTime \ud06c\ub77c\uc6b0\ub4dc \uc138\uc77c\uc744 \uc2dc\uc791\ud558\ub294 \uc2dc\uac04\r\n     * @param _endTime \ud06c\ub77c\uc6b0\ub4dc \uc138\uc77c\uc744 \uc885\ub8cc\ud558\ub294 \uc2dc\uac04\r\n     * @param _addressOfApisTokenUsedAsReward APIS \ud1a0\ud070\uc758 \ucee8\ud2b8\ub809\ud2b8 \uc8fc\uc18c\r\n     * @param _addressOfWhiteList WhiteList \ucee8\ud2b8\ub809\ud2b8 \uc8fc\uc18c\r\n     */\r\n    function ApisCrowdSale (\r\n        uint256 _fundingGoalApis,\r\n        uint _startTime,\r\n        uint _endTime,\r\n        address _addressOfApisTokenUsedAsReward,\r\n        address _addressOfWhiteList\r\n    ) public {\r\n        require (_fundingGoalApis > 0);\r\n        require (_startTime > now);\r\n        require (_endTime > _startTime);\r\n        require (_addressOfApisTokenUsedAsReward != 0x0);\r\n        require (_addressOfWhiteList != 0x0);\r\n        \r\n        fundingGoal = _fundingGoalApis * 10 ** uint256(decimals);\r\n        \r\n        startTime = _startTime;\r\n        endTime = _endTime;\r\n        \r\n        // \ud1a0\ud070 \uc2a4\ub9c8\ud2b8\ucee8\ud2b8\ub809\ud2b8\ub97c \ubd88\ub7ec\uc628\ub2e4\r\n        tokenReward = ApisToken(_addressOfApisTokenUsedAsReward);\r\n        \r\n        // \ud654\uc774\ud2b8 \ub9ac\uc2a4\ud2b8\ub97c \uac00\uc838\uc628\ub2e4\r\n        whiteList = WhiteList(_addressOfWhiteList);\r\n    }\r\n    \r\n    /**\r\n     * @dev \ud310\ub9e4 \uc885\ub8cc\ub294 1\ud68c\ub9cc \uac00\ub2a5\ud558\ub3c4\ub85d \uc81c\uc57d\ud55c\ub2e4. \uc885\ub8cc \ud6c4 \ub2e4\uc2dc \ud310\ub9e4 \uc911\uc73c\ub85c \ubcc0\uacbd\ud560 \uc218 \uc5c6\ub2e4\r\n     */\r\n    function closeSale(bool _closed) onlyOwner public {\r\n        require (closed == false);\r\n        \r\n        closed = _closed;\r\n    }\r\n    \r\n    /**\r\n     * @dev \ud06c\ub77c\uc6b0\ub4dc \uc138\uc77c \uc2dc\uc791 \uc804\uc5d0 1Eth\uc5d0 \ud574\ub2f9\ud558\ub294 APIS \ub7c9\uc744 \uc124\uc815\ud55c\ub2e4.\r\n     */\r\n    function setPriceOfApis(uint256 price) onlyOwner public {\r\n        require(priceOfApisPerFund == 0);\r\n        \r\n        priceOfApisPerFund = price;\r\n    }\r\n    \r\n    /**\r\n     * @dev \ud604 \uc2dc\uc810\uc5d0\uc11c \ud310\ub9e4 \uac00\ub2a5\ud55c \ubaa9\ud45c\ub7c9\uc744 \uc218\uc815\ud55c\ub2e4.\r\n     * @param _currentFundingGoalAPIS \ud604 \uc2dc\uc810\uc758 \ud310\ub9e4 \ubaa9\ud45c\ub7c9\uc740 \ucd1d \ud310\ub9e4\ub41c \uc591 \uc774\uc0c1\uc774\uc5b4\uc57c\ub9cc \ud55c\ub2e4.\r\n     */\r\n    function setCurrentFundingGoal(uint256 _currentFundingGoalAPIS) onlyOwner public {\r\n        uint256 fundingGoalCurrentWei = _currentFundingGoalAPIS * 10 ** uint256(decimals);\r\n        require(fundingGoalCurrentWei >= saleStatus.totalSoldApis);\r\n        \r\n        fundingGoalCurrent = fundingGoalCurrentWei;\r\n    }\r\n    \r\n    \r\n    /**\r\n     * @dev APIS \uc794\uace0\ub97c \ud655\uc778\ud55c\ub2e4\r\n     * @param _addr \uc794\uace0\ub97c \ud655\uc778\ud558\ub824\ub294 \uc9c0\uac11\uc758 \uc8fc\uc18c\r\n     * @return balance \uc9c0\uac11\uc5d0 \ub4e4\uc740 APIS \uc794\uace0 (wei)\r\n     */\r\n    function balanceOf(address _addr) public view returns (uint256 balance) {\r\n        return tokenReward.balanceOf(_addr);\r\n    }\r\n    \r\n    /**\r\n     * @dev \ud654\uc774\ud2b8\ub9ac\uc2a4\ud2b8 \ub4f1\ub85d \uc5ec\ubd80\ub97c \ud655\uc778\ud55c\ub2e4\r\n     * @param _addr \ub4f1\ub85d \uc5ec\ubd80\ub97c \ud655\uc778\ud558\ub824\ub294 \uc8fc\uc18c\r\n     * @return addrIsInWhiteList true : \ub4f1\ub85d\ub418\uc788\uc74c, false : \ub4f1\ub85d\ub418\uc5b4\uc788\uc9c0 \uc54a\uc74c\r\n     */\r\n    function whiteListOf(address _addr) public view returns (string message) {\r\n        if(whiteList.isInWhiteList(_addr) == true) {\r\n            return \"The address is in whitelist.\";\r\n        } else {\r\n            return \"The address is *NOT* in whitelist.\";\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     * @dev \uc804\ub2ec\ubc1b\uc740 \uc9c0\uac11\uc774 APIS \uc9c0\uae09 \uc694\uccad\uc774 \uac00\ub2a5\ud55c\uc9c0 \ud655\uc778\ud55c\ub2e4.\r\n     * @param _addr \ud655\uc778\ud558\ub294 \uc8fc\uc18c\r\n     * @return message \uacb0\uacfc \uba54\uc2dc\uc9c0\r\n     */\r\n    function isClaimable(address _addr) public view returns (string message) {\r\n        if(fundersProperty[_addr].reservedFunds == 0) {\r\n            return \"The address has no claimable balance.\";\r\n        }\r\n        \r\n        if(whiteList.isInWhiteList(_addr) == false) {\r\n            return \"The address must be registered with KYC and Whitelist\";\r\n        }\r\n        \r\n        else {\r\n            return \"The address can claim APIS!\";\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     * @dev \ud06c\ub77c\uc6b0\ub4dc \uc138\uc77c \ucee8\ud2b8\ub809\ud2b8\ub85c \ubc14\ub85c \ud22c\uc790\uae08\uc744 \uc1a1\uae08\ud558\ub294 \uacbd\uc6b0, buyToken\uc73c\ub85c \uc5f0\uacb0\ud55c\ub2e4\r\n     */\r\n    function () onSale public payable {\r\n        buyToken(msg.sender);\r\n    }\r\n    \r\n    /**\r\n     * @dev \ud1a0\ud070\uc744 \uad6c\uc785\ud558\uae30 \uc704\ud574 Qtum\uc744 \uc785\uae08\ubc1b\ub294\ub2e4.\r\n     * @param _beneficiary \ud1a0\ud070\uc744 \ubc1b\uac8c \ub420 \uc9c0\uac11\uc758 \uc8fc\uc18c\r\n     */\r\n    function buyToken(address _beneficiary) onSale public payable {\r\n        // \uc8fc\uc18c \ud655\uc778\r\n        require(_beneficiary != 0x0);\r\n        \r\n        // \ud06c\ub77c\uc6b0\ub4dc \uc138\uc77c \ucee8\ud2b8\ub809\ud2b8\uc758 \ud1a0\ud070 \uc1a1\uae08 \uae30\ub2a5\uc774 \uc815\uc9c0\ub418\uc5b4\uc788\uc73c\uba74 \ud310\ub9e4\ud558\uc9c0 \uc54a\ub294\ub2e4\r\n        bool isLocked = false;\r\n        uint timeLock = 0;\r\n        (isLocked, timeLock) = tokenReward.isWalletLocked_Send(this);\r\n        \r\n        require(isLocked == false);\r\n        \r\n        \r\n        uint256 amountFunds = msg.value;\r\n        uint256 reservedApis = amountFunds * priceOfApisPerFund;\r\n        \r\n        \r\n        // \ubaa9\ud45c \uae08\uc561\uc744 \ub118\uc5b4\uc11c\uc9c0 \ubabb\ud558\ub3c4\ub85d \ud55c\ub2e4\r\n        require(saleStatus.totalSoldApis + reservedApis <= fundingGoalCurrent);\r\n        require(saleStatus.totalSoldApis + reservedApis <= fundingGoal);\r\n        \r\n        // \ud22c\uc790\uc790\uc758 \uc790\uc0b0\uc744 \uc5c5\ub370\uc774\ud2b8\ud55c\ub2e4\r\n        fundersProperty[_beneficiary].reservedFunds += amountFunds;\r\n        fundersProperty[_beneficiary].reservedApis += reservedApis;\r\n        fundersProperty[_beneficiary].purchaseTime = now;\r\n        \r\n        // \ucd1d\uc561\ub4e4\uc744 \uc5c5\ub370\uc774\ud2b8\ud55c\ub2e4\r\n        saleStatus.totalReceivedFunds += amountFunds;\r\n        saleStatus.totalReservedFunds += amountFunds;\r\n        \r\n        saleStatus.totalSoldApis += reservedApis;\r\n        saleStatus.totalReservedApis += reservedApis;\r\n        \r\n        \r\n        // \ud654\uc774\ud2b8\ub9ac\uc2a4\ud2b8\uc5d0 \ub4f1\ub85d\ub418\uc5b4\uc788\uc73c\uba74 \ubc14\ub85c \ucd9c\uae08\ud55c\ub2e4\r\n        if(whiteList.isInWhiteList(_beneficiary) == true) {\r\n            withdrawal(_beneficiary);\r\n        }\r\n        else {\r\n            // \ud1a0\ud070 \ubc1c\ud589 \uc608\uc57d \uc774\ubca4\ud2b8 \ubc1c\uc0dd\r\n            ReservedApis(_beneficiary, amountFunds, reservedApis);\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n    /**\r\n     * @dev \uad00\ub9ac\uc790\uc5d0 \uc758\ud574\uc11c \ud1a0\ud070\uc744 \ubc1c\uae09\ud55c\ub2e4. \ud558\uc9c0\ub9cc \uae30\ubcf8 \uc694\uac74\uc740 \uac16\ucdb0\uc57c\ub9cc \uac00\ub2a5\ud558\ub2e4\r\n     * \r\n     * @param _target \ud1a0\ud070 \ubc1c\uae09\uc744 \uccad\uad6c\ud558\ub824\ub294 \uc9c0\uac11 \uc8fc\uc18c\r\n     */\r\n    function claimApis(address _target) public {\r\n        // \ud654\uc774\ud2b8 \ub9ac\uc2a4\ud2b8\uc5d0 \uc788\uc5b4\uc57c\ub9cc \ud558\uace0\r\n        require(whiteList.isInWhiteList(_target) == true);\r\n        // \uc608\uc57d\ub41c \ud22c\uc790\uae08\uc774 \uc788\uc5b4\uc57c\ub9cc \ud55c\ub2e4.\r\n        require(fundersProperty[_target].reservedFunds > 0);\r\n        \r\n        withdrawal(_target);\r\n    }\r\n    \r\n    /**\r\n     * @dev \uc608\uc57d\ud55c \ud1a0\ud070\uc758 \uc2e4\uc81c \uc9c0\uae09\uc744 \uc694\uccad\ud558\ub3c4\ub85d \ud55c\ub2e4.\r\n     * \r\n     * APIS\ub97c \uad6c\ub9e4\ud558\uae30 \uc704\ud574 Qtum\uc744 \uc785\uae08\ud560 \uacbd\uc6b0, \uad00\ub9ac\uc790\uc758 \uac80\ud1a0\ub97c \uc704\ud55c 7\uc77c\uc758 \uc720\uc608\uae30\uac04\uc774 \uc874\uc7ac\ud55c\ub2e4.\r\n     * \uc720\uc608\uae30\uac04\uc774 \uc9c0\ub098\uba74 \ud1a0\ud070 \uc9c0\uae09\uc744 \uc694\uad6c\ud560 \uc218 \uc788\ub2e4.\r\n     */\r\n    function claimMyApis() claimable public {\r\n        withdrawal(msg.sender);\r\n    }\r\n    \r\n    \r\n    /**\r\n     * @dev \uad6c\ub9e4\uc790\uc5d0\uac8c \ud1a0\ud070\uc744 \uc9c0\uae09\ud55c\ub2e4.\r\n     * @param funder \ud1a0\ud070\uc744 \uc9c0\uae09\ud560 \uc9c0\uac11\uc758 \uc8fc\uc18c\r\n     */\r\n    function withdrawal(address funder) internal {\r\n        // \uad6c\ub9e4\uc790 \uc9c0\uac11\uc73c\ub85c \ud1a0\ud070\uc744 \uc804\ub2ec\ud55c\ub2e4\r\n        assert(tokenReward.transferFrom(owner, funder, fundersProperty[funder].reservedApis));\r\n        \r\n        fundersProperty[funder].withdrawedApis += fundersProperty[funder].reservedApis;\r\n        fundersProperty[funder].paidFunds += fundersProperty[funder].reservedFunds;\r\n        \r\n        // \ucd1d\uc561\uc5d0 \ubc18\uc601\r\n        saleStatus.totalReservedFunds -= fundersProperty[funder].reservedFunds;\r\n        saleStatus.totalPaidFunds += fundersProperty[funder].reservedFunds;\r\n        \r\n        saleStatus.totalReservedApis -= fundersProperty[funder].reservedApis;\r\n        saleStatus.totalWithdrawedApis += fundersProperty[funder].reservedApis;\r\n        \r\n        // APIS\uac00 \ucd9c\uae08 \ub418\uc5c8\uc74c\uc744 \uc54c\ub9ac\ub294 \uc774\ubca4\ud2b8\r\n        WithdrawalApis(funder, fundersProperty[funder].reservedFunds, fundersProperty[funder].reservedApis);\r\n        \r\n        // \uc778\ucd9c\ud558\uc9c0 \uc54a\uc740 APIS \uc794\uace0\ub97c 0\uc73c\ub85c \ubcc0\uacbd\ud574\uc11c, Qtum \uc7ac\uc785\uae08 \uc2dc \uc774\ubbf8 \ucd9c\uae08\ud55c \ud1a0\ud070\uc774 \ub2e4\uc2dc \ucd9c\uae08\ub418\uc9c0 \uc54a\uac8c \ud55c\ub2e4.\r\n        fundersProperty[funder].reservedFunds = 0;\r\n        fundersProperty[funder].reservedApis = 0;\r\n    }\r\n    \r\n    \r\n    /**\r\n     * @dev \uc544\uc9c1 \ud1a0\ud070\uc744 \ubc1c\uae09\ubc1b\uc9c0 \uc54a\uc740 \uc9c0\uac11\uc744 \ub300\uc0c1\uc73c\ub85c, \ud658\ubd88\uc744 \uc9c4\ud589\ud560 \uc218 \uc788\ub2e4.\r\n     * @param _funder \ud658\ubd88\uc744 \uc9c4\ud589\ud558\ub824\ub294 \uc9c0\uac11\uc758 \uc8fc\uc18c\r\n     */\r\n    function refundByOwner(address _funder) onlyOwner public {\r\n        require(fundersProperty[_funder].reservedFunds > 0);\r\n        \r\n        uint256 amountFunds = fundersProperty[_funder].reservedFunds;\r\n        uint256 amountApis = fundersProperty[_funder].reservedApis;\r\n        \r\n        // Eth\uc744 \ud658\ubd88\ud55c\ub2e4\r\n        _funder.transfer(amountFunds);\r\n        \r\n        saleStatus.totalReceivedFunds -= amountFunds;\r\n        saleStatus.totalReservedFunds -= amountFunds;\r\n        \r\n        saleStatus.totalSoldApis -= amountApis;\r\n        saleStatus.totalReservedApis -= amountApis;\r\n        \r\n        fundersProperty[_funder].reservedFunds = 0;\r\n        fundersProperty[_funder].reservedApis = 0;\r\n        \r\n        Refund(_funder, amountFunds, amountApis);\r\n    }\r\n    \r\n    \r\n    /**\r\n     * @dev \ud380\ub529\uc774 \uc885\ub8cc\ub41c \uc774\ud6c4\uba74, \uc801\ub9bd\ub41c \ud22c\uc790\uae08\uc744 \ubc18\ud658\ud55c\ub2e4.\r\n     * @param remainRefundable true : \ud658\ubd88\ud560 \uc218 \uc788\ub294 \uae08\uc561\uc740 \ub0a8\uae30\uace0 \ubc18\ud658\ud55c\ub2e4. false : \ubaa8\ub450 \ubc18\ud658\ud55c\ub2e4\r\n     */\r\n    function withdrawalFunds(bool remainRefundable) onlyOwner public {\r\n        require(now > endTime || closed == true);\r\n        \r\n        uint256 amount = 0;\r\n        if(remainRefundable) {\r\n            amount = this.balance - saleStatus.totalReservedFunds;\r\n        } else {\r\n            amount = this.balance;\r\n        }\r\n        \r\n        if(amount > 0) {\r\n            msg.sender.transfer(amount);\r\n            \r\n            WithdrawalFunds(msg.sender, amount);\r\n        }\r\n    }\r\n    \r\n    /**\r\n\t * @dev \ud06c\ub77c\uc6b0\ub4dc \uc138\uc77c\uc774 \uc9c4\ud589 \uc911\uc778\uc9c0 \uc5ec\ubd80\ub97c \ubc18\ud658\ud55c\ub2e4.\r\n\t * @return isOpened true: \uc9c4\ud589 \uc911 false : \uc9c4\ud589 \uc911\uc774 \uc544\ub2d8(\ucc38\uc5ec \ubd88\uac00)\r\n\t */\r\n    function isOpened() public view returns (bool isOpend) {\r\n        if(now < startTime) return false;\r\n        if(now >= endTime) return false;\r\n        if(closed == true) return false;\r\n        \r\n        return true;\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"_targetWallet\",\"type\":\"address\"},{\"name\":\"_timeLockUpEnd\",\"type\":\"uint256\"}],\"name\":\"walletLockBoth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_targetWallet\",\"type\":\"address\"}],\"name\":\"walletLockBothForever\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"manoContracts\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_apisWei\",\"type\":\"uint256\"}],\"name\":\"transferAndLockForever\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_targetWallet\",\"type\":\"address\"},{\"name\":\"_timeLockEnd\",\"type\":\"uint256\"},{\"name\":\"_sendLock\",\"type\":\"bool\"},{\"name\":\"_receiveLock\",\"type\":\"bool\"}],\"name\":\"walletLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isWalletLocked_Receive\",\"outputs\":[{\"name\":\"isReceiveLocked\",\"type\":\"bool\"},{\"name\":\"until\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"manoAddr\",\"type\":\"address\"},{\"name\":\"registered\",\"type\":\"bool\"}],\"name\":\"registerManoContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_apisWei\",\"type\":\"uint256\"},{\"name\":\"_timeLockUpEnd\",\"type\":\"uint256\"}],\"name\":\"transferAndLockUntil\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_apisWei\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_targetWallet\",\"type\":\"address\"}],\"name\":\"walletUnlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedWalletInfo\",\"outputs\":[{\"name\":\"timeLockUpEnd\",\"type\":\"uint256\"},{\"name\":\"sendLock\",\"type\":\"bool\"},{\"name\":\"receiveLock\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isMyWalletLocked_Receive\",\"outputs\":[{\"name\":\"isReceiveLocked\",\"type\":\"bool\"},{\"name\":\"until\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isWalletLocked_Send\",\"outputs\":[{\"name\":\"isSendLocked\",\"type\":\"bool\"},{\"name\":\"until\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isMyWalletLocked_Send\",\"outputs\":[{\"name\":\"isSendLocked\",\"type\":\"bool\"},{\"name\":\"until\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"timeLockUpEnd\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"sendLock\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"receiveLock\",\"type\":\"bool\"}],\"name\":\"Locked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"target\",\"type\":\"address\"}],\"name\":\"Unlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"RejectedPaymentToLockedUpWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"RejectedPaymentFromLockedUpWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"manoContract\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"registered\",\"type\":\"bool\"}],\"name\":\"ManoContractRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "ContractName": "ApisToken", "CompilerVersion": "v0.4.18+commit.9cf6e910", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://8e915161962b5078452450b2ab04ad981e0f25dfa77687187c263eb550f3f599"}