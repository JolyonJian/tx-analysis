{"SourceCode": "pragma solidity  ^0.6.3;\r\n\r\ncontract SMatrixMoney {\r\n   \r\nfunction multisend(uint256[] memory amounts, address payable[] memory receivers) payable public {\r\nassert(amounts.length == receivers.length);\r\nassert(receivers.length <= 100); //maximum receievers can be 100\r\n   \r\n        for(uint i = 0; i< receivers.length; i++){\r\n            receivers[i].transfer(amounts[i]);\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address payable[]\",\"name\":\"receivers\",\"type\":\"address[]\"}],\"name\":\"multisend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "SMatrixMoney", "CompilerVersion": "v0.6.4+commit.1dca32f3", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://77d42c3c8362ffb79c2b065fc06bbd23155069d7f607f1fcc79eadcad4688634"}