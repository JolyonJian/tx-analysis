{"SourceCode": "pragma solidity ^0.4.24;\r\n/**\r\n*                                        ,   ,\r\n*                                        $,  $,     ,\r\n*                                        \"ss.$ss. .s'\r\n*                                ,     .ss$$$$$$$$$$s,\r\n*                                $. s$$$$$$$$$$$$$$`$$Ss\r\n*                                \"$$$$$$$$$$$$$$$$$$o$$$       ,\r\n*                               s$$$$$$$$$$$$$$$$$$$$$$$$s,  ,s\r\n*                              s$$$$$$$$$\"$$$$$$\"\"\"\"$$$$$$\"$$$$$,\r\n*                              s$$$$$$$$$$s\"\"$$$$ssssss\"$$$$$$$$\"\r\n*                             s$$$$$$$$$$'         `\"\"\"ss\"$\"$s\"\"\r\n*                             s$$$$$$$$$$,              `\"\"\"\"\"$  .s$$s\r\n*                             s$$$$$$$$$$$$s,...               `s$$'  `\r\n*                         `ssss$$$$$$$$$$$$$$$$$$$$####s.     .$$\"$.   , s-\r\n*                           `\"\"\"\"$$$$$$$$$$$$$$$$$$$$#####$$$$$$\"     $.$'\r\n* \u795d\u4f60\u6210\u529f                        \"$$$$$$$$$$$$$$$$$$$$$####s\"\"     .$$$|\r\n*   \u798f    \u559c\u559c                        \"$$$$$$$$$$$$$$$$$$$$$$$$##s    .$$\" $\r\n*                                   $$\"\"$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\"   `\r\n*                                  $$\"  \"$\"$$$$$$$$$$$$$$$$$$$$S\"\"\"\"'\r\n*                             ,   ,\"     '  $$$$$$$$$$$$$$$$####s\r\n*                             $.          .s$$$$$$$$$$$$$$$$$####\"\r\n*                 ,           \"$s.   ..ssS$$$$$$$$$$$$$$$$$$$####\"\r\n*                 $           .$$$S$$$$$$$$$$$$$$$$$$$$$$$$#####\"\r\n*                 Ss     ..sS$$$$$$$$$$$$$$$$$$$$$$$$$$$######\"\"\r\n*                  \"$$sS$$$$$$$$$$$$$$$$$$$$$$$$$$$########\"\r\n*           ,      s$$$$$$$$$$$$$$$$$$$$$$$$#########\"\"'\r\n*           $    s$$$$$$$$$$$$$$$$$$$$$#######\"\"'      s'         ,\r\n*           $$..$$$$$$$$$$$$$$$$$$######\"'       ....,$$....    ,$\r\n*            \"$$$$$$$$$$$$$$$######\"' ,     .sS$$$$$$$$$$$$$$$$s$$\r\n*              $$$$$$$$$$$$#####\"     $, .s$$$$$$$$$$$$$$$$$$$$$$$$s.\r\n*   )          $$$$$$$$$$$#####'      `$$$$$$$$$###########$$$$$$$$$$$.\r\n*  ((          $$$$$$$$$$$#####       $$$$$$$$###\"       \"####$$$$$$$$$$\r\n*  ) \\         $$$$$$$$$$$$####.     $$$$$$###\"             \"###$$$$$$$$$   s'\r\n* (   )        $$$$$$$$$$$$$####.   $$$$$###\"                ####$$$$$$$$s$$'\r\n* )  ( (       $$\"$$$$$$$$$$$#####.$$$$$###'                .###$$$$$$$$$$\"\r\n* (  )  )   _,$\"   $$$$$$$$$$$$######.$$##'                .###$$$$$$$$$$\r\n* ) (  ( \\.         \"$$$$$$$$$$$$$#######,,,.          ..####$$$$$$$$$$$\"\r\n*(   )$ )  )        ,$$$$$$$$$$$$$$$$$$####################$$$$$$$$$$$\"\r\n*(   ($$  ( \\     _sS\"  `\"$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$S$$,\r\n* )  )$$$s ) )  .      .   `$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\"'  `$$\r\n*  (   $$$Ss/  .$,    .$,,s$$$$$$##S$$$$$$$$$$$$$$$$$$$$$$$$S\"\"        '\r\n*    \\)_$$$$$$$$$$$$$$$$$$$$$$$##\"  $$        `$$.        `$$.\r\n*        `\"S$$$$$$$$$$$$$$$$$#\"      $          `$          `$\r\n*            `\"\"\"\"\"\"\"\"\"\"\"\"\"'         '           '           '\r\n*/\r\ncontract F3Devents {\r\n    // \u53ea\u8981\u73a9\u5bb6\u6ce8\u518c\u4e86\u540d\u5b57\u5c31\u4f1a\u88ab\u89e3\u96c7\r\n    event onNewName\r\n    (\r\n        uint256 indexed playerID,\r\n        address indexed playerAddress,\r\n        bytes32 indexed playerName,\r\n        bool isNewPlayer,\r\n        uint256 affiliateID,\r\n        address affiliateAddress,\r\n        bytes32 affiliateName,\r\n        uint256 amountPaid,\r\n        uint256 timeStamp\r\n    );\r\n\r\n    // \u5728\u8d2d\u4e70\u6216\u91cd\u88c5\u7ed3\u675f\u65f6\u89e3\u96c7\r\n    event onEndTx\r\n    (\r\n        uint256 compressedData,\r\n        uint256 compressedIDs,\r\n        bytes32 playerName,\r\n        address playerAddress,\r\n        uint256 ethIn,\r\n        uint256 keysBought,\r\n        address winnerAddr,\r\n        bytes32 winnerName,\r\n        uint256 amountWon,\r\n        uint256 newPot,\r\n        uint256 P3DAmount,\r\n        uint256 genAmount,\r\n        uint256 potAmount,\r\n        uint256 airDropPot\r\n    );\r\n\r\n    // \u53ea\u8981\u6709\u4eba\u9000\u51fa\u5c31\u4f1a\u88ab\u89e3\u96c7\r\n    event onWithdraw\r\n    (\r\n        uint256 indexed playerID,\r\n        address playerAddress,\r\n        bytes32 playerName,\r\n        uint256 ethOut,\r\n        uint256 timeStamp\r\n    );\r\n\r\n    // \u6bcf\u5f53\u64a4\u519b\u529b\u91cf\u7ed3\u675f\u65f6\uff0c\u5c31\u4f1a\u88ab\u89e3\u96c7\r\n    event onWithdrawAndDistribute\r\n    (\r\n        address playerAddress,\r\n        bytes32 playerName,\r\n        uint256 ethOut,\r\n        uint256 compressedData,\r\n        uint256 compressedIDs,\r\n        address winnerAddr,\r\n        bytes32 winnerName,\r\n        uint256 amountWon,\r\n        uint256 newPot,\r\n        uint256 P3DAmount,\r\n        uint256 genAmount\r\n    );\r\n\r\n    // (fomo3d\u514d\u8d39) \u6bcf\u5f53\u73a9\u5bb6\u5c1d\u8bd5\u4e00\u8f6e\u53c8\u4e00\u8f6e\u7684\u8ba1\u65f6\u5668\u65f6\u5c31\u4f1a\u88ab\u89e3\u96c7\r\n    // \u547d\u4e2d\u96f6\uff0c\u5e76\u5bfc\u81f4\u7ed3\u675f\u56de\u5408\r\n    event onBuyAndDistribute\r\n    (\r\n        address playerAddress,\r\n        bytes32 playerName,\r\n        uint256 ethIn,\r\n        uint256 compressedData,\r\n        uint256 compressedIDs,\r\n        address winnerAddr,\r\n        bytes32 winnerName,\r\n        uint256 amountWon,\r\n        uint256 newPot,\r\n        uint256 P3DAmount,\r\n        uint256 genAmount\r\n    );\r\n\r\n    // (fomo3d\u514d\u8d39) \u6bcf\u5f53\u73a9\u5bb6\u5728\u5706\u5f62\u65f6\u95f4\u540e\u5c1d\u8bd5\u91cd\u65b0\u52a0\u8f7d\u65f6\u5c31\u4f1a\u89e6\u53d1\r\n    // \u547d\u4e2d\u96f6\uff0c\u5e76\u5bfc\u81f4\u7ed3\u675f\u56de\u5408.\r\n    event onReLoadAndDistribute\r\n    (\r\n        address playerAddress,\r\n        bytes32 playerName,\r\n        uint256 compressedData,\r\n        uint256 compressedIDs,\r\n        address winnerAddr,\r\n        bytes32 winnerName,\r\n        uint256 amountWon,\r\n        uint256 newPot,\r\n        uint256 P3DAmount,\r\n        uint256 genAmount\r\n    );\r\n\r\n    // \u6bcf\u5f53\u8054\u76df\u4f1a\u5458\u4ed8\u6b3e\u65f6\u5c31\u4f1a\u88ab\u89e3\u96c7\r\n    event onAffiliatePayout\r\n    (\r\n        uint256 indexed affiliateID,\r\n        address affiliateAddress,\r\n        bytes32 affiliateName,\r\n        uint256 indexed roundID,\r\n        uint256 indexed buyerID,\r\n        uint256 amount,\r\n        uint256 timeStamp\r\n    );\r\n\r\n    // \u6536\u5230\u7f50\u5b50\u6389\u671f\u5b58\u6b3e\r\n    event onPotSwapDeposit\r\n    (\r\n        uint256 roundID,\r\n        uint256 amountAddedToPot\r\n    );\r\n}\r\n\r\n//==============================================================================\r\n//   _ _  _ _|_ _ _  __|_   _ _ _|_    _   .\r\n//  (_(_)| | | | (_|(_ |   _\\(/_ | |_||_)  .\r\n//====================================|=========================================\r\n\r\ncontract modularShort is F3Devents {}\r\n\r\ncontract WorldFomo is modularShort {\r\n    using SafeMath for *;\r\n    using NameFilter for string;\r\n    using F3DKeysCalcShort for uint256;\r\n\r\n    PlayerBookInterface constant private PlayerBook = PlayerBookInterface(0x6ed17ee485821cd47531f2e4c7b9ef8b48f2bab5);\r\n\r\n//==============================================================================\r\n//     _ _  _  |`. _     _ _ |_ | _  _  .\r\n//    (_(_)| |~|~|(_||_|| (_||_)|(/__\\  .  (\u6e38\u620f\u8bbe\u7f6e)\r\n//=================_|===========================================================\r\n    address private admin = msg.sender;\r\n    string constant public name = \"WorldFomo\";\r\n    string constant public symbol = \"WF\";\r\n    uint256 private rndExtra_ = 15 seconds;     // \u7b2c\u4e00\u4e2aICO\u7684\u957f\u5ea6\r\n    uint256 private rndGap_ = 30 minutes;         // ICO\u9636\u6bb5\u7684\u957f\u5ea6\uff0cEOS\u8bbe\u5b9a\u4e3a1\u5e74\u3002\r\n    uint256 constant private rndInit_ = 30 minutes;                // \u5706\u8ba1\u65f6\u5668\u4ece\u6b64\u5f00\u59cb\r\n    uint256 constant private rndInc_ = 10 seconds;              // \u8d2d\u4e70\u7684\u6bcf\u4e00\u628a\u94a5\u5319\u90fd\u4f1a\u7ed9\u8ba1\u65f6\u5668\u589e\u52a0\u5f88\u591a\r\n    uint256 constant private rndMax_ = 12 hours;                // \u5706\u5f62\u8ba1\u65f6\u5668\u7684\u6700\u5927\u957f\u5ea6\u53ef\u4ee5\u662f\r\n//==============================================================================\r\n//     _| _ _|_ _    _ _ _|_    _   .\r\n//    (_|(_| | (_|  _\\(/_ | |_||_)  .  (\u7528\u4e8e\u5b58\u50a8\u66f4\u6539\u7684\u6e38\u620f\u4fe1\u606f\u7684\u6570\u636e)\r\n//=============================|================================================\r\n    uint256 public airDropPot_;             // \u83b7\u5f97\u7a7a\u6295\u7684\u4eba\u8d62\u5f97\u4e86\u8fd9\u4e2a\u9505\u7684\u4e00\u90e8\u5206\r\n    uint256 public airDropTracker_ = 0;     // \u6bcf\u6b21\u201c\u5408\u683c\u201dtx\u53d1\u751f\u65f6\u9012\u589e\u3002\u7528\u4e8e\u786e\u5b9a\u83b7\u80dc\u7684\u7a7a\u6295\r\n    uint256 public rID_;    // \u5df2\u53d1\u751f\u7684\u8f6e\u6b21ID /\u603b\u8f6e\u6570\r\n//****************\r\n// \u7403\u5458\u6570\u636e\r\n//****************\r\n    mapping (address => uint256) public pIDxAddr_;          // \uff08addr => pID\uff09\u6309\u5730\u5740\u8fd4\u56de\u73a9\u5bb6ID\r\n    mapping (bytes32 => uint256) public pIDxName_;          // (name => pID\uff09\u6309\u540d\u79f0\u8fd4\u56de\u73a9\u5bb6ID\r\n    mapping (uint256 => F3Ddatasets.Player) public plyr_;   // (pID => data) \u7403\u5458\u6570\u636e\r\n    mapping (uint256 => mapping (uint256 => F3Ddatasets.PlayerRounds)) public plyrRnds_;    // (pID => rID => data) \u73a9\u5bb6ID\u548c\u8f6e\u6b21ID\u7684\u73a9\u5bb6\u8f6e\u6570\u636e\r\n    mapping (uint256 => mapping (bytes32 => bool)) public plyrNames_; // (pID => name => bool\uff09\u73a9\u5bb6\u62e5\u6709\u7684\u540d\u5b57\u5217\u8868\u3002 \uff08\u7528\u4e8e\u8fd9\u6837\u60a8\u53ef\u4ee5\u5728\u60a8\u62e5\u6709\u7684\u4efb\u4f55\u540d\u79f0\u4e2d\u66f4\u6539\u60a8\u7684\u663e\u793a\u540d\u79f0\uff09\r\n//****************\r\n// \u5706\u5f62\u6570\u636e\r\n//****************\r\n    mapping (uint256 => F3Ddatasets.Round) public round_;   // (rID => data) \u5706\u5f62\u6570\u636e\r\n    mapping (uint256 => mapping(uint256 => uint256)) public rndTmEth_;      // (rID => tID => \u6570\u636e\uff09\u6bcf\u4e2a\u56e2\u961f\u7684eth\uff0cby round id\u548cteam id\r\n//****************\r\n// \u56e2\u961f\u6536\u8d39\u6570\u636e\r\n//****************\r\n    mapping (uint256 => F3Ddatasets.TeamFee) public fees_;          // (team => fees) \u6309\u56e2\u961f\u5206\u914d\u8d39\u7528\r\n    mapping (uint256 => F3Ddatasets.PotSplit) public potSplit_;     // (team => fees) \u9505\u5206\u88c2\u7531\u56e2\u961f\u5206\u914d\r\n//==============================================================================\r\n//     _ _  _  __|_ _    __|_ _  _  .\r\n//    (_(_)| |_\\ | | |_|(_ | (_)|   .  (\u5408\u540c\u90e8\u7f72\u65f6\u7684\u521d\u59cb\u6570\u636e\u8bbe\u7f6e)\r\n//==============================================================================\r\n    constructor()\r\n        public\r\n    {\r\n        // \u56e2\u961f\u5206\u914d\u7ed3\u6784\r\n        // 0 = europe\r\n        // 1 = freeforall\r\n        // 2 = china\r\n        // 3 = americas\r\n\r\n        // \u56e2\u961f\u5206\u914d\u767e\u5206\u6bd4\r\n        // (F3D, P3D) + (Pot , Referrals, Community)\r\n            // \u4ecb\u7ecd\u4eba / \u793e\u533a\u5956\u52b1\u5728\u6570\u5b66\u4e0a\u88ab\u8bbe\u8ba1\u4e3a\u6765\u81ea\u83b7\u80dc\u8005\u7684\u5e95\u6c60\u4efd\u989d.\r\n        fees_[0] = F3Ddatasets.TeamFee(32,0);   //50% to pot, 15% to aff, 3% to com, 0% to pot swap, 0% to air drop pot\r\n        fees_[1] = F3Ddatasets.TeamFee(45,0);   //37% to pot, 15% to aff, 3% to com, 0% to pot swap, 0% to air drop pot\r\n        fees_[2] = F3Ddatasets.TeamFee(62,0);  //20% to pot, 15% to aff, 3% to com, 0% to pot swap, 0% to air drop pot\r\n        fees_[3] = F3Ddatasets.TeamFee(47,0);   //35% to pot, 15% to aff, 3% to com, 0% to pot swap, 0% to air drop pot\r\n\r\n        // \u5982\u4f55\u6839\u636e\u9009\u62e9\u7684\u7403\u961f\u5206\u5272\u6700\u7ec8\u7684\u5e95\u6c60\r\n        // (F3D, P3D)\r\n        potSplit_[0] = F3Ddatasets.PotSplit(47,0);  //25% to winner, 25% to next round, 3% to com\r\n        potSplit_[1] = F3Ddatasets.PotSplit(47,0);   //25% to winner, 25% to next round, 3% to com\r\n        potSplit_[2] = F3Ddatasets.PotSplit(62,0);  //25% to winner, 10% to next round, 3% to com\r\n        potSplit_[3] = F3Ddatasets.PotSplit(62,0);  //25% to winner, 10% to next round,3% to com\r\n    }\r\n//==============================================================================\r\n//     _ _  _  _|. |`. _  _ _  .\r\n//    | | |(_)(_||~|~|(/_| _\\  .  (\u8fd9\u4e9b\u90fd\u662f\u5b89\u5168\u68c0\u67e5)\r\n//==============================================================================\r\n    /**\r\n     * @dev \u7528\u4e8e\u786e\u4fdd\u5728\u6fc0\u6d3b\u4e4b\u524d\u6ca1\u6709\u4eba\u53ef\u4ee5\u4e0e\u5408\u540c\u4e92\u52a8.\r\n     *\r\n     */\r\n    modifier isActivated() {\r\n        require(activated_ == true, \"its not ready yet.  check ?eta in discord\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev \u9632\u6b62\u5408\u540c\u4e0efomo3d\u4ea4\u4e92\r\n     */\r\n    modifier isHuman() {\r\n        require(msg.sender == tx.origin, \"sorry humans only - FOR REAL THIS TIME\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev \u8bbe\u7f6e\u4f20\u5165tx\u7684\u8fb9\u754c\r\n     */\r\n    modifier isWithinLimits(uint256 _eth) {\r\n        require(_eth >= 1000000000, \"pocket lint: not a valid currency\");\r\n        require(_eth <= 100000000000000000000000, \"no vitalik, no\");\r\n        _;\r\n    }\r\n\r\n//==============================================================================\r\n//     _    |_ |. _   |`    _  __|_. _  _  _  .\r\n//    |_)|_||_)||(_  ~|~|_|| |(_ | |(_)| |_\\  .  (\u7528\u8fd9\u4e9b\u6765\u4e0e\u5408\u540c\u4e92\u52a8)\r\n//====|=========================================================================\r\n    /**\r\n     * @dev \u7d27\u6025\u8d2d\u4e70\u4f7f\u7528\u6700\u540e\u5b58\u50a8\u7684\u4f1a\u5458ID\u548c\u56e2\u961f\u6f5c\u884c\r\n     */\r\n    function()\r\n        isActivated()\r\n        isHuman()\r\n        isWithinLimits(msg.value)\r\n        public\r\n        payable\r\n    {\r\n        // \u8bbe\u7f6e\u6211\u4eec\u7684tx\u4e8b\u4ef6\u6570\u636e\u5e76\u786e\u5b9a\u73a9\u5bb6\u662f\u5426\u662f\u65b0\u624b\r\n        F3Ddatasets.EventReturns memory _eventData_ = determinePID(_eventData_);\r\n\r\n        // \u83b7\u53d6\u73a9\u5bb6ID\r\n        uint256 _pID = pIDxAddr_[msg.sender];\r\n\r\n        // \u4e70\u6838\u5fc3\r\n        buyCore(_pID, plyr_[_pID].laff, 2, _eventData_);\r\n    }\r\n\r\n    /**\r\n     * @dev \u5c06\u6240\u6709\u4f20\u5165\u7684\u4ee5\u592a\u574a\u8f6c\u6362\u4e3a\u952e.\r\n     * -functionhash- 0x8f38f309 (\u4f7f\u7528ID\u4f5c\u4e3a\u4f1a\u5458)\r\n     * -functionhash- 0x98a0871d (\u4f7f\u7528\u8054\u76df\u4f1a\u5458\u7684\u5730\u5740)\r\n     * -functionhash- 0xa65b37a1 (\u4f7f\u7528\u8054\u76df\u4f1a\u5458\u7684\u540d\u79f0)\r\n     * @param _affCode \u83b7\u5f97\u8054\u76df\u8d39\u7528\u7684\u73a9\u5bb6\u7684ID /\u5730\u5740/\u540d\u79f0\r\n     * @param _team \u4ec0\u4e48\u7403\u961f\u662f\u7403\u5458?\r\n     */\r\n    function buyXid(uint256 _affCode, uint256 _team)\r\n        isActivated()\r\n        isHuman()\r\n        isWithinLimits(msg.value)\r\n        public\r\n        payable\r\n    {\r\n        // \u8bbe\u7f6e\u6211\u4eec\u7684tx\u4e8b\u4ef6\u6570\u636e\u5e76\u786e\u5b9a\u73a9\u5bb6\u662f\u5426\u662f\u65b0\u624b\r\n        F3Ddatasets.EventReturns memory _eventData_ = determinePID(_eventData_);\r\n\r\n        // \u83b7\u53d6\u73a9\u5bb6ID\r\n        uint256 _pID = pIDxAddr_[msg.sender];\r\n\r\n        // \u7ba1\u7406\u4f1a\u5458\u6b8b\u5dee\r\n        // \u5982\u679c\u6ca1\u6709\u7ed9\u51fa\u8054\u76df\u4ee3\u7801\u6216\u8005\u73a9\u5bb6\u8bd5\u56fe\u4f7f\u7528\u4ed6\u4eec\u81ea\u5df1\u7684\u4ee3\u7801\r\n        if (_affCode == 0 || _affCode == _pID)\r\n        {\r\n            // \u4f7f\u7528\u6700\u540e\u5b58\u50a8\u7684\u8054\u76df\u4ee3\u7801\r\n            _affCode = plyr_[_pID].laff;\r\n\r\n        // \u5982\u679c\u63d0\u4f9b\u8054\u5c5e\u4ee3\u7801\u5e76\u4e14\u5b83\u4e0e\u5148\u524d\u5b58\u50a8\u7684\u4e0d\u540c\r\n        } else if (_affCode != plyr_[_pID].laff) {\r\n            // \u66f4\u65b0\u6700\u540e\u4e00\u4e2a\u4f1a\u5458\r\n            plyr_[_pID].laff = _affCode;\r\n        }\r\n\r\n        // \u9a8c\u8bc1\u662f\u5426\u9009\u62e9\u4e86\u6709\u6548\u7684\u56e2\u961f\r\n        _team = verifyTeam(_team);\r\n\r\n        // \u4e70\u6838\u5fc3\r\n        buyCore(_pID, _affCode, _team, _eventData_);\r\n    }\r\n\r\n    function buyXaddr(address _affCode, uint256 _team)\r\n        isActivated()\r\n        isHuman()\r\n        isWithinLimits(msg.value)\r\n        public\r\n        payable\r\n    {\r\n        // \u8bbe\u7f6e\u6211\u4eec\u7684tx\u4e8b\u4ef6\u6570\u636e\u5e76\u786e\u5b9a\u73a9\u5bb6\u662f\u5426\u662f\u65b0\u624b\r\n        F3Ddatasets.EventReturns memory _eventData_ = determinePID(_eventData_);\r\n\r\n        // \u83b7\u53d6\u73a9\u5bb6ID\r\n        uint256 _pID = pIDxAddr_[msg.sender];\r\n\r\n        // \u7ba1\u7406\u4f1a\u5458\u6b8b\u5dee\r\n        uint256 _affID;\r\n        // \u5982\u679c\u6ca1\u6709\u7ed9\u51fa\u8054\u76df\u4ee3\u7801\u6216\u8005\u73a9\u5bb6\u8bd5\u56fe\u4f7f\u7528\u4ed6\u4eec\u81ea\u5df1\u7684\u4ee3\u7801\r\n        if (_affCode == address(0) || _affCode == msg.sender)\r\n        {\r\n            // \u4f7f\u7528\u6700\u540e\u5b58\u50a8\u7684\u8054\u76df\u4ee3\u7801\r\n            _affID = plyr_[_pID].laff;\r\n\r\n        // \u5982\u679c\u662f\u8054\u76df\u4ee3\u7801\r\n        } else {\r\n            // \u4eceaff Code\u83b7\u53d6\u4f1a\u5458ID\r\n            _affID = pIDxAddr_[_affCode];\r\n\r\n            // \u5982\u679caffID\u4e0e\u5148\u524d\u5b58\u50a8\u7684\u4e0d\u540c\r\n            if (_affID != plyr_[_pID].laff)\r\n            {\r\n                // \u66f4\u65b0\u6700\u540e\u4e00\u4e2a\u4f1a\u5458\r\n                plyr_[_pID].laff = _affID;\r\n            }\r\n        }\r\n\r\n        // \u9a8c\u8bc1\u662f\u5426\u9009\u62e9\u4e86\u6709\u6548\u7684\u56e2\u961f\r\n        _team = verifyTeam(_team);\r\n\r\n        // \u4e70\u6838\u5fc3\r\n        buyCore(_pID, _affID, _team, _eventData_);\r\n    }\r\n\r\n    function buyXname(bytes32 _affCode, uint256 _team)\r\n        isActivated()\r\n        isHuman()\r\n        isWithinLimits(msg.value)\r\n        public\r\n        payable\r\n    {\r\n        // \u8bbe\u7f6e\u6211\u4eec\u7684tx\u4e8b\u4ef6\u6570\u636e\u5e76\u786e\u5b9a\u73a9\u5bb6\u662f\u5426\u662f\u65b0\u624b\r\n        F3Ddatasets.EventReturns memory _eventData_ = determinePID(_eventData_);\r\n\r\n        // \u83b7\u53d6\u73a9\u5bb6ID\r\n        uint256 _pID = pIDxAddr_[msg.sender];\r\n\r\n        // \u7ba1\u7406\u4f1a\u5458\u6b8b\u5dee\r\n        uint256 _affID;\r\n        // \u5982\u679c\u6ca1\u6709\u7ed9\u51fa\u8054\u76df\u4ee3\u7801\u6216\u8005\u73a9\u5bb6\u8bd5\u56fe\u4f7f\u7528\u4ed6\u4eec\u81ea\u5df1\u7684\u4ee3\u7801\r\n        if (_affCode == '' || _affCode == plyr_[_pID].name)\r\n        {\r\n            // \u4f7f\u7528\u6700\u540e\u5b58\u50a8\u7684\u8054\u76df\u4ee3\u7801\r\n            _affID = plyr_[_pID].laff;\r\n\r\n        // \u5982\u679c\u662f\u8054\u76df\u4ee3\u7801\r\n        } else {\r\n            // \u4eceaff Code\u83b7\u53d6\u4f1a\u5458ID\r\n            _affID = pIDxName_[_affCode];\r\n\r\n            // \u5982\u679caffID\u4e0e\u5148\u524d\u5b58\u50a8\u7684\u4e0d\u540c\r\n            if (_affID != plyr_[_pID].laff)\r\n            {\r\n                // \u66f4\u65b0\u6700\u540e\u4e00\u4e2a\u4f1a\u5458\r\n                plyr_[_pID].laff = _affID;\r\n            }\r\n        }\r\n\r\n        // \u9a8c\u8bc1\u662f\u5426\u9009\u62e9\u4e86\u6709\u6548\u7684\u56e2\u961f\r\n        _team = verifyTeam(_team);\r\n\r\n        // \u4e70\u6838\u5fc3\r\n        buyCore(_pID, _affID, _team, _eventData_);\r\n    }\r\n\r\n    /**\r\n     * @dev \u57fa\u672c\u4e0a\u4e0e\u4e70\u76f8\u540c\uff0c\u4f46\u4e0d\u662f\u4f60\u53d1\u9001\u4ee5\u592a\r\n     * \u4ece\u60a8\u7684\u94b1\u5305\u4e2d\uff0c\u5b83\u4f7f\u7528\u60a8\u672a\u63d0\u53d6\u7684\u6536\u5165.\r\n     * -functionhash- 0x349cdcac (\u4f7f\u7528ID\u4f5c\u4e3a\u4f1a\u5458)\r\n     * -functionhash- 0x82bfc739 (\u4f7f\u7528\u8054\u76df\u4f1a\u5458\u7684\u5730\u5740)\r\n     * -functionhash- 0x079ce327 (\u4f7f\u7528\u8054\u76df\u4f1a\u5458\u7684\u540d\u79f0)\r\n     * @param _affCode \u83b7\u5f97\u8054\u76df\u8d39\u7528\u7684\u73a9\u5bb6\u7684ID /\u5730\u5740/\u540d\u79f0\r\n     * @param _team \u7403\u5458\u5728\u54ea\u652f\u7403\u961f\uff1f\r\n     * @param _eth \u4f7f\u7528\u7684\u6536\u5165\u91d1\u989d\uff08\u4f59\u989d\u9000\u56de\u57fa\u91d1\u5e93\uff09\r\n     */\r\n    function reLoadXid(uint256 _affCode, uint256 _team, uint256 _eth)\r\n        isActivated()\r\n        isHuman()\r\n        isWithinLimits(_eth)\r\n        public\r\n    {\r\n        // \u8bbe\u7f6e\u6211\u4eec\u7684tx\u4e8b\u4ef6\u6570\u636e\r\n        F3Ddatasets.EventReturns memory _eventData_;\r\n\r\n        // \u83b7\u53d6\u73a9\u5bb6ID\r\n        uint256 _pID = pIDxAddr_[msg.sender];\r\n\r\n        // \u7ba1\u7406\u4f1a\u5458\u6b8b\u5dee\r\n        // \u5982\u679c\u6ca1\u6709\u7ed9\u51fa\u8054\u76df\u4ee3\u7801\u6216\u8005\u73a9\u5bb6\u8bd5\u56fe\u4f7f\u7528\u4ed6\u4eec\u81ea\u5df1\u7684\u4ee3\u7801\r\n        if (_affCode == 0 || _affCode == _pID)\r\n        {\r\n            // \u4f7f\u7528\u6700\u540e\u5b58\u50a8\u7684\u8054\u76df\u4ee3\u7801\r\n            _affCode = plyr_[_pID].laff;\r\n\r\n        // \u5982\u679c\u63d0\u4f9b\u8054\u5c5e\u4ee3\u7801\u5e76\u4e14\u5b83\u4e0e\u5148\u524d\u5b58\u50a8\u7684\u4e0d\u540c\r\n        } else if (_affCode != plyr_[_pID].laff) {\r\n            // \u66f4\u65b0\u6700\u540e\u4e00\u4e2a\u4f1a\u5458\r\n            plyr_[_pID].laff = _affCode;\r\n        }\r\n\r\n        // \u9a8c\u8bc1\u662f\u5426\u9009\u62e9\u4e86\u6709\u6548\u7684\u56e2\u961f\r\n        _team = verifyTeam(_team);\r\n\r\n        // \u91cd\u88c5\u6838\u5fc3\r\n        reLoadCore(_pID, _affCode, _team, _eth, _eventData_);\r\n    }\r\n\r\n    function reLoadXaddr(address _affCode, uint256 _team, uint256 _eth)\r\n        isActivated()\r\n        isHuman()\r\n        isWithinLimits(_eth)\r\n        public\r\n    {\r\n        // \u8bbe\u7f6e\u6211\u4eec\u7684tx\u4e8b\u4ef6\u6570\u636e\r\n        F3Ddatasets.EventReturns memory _eventData_;\r\n\r\n        // \u83b7\u53d6\u73a9\u5bb6ID\r\n        uint256 _pID = pIDxAddr_[msg.sender];\r\n\r\n        // \u7ba1\u7406\u4f1a\u5458\u6b8b\u5dee\r\n        uint256 _affID;\r\n        // \u5982\u679c\u6ca1\u6709\u7ed9\u51fa\u8054\u76df\u4ee3\u7801\u6216\u8005\u73a9\u5bb6\u8bd5\u56fe\u4f7f\u7528\u4ed6\u4eec\u81ea\u5df1\u7684\u4ee3\u7801\r\n        if (_affCode == address(0) || _affCode == msg.sender)\r\n        {\r\n            // \u4f7f\u7528\u6700\u540e\u5b58\u50a8\u7684\u8054\u76df\u4ee3\u7801\r\n            _affID = plyr_[_pID].laff;\r\n\r\n        // \u5982\u679c\u662f\u8054\u76df\u4ee3\u7801\r\n        } else {\r\n            // \u4eceaff Code\u83b7\u53d6\u4f1a\u5458ID\r\n            _affID = pIDxAddr_[_affCode];\r\n\r\n            // \u5982\u679caffID\u4e0e\u5148\u524d\u5b58\u50a8\u7684\u4e0d\u540c\r\n            if (_affID != plyr_[_pID].laff)\r\n            {\r\n                // \u66f4\u65b0\u6700\u540e\u4e00\u4e2a\u4f1a\u5458\r\n                plyr_[_pID].laff = _affID;\r\n            }\r\n        }\r\n\r\n        // \u9a8c\u8bc1\u662f\u5426\u9009\u62e9\u4e86\u6709\u6548\u7684\u56e2\u961f\r\n        _team = verifyTeam(_team);\r\n\r\n        // \u91cd\u88c5\u6838\u5fc3\r\n        reLoadCore(_pID, _affID, _team, _eth, _eventData_);\r\n    }\r\n\r\n    function reLoadXname(bytes32 _affCode, uint256 _team, uint256 _eth)\r\n        isActivated()\r\n        isHuman()\r\n        isWithinLimits(_eth)\r\n        public\r\n    {\r\n        // \u8bbe\u7f6e\u6211\u4eec\u7684tx\u4e8b\u4ef6\u6570\u636e\r\n        F3Ddatasets.EventReturns memory _eventData_;\r\n\r\n        // \u83b7\u53d6\u73a9\u5bb6ID\r\n        uint256 _pID = pIDxAddr_[msg.sender];\r\n\r\n        // \u7ba1\u7406\u4f1a\u5458\u6b8b\u5dee\r\n        uint256 _affID;\r\n        // \u5982\u679c\u6ca1\u6709\u7ed9\u51fa\u8054\u76df\u4ee3\u7801\u6216\u8005\u73a9\u5bb6\u8bd5\u56fe\u4f7f\u7528\u4ed6\u4eec\u81ea\u5df1\u7684\u4ee3\u7801\r\n        if (_affCode == '' || _affCode == plyr_[_pID].name)\r\n        {\r\n            // \u4f7f\u7528\u6700\u540e\u5b58\u50a8\u7684\u8054\u76df\u4ee3\u7801\r\n            _affID = plyr_[_pID].laff;\r\n\r\n        // \u5982\u679c\u662f\u8054\u76df\u4ee3\u7801\r\n        } else {\r\n            // \u4eceaff Code\u83b7\u53d6\u4f1a\u5458ID\r\n            _affID = pIDxName_[_affCode];\r\n\r\n            // \u5982\u679caffID\u4e0e\u5148\u524d\u5b58\u50a8\u7684\u4e0d\u540c\r\n            if (_affID != plyr_[_pID].laff)\r\n            {\r\n                // \u66f4\u65b0\u6700\u540e\u4e00\u4e2a\u4f1a\u5458\r\n                plyr_[_pID].laff = _affID;\r\n            }\r\n        }\r\n\r\n        // \u9a8c\u8bc1\u662f\u5426\u9009\u62e9\u4e86\u6709\u6548\u7684\u56e2\u961f\r\n        _team = verifyTeam(_team);\r\n\r\n        // \u91cd\u88c5\u6838\u5fc3\r\n        reLoadCore(_pID, _affID, _team, _eth, _eventData_);\r\n    }\r\n\r\n    /**\r\n     * @dev \u64a4\u56de\u6240\u6709\u6536\u5165.\r\n     * -functionhash- 0x3ccfd60b\r\n     */\r\n    function withdraw()\r\n        isActivated()\r\n        isHuman()\r\n        public\r\n    {\r\n        // \u8bbe\u7f6e\u672c\u5730rID\r\n        uint256 _rID = rID_;\r\n\r\n        // \u6293\u4f4f\u65f6\u95f4\r\n        uint256 _now = now;\r\n\r\n        // \u83b7\u53d6\u73a9\u5bb6ID\r\n        uint256 _pID = pIDxAddr_[msg.sender];\r\n\r\n        // \u4e3a\u73a9\u5bb6eth\u8bbe\u7f6etemp var\r\n        uint256 _eth;\r\n\r\n        // \u68c0\u67e5\u5706\u662f\u5426\u5df2\u7ecf\u7ed3\u675f\u5e76\u4e14\u8fd8\u6ca1\u6709\u4eba\u7ed5\u5708\u7ed3\u675f\r\n        if (_now > round_[_rID].end && round_[_rID].ended == false && round_[_rID].plyr != 0)\r\n        {\r\n            // \u8bbe\u7f6e\u6211\u4eec\u7684tx\u4e8b\u4ef6\u6570\u636e\r\n            F3Ddatasets.EventReturns memory _eventData_;\r\n\r\n            // \u5706\u5f62\u7ed3\u675f\uff08\u5206\u914d\u9505\uff09\r\n            round_[_rID].ended = true;\r\n            _eventData_ = endRound(_eventData_);\r\n\r\n            // \u5f97\u5230\u4ed6\u4eec\u7684\u6536\u5165\r\n            _eth = withdrawEarnings(_pID);\r\n\r\n            // \u7ed9\u94b1\r\n            if (_eth > 0)\r\n                plyr_[_pID].addr.transfer(_eth);\r\n\r\n            // \u6784\u5efa\u4e8b\u4ef6\u6570\u636e\r\n            _eventData_.compressedData = _eventData_.compressedData + (_now * 1000000000000000000);\r\n            _eventData_.compressedIDs = _eventData_.compressedIDs + _pID;\r\n\r\n            // \u706b\u707e\u64a4\u56de\u548c\u5206\u53d1\u4e8b\u4ef6\r\n            emit F3Devents.onWithdrawAndDistribute\r\n            (\r\n                msg.sender,\r\n                plyr_[_pID].name,\r\n                _eth,\r\n                _eventData_.compressedData,\r\n                _eventData_.compressedIDs,\r\n                _eventData_.winnerAddr,\r\n                _eventData_.winnerName,\r\n                _eventData_.amountWon,\r\n                _eventData_.newPot,\r\n                _eventData_.P3DAmount,\r\n                _eventData_.genAmount\r\n            );\r\n\r\n        // \u5728\u4efb\u4f55\u5176\u4ed6\u60c5\u51b5\u4e0b\r\n        } else {\r\n            // \u5f97\u5230\u4ed6\u4eec\u7684\u6536\u5165\r\n            _eth = withdrawEarnings(_pID);\r\n\r\n            // \u7ed9\u94b1\r\n            if (_eth > 0)\r\n                plyr_[_pID].addr.transfer(_eth);\r\n\r\n            // \u6d88\u9632\u4e8b\u4ef6\r\n            emit F3Devents.onWithdraw(_pID, msg.sender, plyr_[_pID].name, _eth, _now);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev \u4f7f\u7528\u8fd9\u4e9b\u6765\u6ce8\u518c\u540d\u79f0\u3002\u5b83\u4eec\u53ea\u662f\u5c06\u6ce8\u518c\u8bf7\u6c42\u53d1\u9001\u7ed9PlayerBook\u5408\u540c\u7684\u5305\u88c5\u5668\u3002\u6240\u4ee5\u5728\u8fd9\u91cc\u6ce8\u518c\u4e0e\u5728\u90a3\u91cc\u6ce8\u518c\u662f\u4e00\u6837\u7684\u3002\r\n     * UI\u5c06\u59cb\u7ec8\u663e\u793a\u60a8\u6ce8\u518c\u7684\u59d3\u6c0f\uff0c\u4f46\u60a8\u4ecd\u5c06\u62e5\u6709\u6240\u6709\u4ee5\u524d\u6ce8\u518c\u7684\u540d\u79f0\u4ee5\u7528\u4f5c\u4f1a\u5458\u94fe\u63a5\u3002\r\n     * - \u5fc5\u987b\u652f\u4ed8\u6ce8\u518c\u8d39\r\n     * - \u540d\u79f0\u5fc5\u987b\u662f\u552f\u4e00\u7684\r\n     * - \u540d\u79f0\u5c06\u8f6c\u6362\u4e3a\u5c0f\u5199\r\n     * - \u540d\u79f0\u4e0d\u80fd\u4ee5\u7a7a\u683c\u5f00\u5934\u6216\u7ed3\u5c3e\r\n     * - \u8fde\u7eed\u4e0d\u80fd\u8d85\u8fc71\u4e2a\u7a7a\u683c\r\n     * - \u4e0d\u80fd\u53ea\u662f\u6570\u5b57\r\n     * - \u4e0d\u80fd\u4ee50x\u5f00\u5934\r\n     * - name\u5fc5\u987b\u81f3\u5c11\u4e3a1\u4e2a\u5b57\u7b26\r\n     * - \u6700\u5927\u957f\u5ea6\u4e3a32\u4e2a\u5b57\u7b26\r\n     * - \u5141\u8bb8\u7684\u5b57\u7b26\uff1aa-z\uff0c0-9\u548c\u7a7a\u683c\r\n     * -functionhash- 0x921dec21 (\u4f7f\u7528ID\u4f5c\u4e3a\u4f1a\u5458)\r\n     * -functionhash- 0x3ddd4698 (\u4f7f\u7528\u8054\u76df\u4f1a\u5458\u7684\u5730\u5740)\r\n     * -functionhash- 0x685ffd83 (\u4f7f\u7528\u8054\u76df\u4f1a\u5458\u7684\u540d\u79f0)\r\n     * @param _nameString \u7403\u5458\u60f3\u8981\u7684\u540d\u5b57\r\n     * @param _affCode \u4f1a\u5458ID\uff0c\u5730\u5740\u6216\u63a8\u8350\u60a8\u7684\u4eba\u7684\u59d3\u540d\r\n     * @param _all \u5982\u679c\u60a8\u5e0c\u671b\u5c06\u4fe1\u606f\u63a8\u9001\u5230\u6240\u6709\u6e38\u620f\uff0c\u5219\u8bbe\u7f6e\u4e3atrue\r\n     * (\u8fd9\u53ef\u80fd\u4f1a\u8017\u8d39\u5927\u91cf\u6c14\u4f53)\r\n     */\r\n    function registerNameXID(string _nameString, uint256 _affCode, bool _all)\r\n        isHuman()\r\n        public\r\n        payable\r\n    {\r\n        bytes32 _name = _nameString.nameFilter();\r\n        address _addr = msg.sender;\r\n        uint256 _paid = msg.value;\r\n        (bool _isNewPlayer, uint256 _affID) = PlayerBook.registerNameXIDFromDapp.value(_paid)(_addr, _name, _affCode, _all);\r\n\r\n        uint256 _pID = pIDxAddr_[_addr];\r\n\r\n        // \u706b\u707e\u4e8b\u4ef6\r\n        emit F3Devents.onNewName(_pID, _addr, _name, _isNewPlayer, _affID, plyr_[_affID].addr, plyr_[_affID].name, _paid, now);\r\n    }\r\n\r\n    function registerNameXaddr(string _nameString, address _affCode, bool _all)\r\n        isHuman()\r\n        public\r\n        payable\r\n    {\r\n        bytes32 _name = _nameString.nameFilter();\r\n        address _addr = msg.sender;\r\n        uint256 _paid = msg.value;\r\n        (bool _isNewPlayer, uint256 _affID) = PlayerBook.registerNameXaddrFromDapp.value(msg.value)(msg.sender, _name, _affCode, _all);\r\n\r\n        uint256 _pID = pIDxAddr_[_addr];\r\n\r\n        // \u706b\u707e\u4e8b\u4ef6\r\n        emit F3Devents.onNewName(_pID, _addr, _name, _isNewPlayer, _affID, plyr_[_affID].addr, plyr_[_affID].name, _paid, now);\r\n    }\r\n\r\n    function registerNameXname(string _nameString, bytes32 _affCode, bool _all)\r\n        isHuman()\r\n        public\r\n        payable\r\n    {\r\n        bytes32 _name = _nameString.nameFilter();\r\n        address _addr = msg.sender;\r\n        uint256 _paid = msg.value;\r\n        (bool _isNewPlayer, uint256 _affID) = PlayerBook.registerNameXnameFromDapp.value(msg.value)(msg.sender, _name, _affCode, _all);\r\n\r\n        uint256 _pID = pIDxAddr_[_addr];\r\n\r\n        // \u706b\u707e\u4e8b\u4ef6\r\n        emit F3Devents.onNewName(_pID, _addr, _name, _isNewPlayer, _affID, plyr_[_affID].addr, plyr_[_affID].name, _paid, now);\r\n    }\r\n//==============================================================================\r\n//     _  _ _|__|_ _  _ _  .\r\n//    (_|(/_ |  | (/_| _\\  . (\u7528\u4e8eUI\u548c\u67e5\u770betherscan\u4e0a\u7684\u4e1c\u897f)\r\n//=====_|=======================================================================\r\n    /**\r\n     * @dev \u9000\u8d27\u4ef7\u683c\u4e70\u5bb6\u5c06\u652f\u4ed8\u4e0b\u4e00\u4e2a\u4e2a\u4eba\u94a5\u5319.\r\n     * -functionhash- 0x018a25e8\r\n     * @return \u8d2d\u4e70\u4e0b\u4e00\u4e2a\u94a5\u5319\u7684\u4ef7\u683c\uff08\u4ee5wei\u683c\u5f0f\uff09\r\n     */\r\n    function getBuyPrice()\r\n        public\r\n        view\r\n        returns(uint256)\r\n    {\r\n        // \u8bbe\u7f6e\u672c\u5730rID\r\n        uint256 _rID = rID_;\r\n\r\n        // \u6293\u4f4f\u65f6\u95f4\r\n        uint256 _now = now;\r\n\r\n        // \u6211\u4eec\u662f\u4e00\u4e2a\u56de\u5408?\r\n        if (_now > round_[_rID].strt + rndGap_ && (_now <= round_[_rID].end || (_now > round_[_rID].end && round_[_rID].plyr == 0)))\r\n            return ( (round_[_rID].keys.add(1000000000000000000)).ethRec(1000000000000000000) );\r\n        else // rounds over.  need price for new round\r\n            return ( 75000000000000 ); // init\r\n    }\r\n\r\n    /**\r\n     * @dev \u8fd4\u56de\u5269\u4f59\u65f6\u95f4\u3002\u4e0d\u8981\u5783\u573e\u90ae\u4ef6\uff0c\u4f60\u53ef\u4ee5\u4ece\u4f60\u7684\u8282\u70b9\u63d0\u4f9b\u5546\u90a3\u91cc\u5f97\u5230\u4f60\u81ea\u5df1\r\n     * -functionhash- 0xc7e284b8\r\n     * @return \u65f6\u95f4\u5728\u51e0\u79d2\u949f\u5185\r\n     */\r\n    function getTimeLeft()\r\n        public\r\n        view\r\n        returns(uint256)\r\n    {\r\n        // \u8bbe\u7f6e\u672c\u5730rID\r\n        uint256 _rID = rID_;\r\n\r\n        // \u6293\u4f4f\u65f6\u95f4\r\n        uint256 _now = now;\r\n\r\n        if (_now < round_[_rID].end)\r\n            if (_now > round_[_rID].strt + rndGap_)\r\n                return( (round_[_rID].end).sub(_now) );\r\n            else\r\n                return( (round_[_rID].strt + rndGap_).sub(_now) );\r\n        else\r\n            return(0);\r\n    }\r\n\r\n    /**\r\n     * @dev \u6bcf\u4e2a\u91d1\u5e93\u8fd4\u56de\u73a9\u5bb6\u6536\u5165\r\n     * -functionhash- 0x63066434\r\n     * @return \u8d62\u5f97\u91d1\u5e93\r\n     * @return \u4e00\u822c\u91d1\u5e93\r\n     * @return \u4f1a\u5458\u4fdd\u9669\u5e93\r\n     */\r\n    function getPlayerVaults(uint256 _pID)\r\n        public\r\n        view\r\n        returns(uint256 ,uint256, uint256)\r\n    {\r\n        // \u8bbe\u7f6e\u672c\u5730rID\r\n        uint256 _rID = rID_;\r\n\r\n        // \u5982\u679c\u5706\u7ed3\u675f\u4e86\u4f46\u5706\u5f62\u7ed3\u675f\u5c1a\u672a\u8fd0\u884c\uff08\u56e0\u6b64\u5408\u540c\u6ca1\u6709\u5206\u914d\u5956\u91d1\uff09\r\n        if (now > round_[_rID].end && round_[_rID].ended == false && round_[_rID].plyr != 0)\r\n        {\r\n            // \u5982\u679c\u7403\u5458\u662f\u80dc\u5229\u8005\r\n            if (round_[_rID].plyr == _pID)\r\n            {\r\n                return\r\n                (\r\n                    (plyr_[_pID].win).add( ((round_[_rID].pot).mul(25)) / 100 ),\r\n                    (plyr_[_pID].gen).add(  getPlayerVaultsHelper(_pID, _rID).sub(plyrRnds_[_pID][_rID].mask)   ),\r\n                    plyr_[_pID].aff\r\n                );\r\n            // \u5982\u679c\u73a9\u5bb6\u4e0d\u662f\u8d62\u5bb6\r\n            } else {\r\n                return\r\n                (\r\n                    plyr_[_pID].win,\r\n                    (plyr_[_pID].gen).add(  getPlayerVaultsHelper(_pID, _rID).sub(plyrRnds_[_pID][_rID].mask)  ),\r\n                    plyr_[_pID].aff\r\n                );\r\n            }\r\n\r\n        // \u5982\u679c\u5706\u5f62\u4ecd\u5728\u7ee7\u7eed\uff0c\u6216\u5706\u5f62\u5df2\u7ecf\u7ed3\u675f\u5e76\u4e14\u5706\u5f62\u7ed3\u675f\u5df2\u7ecf\u8fd0\u884c\r\n        } else {\r\n            return\r\n            (\r\n                plyr_[_pID].win,\r\n                (plyr_[_pID].gen).add(calcUnMaskedEarnings(_pID, plyr_[_pID].lrnd)),\r\n                plyr_[_pID].aff\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u575a\u56fa\u4e0d\u559c\u6b22\u5806\u6808\u9650\u5236\u3002\u8fd9\u8ba9\u6211\u4eec\u907f\u514d\u90a3\u79cd\u4ec7\u6068\r\n     */\r\n    function getPlayerVaultsHelper(uint256 _pID, uint256 _rID)\r\n        private\r\n        view\r\n        returns(uint256)\r\n    {\r\n        return(  ((((round_[_rID].mask).add(((((round_[_rID].pot).mul(potSplit_[round_[_rID].team].gen)) / 100).mul(1000000000000000000)) / (round_[_rID].keys))).mul(plyrRnds_[_pID][_rID].keys)) / 1000000000000000000)  );\r\n    }\r\n\r\n    /**\r\n     * @dev \u8fd4\u56de\u524d\u7aef\u6240\u9700\u7684\u6240\u6709\u5f53\u524d\u8f6e\u6b21\u4fe1\u606f\r\n     * -functionhash- 0x747dff42\r\n     * @return \u5728ICO\u9636\u6bb5\u6295\u8d44\u7684eth\r\n     * @return \u5706\u7684\u8eab\u4efd\r\n     * @return \u5706\u7684\u603b\u94a5\u5319\r\n     * @return \u65f6\u95f4\u5230\u4e86\r\n     * @return \u65f6\u95f4\u5f00\u59cb\u4e86\r\n     * @return \u76ee\u524d\u7684\u9505\r\n     * @return \u9886\u5148\u7684\u5f53\u524d\u7403\u961fID\u548c\u7403\u5458ID\r\n     * @return \u9886\u5148\u5730\u5740\u7684\u5f53\u524d\u73a9\u5bb6\r\n     * @return \u5f15\u5bfc\u540d\u79f0\u4e2d\u7684\u5f53\u524d\u73a9\u5bb6\r\n     * @return \u9cb8\u9c7c\u4e3a\u4e86\u5706\u5f62\r\n     * @return b\u8033\u6735\u4e3a\u5706\u5f62\r\n     * @return \u4e3a\u4e86\u56de\u5408\u800c\u8fdb\u884c\u7684\r\n     * @return \u516c\u725b\u961f\u53c2\u52a0\u6bd4\u8d5b\r\n     * @return \u7a7a\u6295\u8ddf\u8e2a\u5668\uff03\uff06airdrop pot\r\n     */\r\n    function getCurrentRoundInfo()\r\n        public\r\n        view\r\n        returns(uint256, uint256, uint256, uint256, uint256, uint256, uint256, address, bytes32, uint256, uint256, uint256, uint256, uint256)\r\n    {\r\n        // \u8bbe\u7f6e\u672c\u5730rID\r\n        uint256 _rID = rID_;\r\n\r\n        return\r\n        (\r\n            round_[_rID].ico,               //0\r\n            _rID,                           //1\r\n            round_[_rID].keys,              //2\r\n            round_[_rID].end,               //3\r\n            round_[_rID].strt,              //4\r\n            round_[_rID].pot,               //5\r\n            (round_[_rID].team + (round_[_rID].plyr * 10)),     //6\r\n            plyr_[round_[_rID].plyr].addr,  //7\r\n            plyr_[round_[_rID].plyr].name,  //8\r\n            rndTmEth_[_rID][0],             //9\r\n            rndTmEth_[_rID][1],             //10\r\n            rndTmEth_[_rID][2],             //11\r\n            rndTmEth_[_rID][3],             //12\r\n            airDropTracker_ + (airDropPot_ * 1000)              //13\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev \u6839\u636e\u5730\u5740\u8fd4\u56de\u73a9\u5bb6\u4fe1\u606f\u3002\u5982\u679c\u6ca1\u6709\u7ed9\u51fa\u5730\u5740\uff0c\u5b83\u4f1a\r\n     * use msg.sender\r\n     * -functionhash- 0xee0b5d8b\r\n     * @param _addr \u60a8\u8981\u67e5\u627e\u7684\u64ad\u653e\u5668\u7684\u5730\u5740\r\n     * @return \u73a9\u5bb6ID\r\n     * @return \u53c2\u8d5b\u8005\u59d3\u540d\r\n     * @return \u5bc6\u94a5\u62e5\u6709\uff08\u5f53\u524d\u8f6e\u6b21\uff09\r\n     * @return \u8d62\u5f97\u91d1\u5e93\r\n     * @return \u4e00\u822c\u91d1\u5e93\r\n     * @return \u4f1a\u5458\u4fdd\u9669\u5e93\r\n     * @return \u7403\u5458\u5706\u7684eth\r\n     */\r\n    function getPlayerInfoByAddress(address _addr)\r\n        public\r\n        view\r\n        returns(uint256, bytes32, uint256, uint256, uint256, uint256, uint256)\r\n    {\r\n        // \u8bbe\u7f6e\u672c\u5730rID\r\n        uint256 _rID = rID_;\r\n\r\n        if (_addr == address(0))\r\n        {\r\n            _addr == msg.sender;\r\n        }\r\n        uint256 _pID = pIDxAddr_[_addr];\r\n\r\n        return\r\n        (\r\n            _pID,                               //0\r\n            plyr_[_pID].name,                   //1\r\n            plyrRnds_[_pID][_rID].keys,         //2\r\n            plyr_[_pID].win,                    //3\r\n            (plyr_[_pID].gen).add(calcUnMaskedEarnings(_pID, plyr_[_pID].lrnd)),       //4\r\n            plyr_[_pID].aff,                    //5\r\n            plyrRnds_[_pID][_rID].eth           //6\r\n        );\r\n    }\r\n\r\n//==============================================================================\r\n//     _ _  _ _   | _  _ . _  .\r\n//    (_(_)| (/_  |(_)(_||(_  . (\u8fd9+\u5de5\u5177+\u8ba1\u7b97+\u6a21\u5757=\u6211\u4eec\u7684\u8f6f\u4ef6\u5f15\u64ce)\r\n//=====================_|=======================================================\r\n    /**\r\n     * @dev \u6bcf\u5f53\u6267\u884c\u4e70\u5355\u65f6\uff0c\u903b\u8f91\u5c31\u4f1a\u8fd0\u884c\u3002\u51b3\u5b9a\u5982\u4f55\u5904\u7406\r\n     * \u4f20\u5165\u7684\u9053\u5fb7\u53d6\u51b3\u4e8e\u6211\u4eec\u662f\u5426\u5904\u4e8e\u6d3b\u8dc3\u8f6e\u6b21\r\n     */\r\n    function buyCore(uint256 _pID, uint256 _affID, uint256 _team, F3Ddatasets.EventReturns memory _eventData_)\r\n        private\r\n    {\r\n        // \u8bbe\u7f6e\u672c\u5730rID\r\n        uint256 _rID = rID_;\r\n\r\n        // \u6293\u4f4f\u65f6\u95f4\r\n        uint256 _now = now;\r\n\r\n        // \u5982\u679c\u5706\u5f62\u662f\u6d3b\u8dc3\u7684\r\n\r\n        if (_now > round_[_rID].strt + rndGap_ && (_now <= round_[_rID].end || (_now > round_[_rID].end && round_[_rID].plyr == 0)))\r\n        {\r\n            // \u81f4\u7535\u6838\u5fc3\r\n            core(_rID, _pID, msg.value, _affID, _team, _eventData_);\r\n\r\n        // \u5982\u679c\u5706\u5f62\u4e0d\u6d3b\u8dc3\r\n        } else {\r\n            // \u68c0\u67e5\u662f\u5426\u9700\u8981\u8fd0\u884c\u7ed3\u675f\u8f6e\u6b21\r\n            if (_now > round_[_rID].end && round_[_rID].ended == false)\r\n            {\r\n                // \u7ed3\u675f\u56de\u5408\uff08\u5206\u914d\u9505\uff09\u5e76\u5f00\u59cb\u65b0\u4e00\u8f6e\r\n                round_[_rID].ended = true;\r\n                _eventData_ = endRound(_eventData_);\r\n\r\n                // \u6784\u5efa\u4e8b\u4ef6\u6570\u636e\r\n                _eventData_.compressedData = _eventData_.compressedData + (_now * 1000000000000000000);\r\n                _eventData_.compressedIDs = _eventData_.compressedIDs + _pID;\r\n\r\n                // \u706b\u4e70\u548c\u5206\u53d1\u4e8b\u4ef6\r\n                emit F3Devents.onBuyAndDistribute\r\n                (\r\n                    msg.sender,\r\n                    plyr_[_pID].name,\r\n                    msg.value,\r\n                    _eventData_.compressedData,\r\n                    _eventData_.compressedIDs,\r\n                    _eventData_.winnerAddr,\r\n                    _eventData_.winnerName,\r\n                    _eventData_.amountWon,\r\n                    _eventData_.newPot,\r\n                    _eventData_.P3DAmount,\r\n                    _eventData_.genAmount\r\n                );\r\n            }\r\n\r\n            // \u5c06eth\u653e\u5165\u7403\u5458\u4fdd\u9669\u5e93\u4e2d\r\n            plyr_[_pID].gen = plyr_[_pID].gen.add(msg.value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev \u6bcf\u5f53\u6267\u884c\u91cd\u65b0\u52a0\u8f7d\u8ba2\u5355\u65f6\uff0c\u903b\u8f91\u5c31\u4f1a\u8fd0\u884c\u3002\u51b3\u5b9a\u5982\u4f55\u5904\u7406\r\n     * \u4f20\u5165\u7684\u9053\u5fb7\u53d6\u51b3\u4e8e\u6211\u4eec\u662f\u5426\u5904\u4e8e\u6d3b\u8dc3\u8f6e\u6b21\r\n     */\r\n    function reLoadCore(uint256 _pID, uint256 _affID, uint256 _team, uint256 _eth, F3Ddatasets.EventReturns memory _eventData_)\r\n        private\r\n    {\r\n        // \u8bbe\u7f6e\u672c\u5730rID\r\n        uint256 _rID = rID_;\r\n\r\n        // \u6293\u4f4f\u65f6\u95f4\r\n        uint256 _now = now;\r\n\r\n        // \u5982\u679c\u5706\u5f62\u662f\u6d3b\u8dc3\u7684\r\n        if (_now > round_[_rID].strt + rndGap_ && (_now <= round_[_rID].end || (_now > round_[_rID].end && round_[_rID].plyr == 0)))\r\n        {\r\n            // \u4ece\u6240\u6709\u91d1\u5e93\u4e2d\u83b7\u53d6\u6536\u76ca\u5e76\u5c06\u672a\u4f7f\u7528\u7684\u91d1\u989d\u5f52\u8fd8\u7ed9gen\u4fdd\u9669\u5e93\r\n            // \u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u81ea\u5b9a\u4e49safemath\u5e93\u3002\u5982\u679c\u73a9\u5bb6\uff0c\u8fd9\u5c06\u629b\u51fa\r\n            // \u4ed6\u4eec\u8bd5\u56fe\u82b1\u66f4\u591a\u7684\u65f6\u95f4\u3002\r\n            plyr_[_pID].gen = withdrawEarnings(_pID).sub(_eth);\r\n\r\n            // \u81f4\u7535\u6838\u5fc3\r\n            core(_rID, _pID, _eth, _affID, _team, _eventData_);\r\n\r\n        // \u5982\u679cround\u4e0d\u6d3b\u52a8\u5e76\u4e14\u9700\u8981\u8fd0\u884cend round\r\n        } else if (_now > round_[_rID].end && round_[_rID].ended == false) {\r\n            // end the round (distributes pot) & start new round\r\n            round_[_rID].ended = true;\r\n            _eventData_ = endRound(_eventData_);\r\n\r\n            // \u6784\u5efa\u4e8b\u4ef6\u6570\u636e\r\n            _eventData_.compressedData = _eventData_.compressedData + (_now * 1000000000000000000);\r\n            _eventData_.compressedIDs = _eventData_.compressedIDs + _pID;\r\n\r\n            // \u706b\u4e70\u548c\u5206\u53d1\u4e8b\u4ef6\r\n            emit F3Devents.onReLoadAndDistribute\r\n            (\r\n                msg.sender,\r\n                plyr_[_pID].name,\r\n                _eventData_.compressedData,\r\n                _eventData_.compressedIDs,\r\n                _eventData_.winnerAddr,\r\n                _eventData_.winnerName,\r\n                _eventData_.amountWon,\r\n                _eventData_.newPot,\r\n                _eventData_.P3DAmount,\r\n                _eventData_.genAmount\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev \u8fd9\u662f\u5728\u56de\u5408\u751f\u6548\u671f\u95f4\u53d1\u751f\u7684\u4efb\u4f55\u8d2d\u4e70/\u91cd\u65b0\u52a0\u8f7d\u7684\u6838\u5fc3\u903b\u8f91\r\n     */\r\n    function core(uint256 _rID, uint256 _pID, uint256 _eth, uint256 _affID, uint256 _team, F3Ddatasets.EventReturns memory _eventData_)\r\n        private\r\n    {\r\n        // \u5982\u679c\u73a9\u5bb6\u662f\u65b0\u624b\r\n        if (plyrRnds_[_pID][_rID].keys == 0)\r\n            _eventData_ = managePlayer(_pID, _eventData_);\r\n\r\n        // \u65e9\u671f\u7684\u9053\u8def\u9650\u5236\u5668\r\n        if (round_[_rID].eth < 100000000000000000000 && plyrRnds_[_pID][_rID].eth.add(_eth) > 1000000000000000000)\r\n        {\r\n            uint256 _availableLimit = (1000000000000000000).sub(plyrRnds_[_pID][_rID].eth);\r\n            uint256 _refund = _eth.sub(_availableLimit);\r\n            plyr_[_pID].gen = plyr_[_pID].gen.add(_refund);\r\n            _eth = _availableLimit;\r\n        }\r\n\r\n        // \u5982\u679c\u7559\u4e0b\u7684eth\u5927\u4e8emin eth\u5141\u8bb8\uff08\u62b1\u6b49\u6ca1\u6709\u53e3\u888b\u68c9\u7ed2\uff09\r\n        if (_eth > 1000000000)\r\n        {\r\n\r\n            // \u94f8\u9020\u65b0\u94a5\u5319\r\n            uint256 _keys = (round_[_rID].eth).keysRec(_eth);\r\n\r\n            // \u5982\u679c\u4ed6\u4eec\u81f3\u5c11\u4e70\u4e86\u4e00\u628a\u94a5\u5319\r\n            if (_keys >= 1000000000000000000)\r\n            {\r\n            updateTimer(_keys, _rID);\r\n\r\n            // \u6811\u7acb\u65b0\u7684\u9886\u5bfc\u8005\r\n            if (round_[_rID].plyr != _pID)\r\n                round_[_rID].plyr = _pID;\r\n            if (round_[_rID].team != _team)\r\n                round_[_rID].team = _team;\r\n\r\n            // \u5c06\u65b0\u7684\u9886\u5bfc\u8005\u5e03\u5c14\u8bbe\u4e3a\u771f\r\n            _eventData_.compressedData = _eventData_.compressedData + 100;\r\n        }\r\n\r\n\r\n            // \u5b58\u50a8\u7a7a\u6295\u8ddf\u8e2a\u5668\u7f16\u53f7\uff08\u81ea\u4e0a\u6b21\u7a7a\u6295\u4ee5\u6765\u7684\u8d2d\u4e70\u6b21\u6570\uff09\r\n            _eventData_.compressedData = _eventData_.compressedData + (airDropTracker_ * 1000);\r\n\r\n            // \u66f4\u65b0\u64ad\u653e\u5668\r\n            plyrRnds_[_pID][_rID].keys = _keys.add(plyrRnds_[_pID][_rID].keys);\r\n            plyrRnds_[_pID][_rID].eth = _eth.add(plyrRnds_[_pID][_rID].eth);\r\n\r\n            // \u66f4\u65b0\u56de\u5408\r\n            round_[_rID].keys = _keys.add(round_[_rID].keys);\r\n            round_[_rID].eth = _eth.add(round_[_rID].eth);\r\n            rndTmEth_[_rID][_team] = _eth.add(rndTmEth_[_rID][_team]);\r\n\r\n            // \u5206\u914d\u9053\u5fb7\r\n            _eventData_ = distributeExternal(_rID, _eth, _team, _eventData_);\r\n            _eventData_ = distributeInternal(_rID, _pID, _eth, _affID, _team, _keys, _eventData_);\r\n\r\n            // \u8c03\u7528end tx\u51fd\u6570\u6765\u89e6\u53d1\u7ed3\u675ftx\u4e8b\u4ef6\u3002\r\n            endTx(_pID, _team, _eth, _keys, _eventData_);\r\n        }\r\n    }\r\n//==============================================================================\r\n//     _ _ | _   | _ _|_ _  _ _  .\r\n//    (_(_||(_|_||(_| | (_)| _\\  .\r\n//==============================================================================\r\n    /**\r\n     * @dev \u8ba1\u7b97\u672a\u5c4f\u853d\u7684\u6536\u5165\uff08\u53ea\u8ba1\u7b97\uff0c\u4e0d\u66f4\u65b0\u63a9\u7801\uff09k)\r\n     * @return earnings in wei format\r\n     */\r\n    function calcUnMaskedEarnings(uint256 _pID, uint256 _rIDlast)\r\n        private\r\n        view\r\n        returns(uint256)\r\n    {\r\n        return(  (((round_[_rIDlast].mask).mul(plyrRnds_[_pID][_rIDlast].keys)) / (1000000000000000000)).sub(plyrRnds_[_pID][_rIDlast].mask)  );\r\n    }\r\n\r\n    /**\r\n     * @dev \u8fd4\u56de\u7ed9\u51fa\u4e00\u5b9a\u6570\u91cfeth\u7684\u5bc6\u94a5\u6570\u91cf.\r\n     * -functionhash- 0xce89c80c\r\n     * @param _rID round ID you want price for\r\n     * @param _eth amount of eth sent in\r\n     * @return keys received\r\n     */\r\n    function calcKeysReceived(uint256 _rID, uint256 _eth)\r\n        public\r\n        view\r\n        returns(uint256)\r\n    {\r\n        // \u6293\u4f4f\u65f6\u95f4\r\n        uint256 _now = now;\r\n\r\n        // \u6211\u4eec\u662f\u4e00\u4e2a\u56de\u5408?\r\n        if (_now > round_[_rID].strt + rndGap_ && (_now <= round_[_rID].end || (_now > round_[_rID].end && round_[_rID].plyr == 0)))\r\n            return ( (round_[_rID].eth).keysRec(_eth) );\r\n        else // \u8f6c\u8fc7\u6765\u3002\u9700\u8981\u65b0\u4e00\u8f6e\u7684\u94a5\u5319\r\n            return ( (_eth).keys() );\r\n    }\r\n\r\n    /**\r\n     * @dev \u8fd4\u56deX\u952e\u7684\u5f53\u524deth\u4ef7\u683c\u3002\r\n     * -functionhash- 0xcf808000\r\n     * @param _keys \u6240\u9700\u7684\u952e\u6570\uff0818\u4f4d\u5341\u8fdb\u5236\u683c\u5f0f\uff09\r\n     * @return \u9700\u8981\u53d1\u9001\u7684eth\u6570\u91cf\r\n     */\r\n    function iWantXKeys(uint256 _keys)\r\n        public\r\n        view\r\n        returns(uint256)\r\n    {\r\n        // \u8bbe\u7f6e\u672c\u5730rID\r\n        uint256 _rID = rID_;\r\n\r\n        // \u6293\u4f4f\u65f6\u95f4\r\n        uint256 _now = now;\r\n\r\n        // \u6211\u4eec\u662f\u4e00\u4e2a\u56de\u5408?\r\n        if (_now > round_[_rID].strt + rndGap_ && (_now <= round_[_rID].end || (_now > round_[_rID].end && round_[_rID].plyr == 0)))\r\n            return ( (round_[_rID].keys.add(_keys)).ethRec(_keys) );\r\n        else // rounds over.  need price for new round\r\n            return ( (_keys).eth() );\r\n    }\r\n//==============================================================================\r\n//    _|_ _  _ | _  .\r\n//     | (_)(_)|_\\  .\r\n//==============================================================================\r\n    /**\r\n     * @dev \u4ece\u59d3\u540d\u5408\u540c\u4e2d\u63a5\u6536\u59d3\u540d/\u7403\u5458\u4fe1\u606f\r\n     */\r\n    function receivePlayerInfo(uint256 _pID, address _addr, bytes32 _name, uint256 _laff)\r\n        external\r\n    {\r\n        require (msg.sender == address(PlayerBook), \"your not playerNames contract... hmmm..\");\r\n        if (pIDxAddr_[_addr] != _pID)\r\n            pIDxAddr_[_addr] = _pID;\r\n        if (pIDxName_[_name] != _pID)\r\n            pIDxName_[_name] = _pID;\r\n        if (plyr_[_pID].addr != _addr)\r\n            plyr_[_pID].addr = _addr;\r\n        if (plyr_[_pID].name != _name)\r\n            plyr_[_pID].name = _name;\r\n        if (plyr_[_pID].laff != _laff)\r\n            plyr_[_pID].laff = _laff;\r\n        if (plyrNames_[_pID][_name] == false)\r\n            plyrNames_[_pID][_name] = true;\r\n    }\r\n\r\n    /**\r\n     * @dev \u63a5\u6536\u6574\u4e2a\u73a9\u5bb6\u540d\u5355\r\n     */\r\n    function receivePlayerNameList(uint256 _pID, bytes32 _name)\r\n        external\r\n    {\r\n        require (msg.sender == address(PlayerBook), \"your not playerNames contract... hmmm..\");\r\n        if(plyrNames_[_pID][_name] == false)\r\n            plyrNames_[_pID][_name] = true;\r\n    }\r\n\r\n    /**\r\n     * @dev \u83b7\u5f97\u73b0\u6709\u6216\u6ce8\u518c\u65b0\u7684pID\u3002\u5f53\u73a9\u5bb6\u53ef\u80fd\u662f\u65b0\u624b\u65f6\u4f7f\u7528\u6b64\u529f\u80fd\r\n     * @return pID\r\n     */\r\n    function determinePID(F3Ddatasets.EventReturns memory _eventData_)\r\n        private\r\n        returns (F3Ddatasets.EventReturns)\r\n    {\r\n        uint256 _pID = pIDxAddr_[msg.sender];\r\n        // \u5982\u679c\u73a9\u5bb6\u662f\u8fd9\u4e2a\u7248\u672c\u7684worldfomo\u7684\u65b0\u624b\r\n        if (_pID == 0)\r\n        {\r\n            // \u4ece\u73a9\u5bb6\u59d3\u540d\u5408\u540c\u4e2d\u83b7\u53d6\u4ed6\u4eec\u7684\u73a9\u5bb6ID\uff0c\u59d3\u540d\u548c\u6700\u540e\u4e00\u4e2a\u8eab\u4efd\u8bc1\r\n            _pID = PlayerBook.getPlayerID(msg.sender);\r\n            bytes32 _name = PlayerBook.getPlayerName(_pID);\r\n            uint256 _laff = PlayerBook.getPlayerLAff(_pID);\r\n\r\n            // \u8bbe\u7f6e\u73a9\u5bb6\u5e10\u6237\r\n            pIDxAddr_[msg.sender] = _pID;\r\n            plyr_[_pID].addr = msg.sender;\r\n\r\n            if (_name != \"\")\r\n            {\r\n                pIDxName_[_name] = _pID;\r\n                plyr_[_pID].name = _name;\r\n                plyrNames_[_pID][_name] = true;\r\n            }\r\n\r\n            if (_laff != 0 && _laff != _pID)\r\n                plyr_[_pID].laff = _laff;\r\n\r\n            // \u5c06\u65b0\u73a9\u5bb6bool\u8bbe\u7f6e\u4e3atrue\r\n            _eventData_.compressedData = _eventData_.compressedData + 1;\r\n        }\r\n        return (_eventData_);\r\n    }\r\n\r\n    /**\r\n     * @dev \u68c0\u67e5\u4ee5\u786e\u4fdd\u7528\u6237\u9009\u62e9\u4e86\u4e00\u4e2a\u6709\u6548\u7684\u56e2\u961f\u3002\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u56e2\u961f\r\n     * \u9ed8\u8ba4\uff08\u4e2d\u56fd\uff09\r\n     */\r\n    function verifyTeam(uint256 _team)\r\n        private\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        if (_team < 0 || _team > 3)\r\n            return(2);\r\n        else\r\n            return(_team);\r\n    }\r\n\r\n    /**\r\n     * @dev \u51b3\u5b9a\u662f\u5426\u9700\u8981\u8fd0\u884c\u5706\u5f62\u7ed3\u675f\u5e76\u5f00\u59cb\u65b0\u4e00\u8f6e\u3002\u800c\u5982\u679c\r\n     * \u9700\u8981\u79fb\u52a8\u4e4b\u524d\u73a9\u8fc7\u7684\u7403\u5458\u672a\u7ecf\u63a9\u76d6\u7684\u6536\u5165\r\n     */\r\n    function managePlayer(uint256 _pID, F3Ddatasets.EventReturns memory _eventData_)\r\n        private\r\n        returns (F3Ddatasets.EventReturns)\r\n    {\r\n        // \u5982\u679c\u73a9\u5bb6\u5df2\u7ecf\u73a9\u8fc7\u4e0a\u4e00\u8f6e\uff0c\u5219\u79fb\u52a8\u4ed6\u4eec\u672a\u7ecf\u63a9\u76d6\u7684\u6536\u76ca\r\n        // \u4ece\u90a3\u4e00\u8f6e\u5230\u751f\u6210\u91d1\u5e93\u3002\r\n        if (plyr_[_pID].lrnd != 0)\r\n            updateGenVault(_pID, plyr_[_pID].lrnd);\r\n\r\n        // \u66f4\u65b0\u73a9\u5bb6\u7684\u6700\u540e\u4e00\u8f6e\u6bd4\u8d5b\r\n        plyr_[_pID].lrnd = rID_;\r\n\r\n        // \u5c06\u8fde\u63a5\u7684\u5706\u5f62bool\u8bbe\u7f6e\u4e3atrue\r\n        _eventData_.compressedData = _eventData_.compressedData + 10;\r\n\r\n        return(_eventData_);\r\n    }\r\n\r\n    /**\r\n     * @dev \u7ed3\u675f\u8fd9\u4e00\u8f6e\u3002\u7ba1\u7406\u652f\u4ed8\u8d62\u5bb6/\u62c6\u5206\u9505\r\n     */\r\n    function endRound(F3Ddatasets.EventReturns memory _eventData_)\r\n        private\r\n        returns (F3Ddatasets.EventReturns)\r\n    {\r\n        // \u8bbe\u7f6e\u672c\u5730rID\r\n        uint256 _rID = rID_;\r\n\r\n        // \u6293\u4f4f\u6211\u4eec\u7684\u83b7\u80dc\u7403\u5458\u548c\u7403\u961fID\r\n        uint256 _winPID = round_[_rID].plyr;\r\n        uint256 _winTID = round_[_rID].team;\r\n\r\n        // \u6293\u4f4f\u6211\u4eec\u7684\u9505\u91cf\r\n        uint256 _pot = round_[_rID].pot;\r\n\r\n        // \u8ba1\u7b97\u6211\u4eec\u7684\u8d62\u5bb6\u4efd\u989d\uff0c\u793e\u533a\u5956\u52b1\uff0c\u53d1\u884c\u4efd\u989d\uff0c\r\n        // \u4efd\u989d\uff0c\u4ee5\u53ca\u4e3a\u4e0b\u4e00\u4e2a\u5e95\u6c60\u4fdd\u7559\u7684\u91d1\u989d\r\n        uint256 _win = (_pot.mul(25)) / 100;\r\n        uint256 _com = (_pot.mul(3)) / 100;\r\n        uint256 _gen = (_pot.mul(potSplit_[_winTID].gen)) / 100;\r\n        uint256 _p3d = (_pot.mul(potSplit_[_winTID].p3d)) / 100;\r\n        uint256 _res = (((_pot.sub(_win)).sub(_com)).sub(_gen)).sub(_p3d);\r\n\r\n        // k\u8ba1\u7b97\u5706\u5f62\u9762\u7f69\u7684ppt\r\n        uint256 _ppt = (_gen.mul(1000000000000000000)) / (round_[_rID].keys);\r\n        uint256 _dust = _gen.sub((_ppt.mul(round_[_rID].keys)) / 1000000000000000000);\r\n        if (_dust > 0)\r\n        {\r\n            _gen = _gen.sub(_dust);\r\n            _res = _res.add(_dust);\r\n        }\r\n\r\n        // \u652f\u4ed8\u6211\u4eec\u7684\u8d62\u5bb6\r\n        plyr_[_winPID].win = _win.add(plyr_[_winPID].win);\r\n\r\n        // \u793e\u533a\u5956\u52b1\r\n\r\n        admin.transfer(_com);\r\n\r\n        // \u5c06gen\u90e8\u5206\u5206\u914d\u7ed9\u5bc6\u94a5\u6301\u6709\u8005\r\n        round_[_rID].mask = _ppt.add(round_[_rID].mask);\r\n\r\n        // \u51c6\u5907\u4e8b\u4ef6\u6570\u636e\r\n        _eventData_.compressedData = _eventData_.compressedData + (round_[_rID].end * 1000000);\r\n        _eventData_.compressedIDs = _eventData_.compressedIDs + (_winPID * 100000000000000000000000000) + (_winTID * 100000000000000000);\r\n        _eventData_.winnerAddr = plyr_[_winPID].addr;\r\n        _eventData_.winnerName = plyr_[_winPID].name;\r\n        _eventData_.amountWon = _win;\r\n        _eventData_.genAmount = _gen;\r\n        _eventData_.P3DAmount = _p3d;\r\n        _eventData_.newPot = _res;\r\n\r\n        // \u4e0b\u4e00\u8f6e\u5f00\u59cb\r\n        rID_++;\r\n        _rID++;\r\n        round_[_rID].strt = now;\r\n        round_[_rID].end = now.add(rndInit_).add(rndGap_);\r\n        round_[_rID].pot = _res;\r\n\r\n        return(_eventData_);\r\n    }\r\n\r\n    /**\r\n     * @dev moves any unmasked earnings to gen vault.  updates earnings mask\r\n     */\r\n    function updateGenVault(uint256 _pID, uint256 _rIDlast)\r\n        private\r\n    {\r\n        uint256 _earnings = calcUnMaskedEarnings(_pID, _rIDlast);\r\n        if (_earnings > 0)\r\n        {\r\n            // \u653e\u5165gen\u5e93\r\n            plyr_[_pID].gen = _earnings.add(plyr_[_pID].gen);\r\n            // \u901a\u8fc7\u66f4\u65b0\u9762\u5177\u5c06\u6536\u5165\u5f52\u96f6\r\n            plyrRnds_[_pID][_rIDlast].mask = _earnings.add(plyrRnds_[_pID][_rIDlast].mask);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev \u6839\u636e\u8d2d\u4e70\u7684\u5168\u90e8\u5bc6\u94a5\u6570\u91cf\u66f4\u65b0\u5706\u5f62\u8ba1\u65f6\u5668\u3002\r\n     */\r\n    function updateTimer(uint256 _keys, uint256 _rID)\r\n        private\r\n    {\r\n        // \u6293\u4f4f\u65f6\u95f4\r\n        uint256 _now = now;\r\n\r\n        // \u6839\u636e\u8d2d\u4e70\u7684\u94a5\u5319\u6570\u8ba1\u7b97\u65f6\u95f4\r\n        uint256 _newTime;\r\n        if (_now > round_[_rID].end && round_[_rID].plyr == 0)\r\n            _newTime = (((_keys) / (1000000000000000000)).mul(rndInc_)).add(_now);\r\n        else\r\n            _newTime = (((_keys) / (1000000000000000000)).mul(rndInc_)).add(round_[_rID].end);\r\n\r\n        // \u6bd4\u8f83max\u5e76\u8bbe\u7f6e\u65b0\u7684\u7ed3\u675f\u65f6\u95f4\r\n        if (_newTime < (rndMax_).add(_now))\r\n            round_[_rID].end = _newTime;\r\n        else\r\n            round_[_rID].end = rndMax_.add(_now);\r\n    }\r\n\r\n    /**\r\n     * @dev \u751f\u62100-99\u4e4b\u95f4\u7684\u968f\u673a\u6570\u5e76\u68c0\u67e5\u662f\u5426\u5b58\u5728\r\n     * \u5bfc\u81f4\u7a7a\u6295\u83b7\u80dc\r\n     * @return \u6211\u4eec\u6709\u8d62\u5bb6\u5417\uff1f\u6211\u4eec\u6709\u8d62\u5bb6\u5417\uff1f\r\n     */\r\n    function airdrop()\r\n        private\r\n        view\r\n        returns(bool)\r\n    {\r\n        uint256 seed = uint256(keccak256(abi.encodePacked(\r\n\r\n            (block.timestamp).add\r\n            (block.difficulty).add\r\n            ((uint256(keccak256(abi.encodePacked(block.coinbase)))) / (now)).add\r\n            (block.gaslimit).add\r\n            ((uint256(keccak256(abi.encodePacked(msg.sender)))) / (now)).add\r\n            (block.number)\r\n\r\n        )));\r\n        if((seed - ((seed / 1000) * 1000)) < airDropTracker_)\r\n            return(true);\r\n        else\r\n            return(false);\r\n    }\r\n\r\n    /**\r\n     * @dev \u6839\u636e\u5bf9com\uff0caff\u548cp3d\u7684\u8d39\u7528\u5206\u914deth\r\n     */\r\n    function distributeExternal(uint256 _rID, uint256 _eth, uint256 _team, F3Ddatasets.EventReturns memory _eventData_)\r\n        private\r\n        returns(F3Ddatasets.EventReturns)\r\n    {\r\n        // \u652f\u4ed83\uff05\u7684\u793e\u533a\u5956\u52b1\r\n        uint256 _com = (_eth.mul(3)) / 100;\r\n        uint256 _p3d;\r\n        if (!address(admin).call.value(_com)())\r\n        {\r\n            _p3d = _com;\r\n            _com = 0;\r\n        }\r\n\r\n\r\n        // \u652f\u4ed8p3d\r\n        _p3d = _p3d.add((_eth.mul(fees_[_team].p3d)) / (100));\r\n        if (_p3d > 0)\r\n        {\r\n            round_[_rID].pot = round_[_rID].pot.add(_p3d);\r\n\r\n            // \u8bbe\u7f6e\u4e8b\u4ef6\u6570\u636e\r\n            _eventData_.P3DAmount = _p3d.add(_eventData_.P3DAmount);\r\n        }\r\n\r\n        return(_eventData_);\r\n    }\r\n\r\n    function potSwap()\r\n        external\r\n        payable\r\n    {\r\n        // \u8bbe\u7f6e\u672c\u5730rID\r\n        uint256 _rID = rID_ + 1;\r\n\r\n        round_[_rID].pot = round_[_rID].pot.add(msg.value);\r\n        emit F3Devents.onPotSwapDeposit(_rID, msg.value);\r\n    }\r\n\r\n    /**\r\n     * @dev \u6839\u636e\u5bf9gen\u548cpot\u7684\u8d39\u7528\u5206\u914deth\r\n     */\r\n    function distributeInternal(uint256 _rID, uint256 _pID, uint256 _eth, uint256 _affID, uint256 _team, uint256 _keys, F3Ddatasets.EventReturns memory _eventData_)\r\n        private\r\n        returns(F3Ddatasets.EventReturns)\r\n    {\r\n        // \u8ba1\u7b97gen\u4efd\u989d\r\n        uint256 _gen = (_eth.mul(fees_[_team].gen)) / 100;\r\n\r\n        // distribute share to affiliate 15%\r\n        uint256 _aff = (_eth.mul(15)) / 100;\r\n\r\n        // \u66f4\u65b0\u9053\u5fb7\u5e73\u8861 (eth = eth - (com share + pot swap share + aff share))\r\n        _eth = _eth.sub(((_eth.mul(18)) / 100).add((_eth.mul(fees_[_team].p3d)) / 100));\r\n\r\n        // \u8ba1\u7b97\u9505\r\n        uint256 _pot = _eth.sub(_gen);\r\n\r\n        // decide what to do with affiliate share of fees\r\n        // affiliate must not be self, and must have a name registered\r\n        if (_affID != _pID && plyr_[_affID].name != '') {\r\n            plyr_[_affID].aff = _aff.add(plyr_[_affID].aff);\r\n            emit F3Devents.onAffiliatePayout(_affID, plyr_[_affID].addr, plyr_[_affID].name, _rID, _pID, _aff, now);\r\n        } else {\r\n            _gen = _gen.add(_aff);\r\n        }\r\n\r\n        // \u5206\u914dgen\u4efd\u989d\uff08\u8fd9\u5c31\u662fupdateMasks\uff08\uff09\u6240\u505a\u7684\uff09\u5e76\u8fdb\u884c\u8c03\u6574\r\n        // \u7070\u5c18\u5e73\u8861\u3002\r\n        uint256 _dust = updateMasks(_rID, _pID, _gen, _keys);\r\n        if (_dust > 0)\r\n            _gen = _gen.sub(_dust);\r\n\r\n        // \u6dfb\u52a0eth\u5230pot\r\n        round_[_rID].pot = _pot.add(_dust).add(round_[_rID].pot);\r\n\r\n        // \u8bbe\u7f6e\u4e8b\u4ef6\u6570\u636e\r\n        _eventData_.genAmount = _gen.add(_eventData_.genAmount);\r\n        _eventData_.potAmount = _pot;\r\n\r\n        return(_eventData_);\r\n    }\r\n\r\n    /**\r\n     * @dev \u8d2d\u4e70\u94a5\u5319\u65f6\u66f4\u65b0\u5706\u5f62\u548c\u73a9\u5bb6\u7684\u9762\u5177\r\n     * @return \u7070\u5c18\u9057\u7559\u4e0b\u6765\r\n     */\r\n    function updateMasks(uint256 _rID, uint256 _pID, uint256 _gen, uint256 _keys)\r\n        private\r\n        returns(uint256)\r\n    {\r\n        /* \u63a9\u76d6\u7b14\u8bb0\r\n            \u6536\u5165\u9762\u5177\u5bf9\u4eba\u4eec\u6765\u8bf4\u662f\u4e00\u4e2a\u68d8\u624b\u7684\u4e8b\u60c5\u3002\r\n            \u8fd9\u91cc\u8981\u7406\u89e3\u7684\u57fa\u672c\u5185\u5bb9\u3002\u5c06\u6709\u4e00\u4e2a\u5168\u7403\u6027\u7684\r\n            \u8ddf\u8e2a\u5668\u57fa\u4e8e\u6bcf\u8f6e\u7684\u6bcf\u80a1\u5229\u6da6\uff0c\u589e\u52a0\r\n            \u76f8\u5173\u6bd4\u4f8b\u589e\u52a0\u4efd\u989d\u3002\r\n\r\n            \u73a9\u5bb6\u5c06\u6709\u4e00\u4e2a\u989d\u5916\u7684\u9762\u5177\u57fa\u672c\u4e0a\u8bf4\u201c\u57fa\u4e8e\r\n            \u5728\u56de\u5408\u9762\u5177\uff0c\u6211\u7684\u80a1\u7968\uff0c\u4ee5\u53ca\u6211\u5df2\u7ecf\u64a4\u56de\u4e86\u591a\u5c11\uff0c\r\n            \u8fd8\u6b20\u6211\u591a\u5c11\u94b1\u5462\uff1f\u201c\r\n        */\r\n\r\n        // \u57fa\u4e8e\u6b64\u8d2d\u4e70\u7684\u6bcf\u4e2a\u952e\u548c\u5706\u5f62\u9762\u5177\u7684\u9499\u5229\u6da6:(\u7070\u5c18\u8fdb\u5165\u9505\uff09\r\n        uint256 _ppt = (_gen.mul(1000000000000000000)) / (round_[_rID].keys);\r\n        round_[_rID].mask = _ppt.add(round_[_rID].mask);\r\n\r\n        // \u8ba1\u7b97\u73a9\u5bb6\u4ece\u4ed6\u4eec\u81ea\u5df1\u8d2d\u4e70\u7684\u6536\u5165\uff08\u4ec5\u57fa\u4e8e\u94a5\u5319\r\n        // \u4ed6\u4eec\u521a\u521a\u4e70\u4e86\uff09\u3002\u5e76\u66f4\u65b0\u73a9\u5bb6\u6536\u5165\u63a9\r\n        uint256 _pearn = (_ppt.mul(_keys)) / (1000000000000000000);\r\n        plyrRnds_[_pID][_rID].mask = (((round_[_rID].mask.mul(_keys)) / (1000000000000000000)).sub(_pearn)).add(plyrRnds_[_pID][_rID].mask);\r\n\r\n        // \u8ba1\u7b97\u5e76\u8fd4\u56de\u7070\u5c18\r\n        return(_gen.sub((_ppt.mul(round_[_rID].keys)) / (1000000000000000000)));\r\n    }\r\n\r\n    /**\r\n     * @dev \u52a0\u4e0a\u672a\u516c\u5f00\u7684\u6536\u5165\u548c\u4fdd\u9669\u91d1\u6536\u5165\uff0c\u5c06\u5b83\u4eec\u5168\u90e8\u8bbe\u4e3a0\r\n     * @return wei\u683c\u5f0f\u7684\u6536\u76ca\r\n     */\r\n    function withdrawEarnings(uint256 _pID)\r\n        private\r\n        returns(uint256)\r\n    {\r\n        // \u66f4\u65b0gen\u4fdd\u9669\u5e93\r\n        updateGenVault(_pID, plyr_[_pID].lrnd);\r\n\r\n        // \u6765\u81ea\u91d1\u5e93\r\n        uint256 _earnings = (plyr_[_pID].win).add(plyr_[_pID].gen).add(plyr_[_pID].aff);\r\n        if (_earnings > 0)\r\n        {\r\n            plyr_[_pID].win = 0;\r\n            plyr_[_pID].gen = 0;\r\n            plyr_[_pID].aff = 0;\r\n        }\r\n\r\n        return(_earnings);\r\n    }\r\n\r\n    /**\r\n     * @dev \u51c6\u5907\u538b\u7f29\u6570\u636e\u5e76\u89e6\u53d1\u4e8b\u4ef6\u4ee5\u8fdb\u884c\u8d2d\u4e70\u6216\u91cd\u65b0\u52a0\u8f7dtx\r\n     */\r\n    function endTx(uint256 _pID, uint256 _team, uint256 _eth, uint256 _keys, F3Ddatasets.EventReturns memory _eventData_)\r\n        private\r\n    {\r\n        _eventData_.compressedData = _eventData_.compressedData + (now * 1000000000000000000) + (_team * 100000000000000000000000000000);\r\n        _eventData_.compressedIDs = _eventData_.compressedIDs + _pID + (rID_ * 10000000000000000000000000000000000000000000000000000);\r\n\r\n        emit F3Devents.onEndTx\r\n        (\r\n            _eventData_.compressedData,\r\n            _eventData_.compressedIDs,\r\n            plyr_[_pID].name,\r\n            msg.sender,\r\n            _eth,\r\n            _keys,\r\n            _eventData_.winnerAddr,\r\n            _eventData_.winnerName,\r\n            _eventData_.amountWon,\r\n            _eventData_.newPot,\r\n            _eventData_.P3DAmount,\r\n            _eventData_.genAmount,\r\n            _eventData_.potAmount,\r\n            airDropPot_\r\n        );\r\n    }\r\n//==============================================================================\r\n//    (~ _  _    _._|_    .\r\n//    _)(/_(_|_|| | | \\/  .\r\n//====================/=========================================================\r\n    /** \u5408\u540c\u90e8\u7f72\u540e\uff0c\u5b83\u5c06\u88ab\u505c\u7528\u3002\u8fd9\u662f\u4e00\u6b21\r\n     * \u4f7f\u7528\u5c06\u6fc0\u6d3b\u5408\u540c\u7684\u529f\u80fd\u3002\u6211\u4eec\u8fd9\u6837\u505a\u662f\u5f00\u53d1\u8005\r\n     * \u6709\u65f6\u95f4\u5728\u7f51\u7edc\u7aef\u8bbe\u7f6e                           **/\r\n    bool public activated_ = false;\r\n    function activate()\r\n        public\r\n    {\r\n        // \u53ea\u6709\u56e2\u961f\u624d\u80fd\u6fc0\u6d3b\r\n        require(msg.sender == admin, \"only admin can activate\");\r\n\r\n\r\n        // \u53ea\u80fd\u8dd1\u4e00\u6b21\r\n        require(activated_ == false, \"FOMO Free already activated\");\r\n\r\n        // \u6fc0\u6d3b\u5408\u540c\r\n        activated_ = true;\r\n\r\n        // \u8ba9\u6211\u4eec\u5f00\u59cb\u7b2c\u4e00\u8f6e\r\n        rID_ = 1;\r\n            round_[1].strt = now + rndExtra_ - rndGap_;\r\n            round_[1].end = now + rndInit_ + rndExtra_;\r\n    }\r\n}\r\n\r\n//==============================================================================\r\n//   __|_ _    __|_ _  .\r\n//  _\\ | | |_|(_ | _\\  .\r\n//==============================================================================\r\nlibrary F3Ddatasets {\r\n    //\u538b\u7f29\u6570\u636e\u5bc6\u94a5\r\n    // [76-33][32][31][30][29][28-18][17][16-6][5-3][2][1][0]\r\n        // 0 - new player (bool)\r\n        // 1 - joined round (bool)\r\n        // 2 - new  leader (bool)\r\n        // 3-5 - air drop tracker (uint 0-999)\r\n        // 6-16 - round end time\r\n        // 17 - winnerTeam\r\n        // 18 - 28 timestamp\r\n        // 29 - team\r\n        // 30 - 0 = reinvest (round), 1 = buy (round), 2 = buy (ico), 3 = reinvest (ico)\r\n        // 31 - airdrop happened bool\r\n        // 32 - airdrop tier\r\n        // 33 - airdrop amount won\r\n    //\u538b\u7f29\u7684ID\u5bc6\u94a5\r\n    // [77-52][51-26][25-0]\r\n        // 0-25 - pID\r\n        // 26-51 - winPID\r\n        // 52-77 - rID\r\n    struct EventReturns {\r\n        uint256 compressedData;\r\n        uint256 compressedIDs;\r\n        address winnerAddr;         // \u83b7\u80dc\u8005\u5730\u5740\r\n        bytes32 winnerName;         // \u83b7\u80dc\u8005\u5730\u5740\r\n        uint256 amountWon;          // \u91d1\u989d\u8d62\u4e86\r\n        uint256 newPot;             // \u5728\u65b0\u9505\u4e2d\u7684\u6570\u91cf\r\n        uint256 P3DAmount;          // \u91d1\u989d\u5206\u914d\u7ed9p3d\r\n        uint256 genAmount;          // \u91d1\u989d\u5206\u914d\u7ed9gen\r\n        uint256 potAmount;          // \u52a0\u5165\u9505\u4e2d\u7684\u91cf\r\n    }\r\n    struct Player {\r\n        address addr;   // \u7403\u5458\u5730\u5740\r\n        bytes32 name;   // \u53c2\u8d5b\u8005\u59d3\u540d\r\n        uint256 win;    // \u8d62\u5f97\u91d1\u5e93\r\n        uint256 gen;    // \u4e00\u822c\u91d1\u5e93\r\n        uint256 aff;    // \u4f1a\u5458\u4fdd\u9669\u5e93\r\n        uint256 lrnd;   // \u4e0a\u4e00\u8f6e\u6bd4\u8d5b\r\n        uint256 laff;   // \u4f7f\u7528\u7684\u6700\u540e\u4e00\u4e2a\u4f1a\u5458ID\r\n    }\r\n    struct PlayerRounds {\r\n        uint256 eth;    // \u73a9\u5bb6\u52a0\u5165\u56de\u5408\uff08\u7528\u4e8eeth\u9650\u5236\u5668\uff09\r\n        uint256 keys;   // \u6309\u952e\r\n        uint256 mask;   // \u8fd0\u52a8\u5458\u9762\u5177\r\n        uint256 ico;    // ICO\u9636\u6bb5\u6295\u8d44\r\n    }\r\n    struct Round {\r\n        uint256 plyr;   // \u9886\u5148\u7684\u73a9\u5bb6\u7684pID\r\n        uint256 team;   // \u9886\u5bfc\u56e2\u961f\u7684tID\r\n        uint256 end;    // \u65f6\u95f4\u7ed3\u675f/\u7ed3\u675f\r\n        bool ended;     // \u5df2\u7ecf\u8fd0\u884c\u4e86\u5706\u7aef\u51fd\u6570\r\n        uint256 strt;   // \u65f6\u95f4\u5f00\u59cb\u4e86\r\n        uint256 keys;   // \u6309\u952e\r\n        uint256 eth;    // \u603b\u4eba\u53e3\r\n        uint256 pot;    // \u7f50\u88c5\uff08\u5728\u56de\u5408\u671f\u95f4\uff09/\u6700\u7ec8\u91d1\u989d\u652f\u4ed8\u7ed9\u83b7\u80dc\u8005\uff08\u5728\u56de\u5408\u7ed3\u675f\u540e\uff09\r\n        uint256 mask;   // \u5168\u7403\u9762\u5177\r\n        uint256 ico;    // \u5728ICO\u9636\u6bb5\u53d1\u9001\u7684\u603beth\r\n        uint256 icoGen; // ICO\u9636\u6bb5\u7684gen eth\u603b\u91cf\r\n        uint256 icoAvg; // ICO\u9636\u6bb5\u7684\u5e73\u5747\u5173\u952e\u4ef7\u683c\r\n    }\r\n    struct TeamFee {\r\n        uint256 gen;    // \u652f\u4ed8\u7ed9\u672c\u8f6e\u5173\u952e\u6301\u6709\u4eba\u7684\u8d2d\u4e70\u767e\u5206\u6bd4\r\n        uint256 p3d;    // \u652f\u4ed8\u7ed9p3d\u6301\u6709\u4eba\u7684\u8d2d\u4e70\u767e\u5206\u6bd4\r\n    }\r\n    struct PotSplit {\r\n        uint256 gen;    // \u652f\u4ed8\u7ed9\u672c\u8f6e\u5173\u952e\u6301\u6709\u4eba\u7684\u5e95\u6c60\u767e\u5206\u6bd4\r\n        uint256 p3d;    // \u4ed8\u7ed9p3d\u6301\u6709\u8005\u7684\u9505\u7684\u767e\u5206\u6bd4\r\n    }\r\n}\r\n\r\n//==============================================================================\r\n//  |  _      _ _ | _  .\r\n//  |<(/_\\/  (_(_||(_  .\r\n//=======/======================================================================\r\nlibrary F3DKeysCalcShort {\r\n    using SafeMath for *;\r\n    /**\r\n     * @dev \u8ba1\u7b97\u7ed9\u5b9aX eth\u65f6\u6536\u5230\u7684\u5bc6\u94a5\u6570\r\n     * @param _curEth \u5408\u540c\u4e2d\u7684\u5f53\u524deth\u6570\u91cf\r\n     * @param _newEth eth\u88ab\u7528\u6389\u4e86\r\n     * @return \u8d2d\u4e70\u7684\u673a\u7968\u6570\u91cf\r\n     */\r\n    function keysRec(uint256 _curEth, uint256 _newEth)\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return(keys((_curEth).add(_newEth)).sub(keys(_curEth)));\r\n    }\r\n\r\n    /**\r\n     * @dev \u8ba1\u7b97\u51fa\u552eX\u952e\u65f6\u6536\u5230\u7684eth\u6570\u91cf\r\n     * @param _curKeys \u5f53\u524d\u5b58\u5728\u7684\u5bc6\u94a5\u6570\u91cf\r\n     * @param _sellKeys \u60a8\u5e0c\u671b\u51fa\u552e\u7684\u94a5\u5319\u6570\u91cf\r\n     * @return \u6536\u5230\u7684eth\u6570\u91cf\r\n     */\r\n    function ethRec(uint256 _curKeys, uint256 _sellKeys)\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return((eth(_curKeys)).sub(eth(_curKeys.sub(_sellKeys))));\r\n    }\r\n\r\n    /**\r\n     * @dev \u8ba1\u7b97\u7ed9\u5b9a\u4e00\u5b9a\u6570\u91cf\u7684eth\u4f1a\u5b58\u5728\u591a\u5c11\u4e2a\u5bc6\u94a5\r\n     * @param _eth \u5408\u540c\u4e2d\u7684\u9053\u5fb7\r\n     * @return \u5c06\u5b58\u5728\u7684\u5bc6\u94a5\u6570\r\n     */\r\n    function keys(uint256 _eth)\r\n        internal\r\n        pure\r\n        returns(uint256)\r\n    {\r\n        return ((((((_eth).mul(1000000000000000000)).mul(312500000000000000000000000)).add(5624988281256103515625000000000000000000000000000000000000000000)).sqrt()).sub(74999921875000000000000000000000)) / (156250000);\r\n    }\r\n\r\n    /**\r\n     * @dev \u5728\u7ed9\u5b9a\u4e00\u4e9b\u5bc6\u94a5\u7684\u60c5\u51b5\u4e0b\u8ba1\u7b97\u5408\u540c\u4e2d\u7684eth\u6570\u91cf\r\n     * @param _keys \u201c\u5951\u7ea6\u201d\u4e2d\u7684\u952e\u6570\r\n     * @return \u5b58\u5728\u7684\u9053\u5fb7\r\n     */\r\n    function eth(uint256 _keys)\r\n        internal\r\n        pure\r\n        returns(uint256)\r\n    {\r\n        return ((78125000).mul(_keys.sq()).add(((149999843750000).mul(_keys.mul(1000000000000000000))) / (2))) / ((1000000000000000000).sq());\r\n    }\r\n}\r\n\r\n//==============================================================================\r\n//  . _ _|_ _  _ |` _  _ _  _  .\r\n//  || | | (/_| ~|~(_|(_(/__\\  .\r\n//==============================================================================\r\n\r\ninterface PlayerBookInterface {\r\n    function getPlayerID(address _addr) external returns (uint256);\r\n    function getPlayerName(uint256 _pID) external view returns (bytes32);\r\n    function getPlayerLAff(uint256 _pID) external view returns (uint256);\r\n    function getPlayerAddr(uint256 _pID) external view returns (address);\r\n    function getNameFee() external view returns (uint256);\r\n    function registerNameXIDFromDapp(address _addr, bytes32 _name, uint256 _affCode, bool _all) external payable returns(bool, uint256);\r\n    function registerNameXaddrFromDapp(address _addr, bytes32 _name, address _affCode, bool _all) external payable returns(bool, uint256);\r\n    function registerNameXnameFromDapp(address _addr, bytes32 _name, bytes32 _affCode, bool _all) external payable returns(bool, uint256);\r\n}\r\n\r\n\r\nlibrary NameFilter {\r\n    /**\r\n     * @dev \u8fc7\u6ee4\u540d\u79f0\u5b57\u7b26\u4e32\r\n     * -\u5c06\u5927\u5199\u8f6c\u6362\u4e3a\u5c0f\u5199.\r\n     * -\u786e\u4fdd\u5b83\u4e0d\u4ee5\u7a7a\u683c\u5f00\u59cb/\u7ed3\u675f\r\n     * -\u786e\u4fdd\u5b83\u4e0d\u5305\u542b\u8fde\u7eed\u7684\u591a\u4e2a\u7a7a\u683c\r\n     * -\u4e0d\u80fd\u53ea\u662f\u6570\u5b57\r\n     * -\u4e0d\u80fd\u4ee50x\u5f00\u5934\r\n     * -\u5c06\u5b57\u7b26\u9650\u5236\u4e3aA-Z\uff0ca-z\uff0c0-9\u548c\u7a7a\u683c\u3002\r\n     * @return \u4ee5\u5b57\u828232\u683c\u5f0f\u91cd\u65b0\u5904\u7406\u7684\u5b57\u7b26\u4e32\r\n     */\r\n    function nameFilter(string _input)\r\n        internal\r\n        pure\r\n        returns(bytes32)\r\n    {\r\n        bytes memory _temp = bytes(_input);\r\n        uint256 _length = _temp.length;\r\n\r\n        //\u5bf9\u4e0d\u8d77\u9650\u4e8e32\u4e2a\u5b57\u7b26\r\n        require (_length <= 32 && _length > 0, \"string must be between 1 and 32 characters\");\r\n        // \u786e\u4fdd\u5b83\u4e0d\u4ee5\u7a7a\u683c\u5f00\u5934\u6216\u4ee5\u7a7a\u683c\u7ed3\u5c3e\r\n        require(_temp[0] != 0x20 && _temp[_length-1] != 0x20, \"string cannot start or end with space\");\r\n        // \u786e\u4fdd\u524d\u4e24\u4e2a\u5b57\u7b26\u4e0d\u662f0x\r\n        if (_temp[0] == 0x30)\r\n        {\r\n            require(_temp[1] != 0x78, \"string cannot start with 0x\");\r\n            require(_temp[1] != 0x58, \"string cannot start with 0X\");\r\n        }\r\n\r\n        // \u521b\u5efa\u4e00\u4e2abool\u6765\u8ddf\u8e2a\u6211\u4eec\u662f\u5426\u6709\u975e\u6570\u5b57\u5b57\u7b26\r\n        bool _hasNonNumber;\r\n\r\n        // \u8f6c\u6362\u548c\u68c0\u67e5\r\n        for (uint256 i = 0; i < _length; i++)\r\n        {\r\n            // \u5982\u679c\u5b83\u7684\u5927\u5199A-Z\r\n            if (_temp[i] > 0x40 && _temp[i] < 0x5b)\r\n            {\r\n                // \u8f6c\u6362\u4e3a\u5c0f\u5199a-z\r\n                _temp[i] = byte(uint(_temp[i]) + 32);\r\n\r\n                // \u6211\u4eec\u6709\u4e00\u4e2a\u975e\u6570\u5b57\r\n                if (_hasNonNumber == false)\r\n                    _hasNonNumber = true;\r\n            } else {\r\n                require\r\n                (\r\n                    // \u8981\u6c42\u89d2\u8272\u662f\u4e00\u4e2a\u7a7a\u95f4\r\n                    _temp[i] == 0x20 ||\r\n                    // \u6216\u5c0f\u5199a-z\r\n                    (_temp[i] > 0x60 && _temp[i] < 0x7b) ||\r\n                    // \u62160-9\r\n                    (_temp[i] > 0x2f && _temp[i] < 0x3a),\r\n                    \"string contains invalid characters\"\r\n                );\r\n                // \u786e\u4fdd\u8fde\u7eed\u4e24\u884c\u4e0d\u662f\u7a7a\u683c\r\n                if (_temp[i] == 0x20)\r\n                    require( _temp[i+1] != 0x20, \"string cannot contain consecutive spaces\");\r\n\r\n                // \u770b\u770b\u6211\u4eec\u662f\u5426\u6709\u4e00\u4e2a\u6570\u5b57\u4ee5\u5916\u7684\u5b57\u7b26\r\n                if (_hasNonNumber == false && (_temp[i] < 0x30 || _temp[i] > 0x39))\r\n                    _hasNonNumber = true;\r\n            }\r\n        }\r\n\r\n        require(_hasNonNumber == true, \"string cannot be only numbers\");\r\n\r\n        bytes32 _ret;\r\n        assembly {\r\n            _ret := mload(add(_temp, 32))\r\n        }\r\n        return (_ret);\r\n    }\r\n}\r\n\r\n/**\r\n * @title SafeMath v0.1.9\r\n * @dev \u5e26\u6709\u5b89\u5168\u68c0\u67e5\u7684\u6570\u5b66\u8fd0\u7b97\u4f1a\u5f15\u53d1\u9519\u8bef\r\n * - \u6dfb\u52a0 sqrt\r\n * - \u6dfb\u52a0 sq\r\n * - \u6dfb\u52a0 pwr\r\n * - \u5c06\u65ad\u8a00\u66f4\u6539\u4e3a\u9700\u8981\u5e26\u6709\u9519\u8bef\u65e5\u5fd7\u8f93\u51fa\r\n * - \u5220\u9664div\uff0c\u5b83\u6ca1\u7528\r\n */\r\nlibrary SafeMath {\r\n\r\n    /**\r\n    * @dev \u5c06\u4e24\u4e2a\u6570\u5b57\u76f8\u4e58\uff0c\u629b\u51fa\u6ea2\u51fa\u3002\r\n    */\r\n    function mul(uint256 a, uint256 b)\r\n        internal\r\n        pure\r\n        returns (uint256 c)\r\n    {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        c = a * b;\r\n        require(c / a == b, \"SafeMath mul failed\");\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev \u51cf\u53bb\u4e24\u4e2a\u6570\u5b57\uff0c\u5728\u6ea2\u51fa\u65f6\u629b\u51fa\uff08\u5373\uff0c\u5982\u679c\u51cf\u6570\u5927\u4e8e\u51cf\u6570\uff09\u3002\r\n    */\r\n    function sub(uint256 a, uint256 b)\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        require(b <= a, \"SafeMath sub failed\");\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n    * @dev \u6dfb\u52a0\u4e24\u4e2a\u6570\u5b57\uff0c\u6ea2\u51fa\u65f6\u629b\u51fa\u3002\r\n    */\r\n    function add(uint256 a, uint256 b)\r\n        internal\r\n        pure\r\n        returns (uint256 c)\r\n    {\r\n        c = a + b;\r\n        require(c >= a, \"SafeMath add failed\");\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev \u7ed9\u51fa\u7ed9\u5b9ax\u7684\u5e73\u65b9\u6839.\r\n     */\r\n    function sqrt(uint256 x)\r\n        internal\r\n        pure\r\n        returns (uint256 y)\r\n    {\r\n        uint256 z = ((add(x,1)) / 2);\r\n        y = x;\r\n        while (z < y)\r\n        {\r\n            y = z;\r\n            z = ((add((x / z),z)) / 2);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev \u7ed9\u5e7f\u573a\u3002\u5c06x\u4e58\u4ee5x\r\n     */\r\n    function sq(uint256 x)\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return (mul(x,x));\r\n    }\r\n\r\n    /**\r\n     * @dev x\u5230y\u7684\u529b\u91cf\r\n     */\r\n    function pwr(uint256 x, uint256 y)\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        if (x==0)\r\n            return (0);\r\n        else if (y==0)\r\n            return (1);\r\n        else\r\n        {\r\n            uint256 z = x;\r\n            for (uint256 i=1; i < y; i++)\r\n                z = mul(z,x);\r\n            return (z);\r\n        }\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"getBuyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_affCode\",\"type\":\"bytes32\"},{\"name\":\"_team\",\"type\":\"uint256\"},{\"name\":\"_eth\",\"type\":\"uint256\"}],\"name\":\"reLoadXname\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"activate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"pIDxAddr_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airDropTracker_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"round_\",\"outputs\":[{\"name\":\"plyr\",\"type\":\"uint256\"},{\"name\":\"team\",\"type\":\"uint256\"},{\"name\":\"end\",\"type\":\"uint256\"},{\"name\":\"ended\",\"type\":\"bool\"},{\"name\":\"strt\",\"type\":\"uint256\"},{\"name\":\"keys\",\"type\":\"uint256\"},{\"name\":\"eth\",\"type\":\"uint256\"},{\"name\":\"pot\",\"type\":\"uint256\"},{\"name\":\"mask\",\"type\":\"uint256\"},{\"name\":\"ico\",\"type\":\"uint256\"},{\"name\":\"icoGen\",\"type\":\"uint256\"},{\"name\":\"icoAvg\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"plyrNames_\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fees_\",\"outputs\":[{\"name\":\"gen\",\"type\":\"uint256\"},{\"name\":\"p3d\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"pIDxName_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_affCode\",\"type\":\"uint256\"},{\"name\":\"_team\",\"type\":\"uint256\"},{\"name\":\"_eth\",\"type\":\"uint256\"}],\"name\":\"reLoadXid\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_nameString\",\"type\":\"string\"},{\"name\":\"_affCode\",\"type\":\"address\"},{\"name\":\"_all\",\"type\":\"bool\"}],\"name\":\"registerNameXaddr\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pID\",\"type\":\"uint256\"},{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_laff\",\"type\":\"uint256\"}],\"name\":\"receivePlayerInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rndTmEth_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rID_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_pID\",\"type\":\"uint256\"}],\"name\":\"getPlayerVaults\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_nameString\",\"type\":\"string\"},{\"name\":\"_affCode\",\"type\":\"bytes32\"},{\"name\":\"_all\",\"type\":\"bool\"}],\"name\":\"registerNameXname\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentRoundInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_affCode\",\"type\":\"address\"},{\"name\":\"_team\",\"type\":\"uint256\"},{\"name\":\"_eth\",\"type\":\"uint256\"}],\"name\":\"reLoadXaddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_affCode\",\"type\":\"uint256\"},{\"name\":\"_team\",\"type\":\"uint256\"}],\"name\":\"buyXid\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pID\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"receivePlayerNameList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_nameString\",\"type\":\"string\"},{\"name\":\"_affCode\",\"type\":\"uint256\"},{\"name\":\"_all\",\"type\":\"bool\"}],\"name\":\"registerNameXID\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_affCode\",\"type\":\"address\"},{\"name\":\"_team\",\"type\":\"uint256\"}],\"name\":\"buyXaddr\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"plyrRnds_\",\"outputs\":[{\"name\":\"eth\",\"type\":\"uint256\"},{\"name\":\"keys\",\"type\":\"uint256\"},{\"name\":\"mask\",\"type\":\"uint256\"},{\"name\":\"ico\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_affCode\",\"type\":\"bytes32\"},{\"name\":\"_team\",\"type\":\"uint256\"}],\"name\":\"buyXname\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"potSplit_\",\"outputs\":[{\"name\":\"gen\",\"type\":\"uint256\"},{\"name\":\"p3d\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTimeLeft\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_rID\",\"type\":\"uint256\"},{\"name\":\"_eth\",\"type\":\"uint256\"}],\"name\":\"calcKeysReceived\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_keys\",\"type\":\"uint256\"}],\"name\":\"iWantXKeys\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"activated_\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airDropPot_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"plyr_\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"name\",\"type\":\"bytes32\"},{\"name\":\"win\",\"type\":\"uint256\"},{\"name\":\"gen\",\"type\":\"uint256\"},{\"name\":\"aff\",\"type\":\"uint256\"},{\"name\":\"lrnd\",\"type\":\"uint256\"},{\"name\":\"laff\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"potSwap\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getPlayerInfoByAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"playerID\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"playerAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"playerName\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"isNewPlayer\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"affiliateID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"affiliateAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"affiliateName\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"amountPaid\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"timeStamp\",\"type\":\"uint256\"}],\"name\":\"onNewName\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"compressedData\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"compressedIDs\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"playerName\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"playerAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ethIn\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"keysBought\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"winnerAddr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"winnerName\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"amountWon\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newPot\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"P3DAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"genAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"potAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"airDropPot\",\"type\":\"uint256\"}],\"name\":\"onEndTx\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"playerID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"playerAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"playerName\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"ethOut\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"timeStamp\",\"type\":\"uint256\"}],\"name\":\"onWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"playerAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"playerName\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"ethOut\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"compressedData\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"compressedIDs\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"winnerAddr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"winnerName\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"amountWon\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newPot\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"P3DAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"genAmount\",\"type\":\"uint256\"}],\"name\":\"onWithdrawAndDistribute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"playerAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"playerName\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"ethIn\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"compressedData\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"compressedIDs\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"winnerAddr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"winnerName\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"amountWon\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newPot\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"P3DAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"genAmount\",\"type\":\"uint256\"}],\"name\":\"onBuyAndDistribute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"playerAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"playerName\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"compressedData\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"compressedIDs\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"winnerAddr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"winnerName\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"amountWon\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newPot\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"P3DAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"genAmount\",\"type\":\"uint256\"}],\"name\":\"onReLoadAndDistribute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"affiliateID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"affiliateAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"affiliateName\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"roundID\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"buyerID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"timeStamp\",\"type\":\"uint256\"}],\"name\":\"onAffiliatePayout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"roundID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amountAddedToPot\",\"type\":\"uint256\"}],\"name\":\"onPotSwapDeposit\",\"type\":\"event\"}]", "ContractName": "WorldFomo", "CompilerVersion": "v0.4.24+commit.e67f0147", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://0c216b1463a1e61efe8c5815d68997bc70ee3fb88341cc71bcc2502819a6316e"}