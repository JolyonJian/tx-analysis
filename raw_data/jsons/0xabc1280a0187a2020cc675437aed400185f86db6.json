{"SourceCode": "pragma solidity ^0.4.20;\r\n\r\n//---------------------------------------------------------\r\n//  \u589e\u5f3a\u7248\u7684\u4ee3\u5e01\u5408\u7ea6 V 0.9\r\n//                                       WangYi 2018-05-07\r\n//---------------------------------------------------------\r\ncontract ERC20ext\r\n{\r\n  // stand\r\n  function totalSupply() public constant returns (uint supply);\r\n  function balanceOf( address who ) public constant returns (uint value);\r\n  function allowance( address owner, address spender ) public constant returns (uint _allowance);\r\n\r\n  function transfer( address to, uint value) public returns (bool ok);\r\n  function transferFrom( address from, address to, uint value) public returns (bool ok);\r\n  function approve( address spender, uint value ) public returns (bool ok);\r\n\r\n  event Transfer( address indexed from, address indexed to, uint value);\r\n  event Approval( address indexed owner, address indexed spender, uint value);\r\n\r\n  // extand\r\n  function postMessage(address dst, uint wad,string data) public returns (bool ok);\r\n  function appointNewCFO(address newCFO) public returns (bool ok);\r\n\r\n  function melt(address dst, uint256 wad) public returns (bool ok);\r\n  function mint(address dst, uint256 wad) public returns (bool ok);\r\n  function freeze(address dst, bool flag) public returns (bool ok);\r\n\r\n  event MeltEvent(address indexed dst, uint256 wad);\r\n  event MintEvent(address indexed dst, uint256 wad);\r\n  event FreezeEvent(address indexed dst, bool flag);\r\n}\r\n\r\n//---------------------------------------------------------\r\n// SafeMath \u662f\u4e00\u4e2a\u5b89\u5168\u6570\u5b57\u8fd0\u7b97\u7684\u5408\u7ea6\r\n//---------------------------------------------------------\r\ncontract SafeMath \r\n{\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) \r\n  {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) \r\n  {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    // uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return a / b;\r\n  }\r\n\r\n  /**\r\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) \r\n  {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) \r\n  {\r\n    c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n//---------------------------------------------------------\r\n// sacToken \u662f\u4e00\u4e2a\u589e\u5f3a\u7248ERC20\u5408\u7ea6\r\n//---------------------------------------------------------\r\ncontract sacToken is ERC20ext,SafeMath\r\n{\r\n  string public name;\r\n  string public symbol;\r\n  uint8  public decimals = 18;\r\n\r\n  address _cfo;\r\n  uint256 _supply;\r\n\r\n  //\u5e10\u6237\u7684\u4f59\u989d\u5217\u8868\r\n  mapping (address => uint256) _balances;\r\n\r\n  //\u5e10\u6237\u7684\u8f6c\u8d26\u9650\u989d\r\n  mapping (address => mapping (address => uint256)) _allowance;\r\n\r\n  //\u5e10\u6237\u7684\u8d44\u91d1\u51bb\u7ed3\r\n  mapping (address => bool) public _frozen;\r\n\r\n  //-----------------------------------------------\r\n  // \u521d\u59cb\u5316\u5408\u7ea6\uff0c\u5e76\u628a\u6240\u6709\u4ee3\u5e01\u90fd\u7ed9CFO\r\n  //-----------------------------------------------\r\n  //   @param initialSupply \u53d1\u884c\u603b\u91cf\r\n  //   @param tokenName     \u4ee3\u5e01\u540d\u79f0\r\n  //   @param tokenSymbol   \u4ee3\u5e01\u7b26\u53f7\r\n  //-----------------------------------------------\r\n  function sacToken(uint256 initialSupply,string tokenName,string tokenSymbol) public\r\n  {\r\n    _cfo    = msg.sender;\r\n    _supply = initialSupply * 10 ** uint256(decimals);\r\n    _balances[_cfo] = _supply;\r\n\r\n    name   = tokenName;\r\n    symbol = tokenSymbol;\r\n  }\r\n\r\n  //-----------------------------------------------\r\n  // \u5224\u65ad\u5408\u7ea6\u8c03\u7528\u8005\u662f\u5426 CFO\r\n  //-----------------------------------------------\r\n  modifier onlyCFO()\r\n  {\r\n    require(msg.sender == _cfo);\r\n    _;\r\n  }\r\n\r\n\r\n  //-----------------------------------------------\r\n  // \u83b7\u53d6\u8d27\u5e01\u4f9b\u5e94\u91cf\r\n  //-----------------------------------------------\r\n  function totalSupply() public constant returns (uint256)\r\n  {\r\n    return _supply;\r\n  }\r\n\r\n  //-----------------------------------------------\r\n  // \u67e5\u8be2\u8d26\u6237\u4f59\u989d\r\n  //-----------------------------------------------\r\n  // @param  src \u5e10\u6237\u5730\u5740\r\n  //-----------------------------------------------\r\n  function balanceOf(address src) public constant returns (uint256)\r\n  {\r\n    return _balances[src];\r\n  }\r\n\r\n  //-----------------------------------------------\r\n  // \u67e5\u8be2\u8d26\u6237\u8f6c\u8d26\u9650\u989d\r\n  //-----------------------------------------------\r\n  // @param  src \u6765\u6e90\u5e10\u6237\u5730\u5740\r\n  // @param  dst \u76ee\u6807\u5e10\u6237\u5730\u5740\r\n  //-----------------------------------------------\r\n  function allowance(address src, address dst) public constant returns (uint256)\r\n  {\r\n    return _allowance[src][dst];\r\n  }\r\n\r\n  //-----------------------------------------------\r\n  // \u8d26\u6237\u8f6c\u8d26\r\n  //-----------------------------------------------\r\n  // @param  dst \u76ee\u6807\u5e10\u6237\u5730\u5740\r\n  // @param  wad \u8f6c\u8d26\u91d1\u989d\r\n  //-----------------------------------------------\r\n  function transfer(address dst, uint wad) public returns (bool)\r\n  {\r\n    //\u68c0\u67e5\u51bb\u7ed3\u5e10\u6237\r\n    require(!_frozen[msg.sender]);\r\n    require(!_frozen[dst]);\r\n\r\n    //\u68c0\u67e5\u5e10\u6237\u4f59\u989d\r\n    require(_balances[msg.sender] >= wad);\r\n\r\n    _balances[msg.sender] = sub(_balances[msg.sender],wad);\r\n    _balances[dst]        = add(_balances[dst], wad);\r\n\r\n    Transfer(msg.sender, dst, wad);\r\n\r\n    return true;\r\n  }\r\n\r\n  //-----------------------------------------------\r\n  // \u8d26\u6237\u8f6c\u8d26\u5e26\u68c0\u67e5\u9650\u989d\r\n  //-----------------------------------------------\r\n  // @param  src \u6765\u6e90\u5e10\u6237\u5730\u5740\r\n  // @param  dst \u76ee\u6807\u5e10\u6237\u5730\u5740\r\n  // @param  wad \u8f6c\u8d26\u91d1\u989d\r\n  //-----------------------------------------------\r\n  function transferFrom(address src, address dst, uint wad) public returns (bool)\r\n  {\r\n    //\u68c0\u67e5\u51bb\u7ed3\u5e10\u6237\r\n    require(!_frozen[msg.sender]);\r\n    require(!_frozen[dst]);\r\n\r\n    //\u68c0\u67e5\u5e10\u6237\u4f59\u989d\r\n    require(_balances[src] >= wad);\r\n\r\n    //\u68c0\u67e5\u5e10\u6237\u9650\u989d\r\n    require(_allowance[src][msg.sender] >= wad);\r\n\r\n    _allowance[src][msg.sender] = sub(_allowance[src][msg.sender],wad);\r\n\r\n    _balances[src] = sub(_balances[src],wad);\r\n    _balances[dst] = add(_balances[dst],wad);\r\n\r\n    //\u8f6c\u8d26\u4e8b\u4ef6\r\n    Transfer(src, dst, wad);\r\n\r\n    return true;\r\n  }\r\n\r\n  //-----------------------------------------------\r\n  // \u8bbe\u7f6e\u8f6c\u8d26\u9650\u989d\r\n  //-----------------------------------------------\r\n  // @param  dst \u76ee\u6807\u5e10\u6237\u5730\u5740\r\n  // @param  wad \u9650\u5236\u91d1\u989d\r\n  //-----------------------------------------------\r\n  function approve(address dst, uint256 wad) public returns (bool)\r\n  {\r\n    _allowance[msg.sender][dst] = wad;\r\n\r\n    //\u8bbe\u7f6e\u4e8b\u4ef6\r\n    Approval(msg.sender, dst, wad);\r\n    return true;\r\n  }\r\n\r\n  //-----------------------------------------------\r\n  // \u8d26\u6237\u8f6c\u8d26\u5e26\u9644\u52a0\u6570\u636e\r\n  //-----------------------------------------------\r\n  // @param  dst  \u76ee\u6807\u5e10\u6237\u5730\u5740\r\n  // @param  wad  \u9650\u5236\u91d1\u989d\r\n  // @param  data \u9644\u52a0\u6570\u636e\r\n  //-----------------------------------------------\r\n  function postMessage(address dst, uint wad,string data) public returns (bool)\r\n  {\r\n    return transfer(dst,wad);\r\n  }\r\n\r\n  //-----------------------------------------------\r\n  // \u4efb\u547d\u65b0\u7684CFO\r\n  //-----------------------------------------------\r\n  // @param  newCFO \u65b0\u7684CFO\u5e10\u6237\u5730\u5740\r\n  //-----------------------------------------------\r\n  function appointNewCFO(address newCFO) onlyCFO public returns (bool)\r\n  {\r\n    if (newCFO != _cfo)\r\n    {\r\n      _cfo = newCFO;\r\n      return true;\r\n    }\r\n    else\r\n    {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  //-----------------------------------------------\r\n  // \u51bb\u7ed3\u5e10\u6237\r\n  //-----------------------------------------------\r\n  // @param  dst  \u76ee\u6807\u5e10\u6237\u5730\u5740\r\n  // @param  flag \u51bb\u7ed3\r\n  //-----------------------------------------------\r\n  function freeze(address dst, bool flag) onlyCFO public returns (bool)\r\n  {\r\n    _frozen[dst] = flag;\r\n\r\n    //\u51bb\u7ed3\u5e10\u6237\u4e8b\u4ef6\r\n    FreezeEvent(dst, flag);\r\n    return true;\r\n  }\r\n\r\n  //-----------------------------------------------\r\n  // \u94f8\u9020\u4ee3\u5e01\r\n  //-----------------------------------------------\r\n  // @param  dst  \u76ee\u6807\u5e10\u6237\u5730\u5740\r\n  // @param  wad  \u94f8\u9020\u91d1\u989d\r\n  //-----------------------------------------------\r\n  function mint(address dst, uint256 wad) onlyCFO public returns (bool)\r\n  {\r\n    //\u76ee\u6807\u5e10\u6237\u5730\u5740\u94f8\u9020\u4ee3\u5e01,\u540c\u65f6\u66f4\u65b0\u603b\u91cf\r\n    _balances[dst] = add(_balances[dst],wad);\r\n    _supply        = add(_supply,wad);\r\n\r\n    //\u94f8\u9020\u4ee3\u5e01\u4e8b\u4ef6\r\n    MintEvent(dst, wad);\r\n    return true;\r\n  }\r\n\r\n  //-----------------------------------------------\r\n  // \u9500\u6bc1\u4ee3\u5e01\r\n  //-----------------------------------------------\r\n  // @param  dst  \u76ee\u6807\u5e10\u6237\u5730\u5740\r\n  // @param  wad  \u9500\u6bc1\u91d1\u989d\r\n  //-----------------------------------------------\r\n  function melt(address dst, uint256 wad) onlyCFO public returns (bool)\r\n  {\r\n    //\u68c0\u67e5\u5e10\u6237\u4f59\u989d\r\n    require(_balances[dst] >= wad);\r\n\r\n    //\u9500\u6bc1\u76ee\u6807\u5e10\u6237\u5730\u5740\u4ee3\u5e01,\u540c\u65f6\u66f4\u65b0\u603b\u91cf\r\n    _balances[dst] = sub(_balances[dst],wad);\r\n    _supply        = sub(_supply,wad);\r\n\r\n    //\u9500\u6bc1\u4ee3\u5e01\u4e8b\u4ef6\r\n    MeltEvent(dst, wad);\r\n    return true;\r\n  }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"string\"}],\"name\":\"postMessage\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newCFO\",\"type\":\"address\"}],\"name\":\"appointNewCFO\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"melt\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"flag\",\"type\":\"bool\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"_frozen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"MeltEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"MintEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"flag\",\"type\":\"bool\"}],\"name\":\"FreezeEvent\",\"type\":\"event\"}]", "ContractName": "sacToken", "CompilerVersion": "v0.4.24+commit.e67f0147", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000bebc200000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000017536d617274204170706c69636174696f6e20436861696e00000000000000000000000000000000000000000000000000000000000000000000000000000000035341430000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://a9b36c4211b77f1c48a4fc34b4144cc2ddd9156e8a6de20bafab28f8964116bd"}