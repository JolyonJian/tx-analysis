{"SourceCode": "pragma solidity ^0.4.16;\r\n\r\ninterface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public; }\r\n\r\ncontract TokenERC20 {\r\n    // Public variables of the token\r\n    string public name;\t\t\t\t\t\t\t/* name \u4ee3\u5e01\u540d\u79f0 */\r\n    string public symbol;\t\t\t\t\t\t/* symbol \u4ee3\u5e01\u56fe\u6807 */\r\n    uint8  public decimals = 18;\t\t\t/* decimals \u4ee3\u5e01\u5c0f\u6570\u70b9\u4f4d\u6570 */ \r\n    uint256 public totalSupply;\t\t\t//\u4ee3\u5e01\u603b\u91cf\r\n\r\n    \r\n    /* \u8bbe\u7f6e\u4e00\u4e2a\u6570\u7ec4\u5b58\u50a8\u6bcf\u4e2a\u8d26\u6237\u7684\u4ee3\u5e01\u4fe1\u606f\uff0c\u521b\u5efa\u6240\u6709\u8d26\u6237\u4f59\u989d\u6570\u7ec4 */\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    // This generates a public event on the blockchain that will notify clients\r\n    /* event\u4e8b\u4ef6\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u63d0\u9192\u5ba2\u6237\u7aef\u53d1\u751f\u4e86\u8fd9\u4e2a\u4e8b\u4ef6\uff0c\u4f60\u4f1a\u6ce8\u610f\u5230\u94b1\u5305\u6709\u65f6\u5019\u4f1a\u5728\u53f3\u4e0b\u89d2\u5f39\u51fa\u4fe1\u606f */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    // This notifies clients about the amount burnt\r\n    event Burn(address indexed from, uint256 value);\r\n\r\n    /**\r\n     * Constrctor function\r\n     *\r\n     * Initializes contract with initial supply tokens to the creator of the contract\r\n     */\r\n     /*\u521d\u59cb\u5316\u5408\u7ea6\uff0c\u5c06\u6700\u521d\u7684\u4ee4\u724c\u6253\u5165\u521b\u5efa\u8005\u7684\u8d26\u6237\u4e2d*/\r\n    function TokenERC20(\r\n        uint256 initialSupply,\r\n        string tokenName,\r\n        string tokenSymbol\r\n    ) public {\r\n        totalSupply = initialSupply * 10 ** uint256(decimals);  //\u4ee5\u592a\u5e01\u662f10^18\uff0c\u540e\u976218\u4e2a0\uff0c\u6240\u4ee5\u9ed8\u8ba4decimals\u662f18,\u7ed9\u4ee4\u724c\u8bbe\u7f6e18\u4f4d\u5c0f\u6570\u7684\u957f\u5ea6\r\n        balanceOf[msg.sender] = totalSupply;                \t\t// \u7ed9\u521b\u5efa\u8005\u6240\u6709\u521d\u59cb\u4ee4\u724c\r\n        name = tokenName;                                   \t\t// \u8bbe\u7f6e\u4ee3\u5e01\uff08token\uff09\u540d\u79f0\r\n        symbol = tokenSymbol;                               \t\t// \u8bbe\u7f6e\u4ee3\u5e01\uff08token\uff09\u7b26\u53f7\r\n    }\r\n\r\n    /**\r\n     * Internal transfer, only can be called by this contract\r\n     */\r\n     /**\r\n     * \u79c1\u6709\u65b9\u6cd5\u4ece\u4e00\u4e2a\u5e10\u6237\u53d1\u9001\u7ed9\u53e6\u4e00\u4e2a\u5e10\u6237\u4ee3\u5e01\r\n     * @param  _from address \u53d1\u9001\u4ee3\u5e01\u7684\u5730\u5740\r\n     * @param  _to address \u63a5\u53d7\u4ee3\u5e01\u7684\u5730\u5740\r\n     * @param  _value uint256 \u63a5\u53d7\u4ee3\u5e01\u7684\u6570\u91cf\r\n     */\r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n    \r\n        // Prevent transfer to 0x0 address. Use burn() instead\r\n        //\u907f\u514d\u8f6c\u5e10\u7684\u5730\u5740\u662f0x0\r\n        require(_to != 0x0);\r\n        \r\n        // Check if the sender has enough\r\n        //\u68c0\u67e5\u53d1\u9001\u8005\u662f\u5426\u62e5\u6709\u8db3\u591f\u4f59\u989d\r\n        require(balanceOf[_from] >= _value);\r\n        \r\n        // Check for overflows\r\n        //\u68c0\u67e5\u662f\u5426\u6ea2\u51fa\r\n        require(balanceOf[_to] + _value > balanceOf[_to]);\r\n        \r\n        // Save this for an assertion in the future\r\n        //\u4fdd\u5b58\u6570\u636e\u7528\u4e8e\u540e\u9762\u7684\u5224\u65ad\r\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\r\n        \r\n        // Subtract from the sender\r\n        //\u4ece\u53d1\u9001\u8005\u51cf\u6389\u53d1\u9001\u989d\r\n        balanceOf[_from] -= _value;\r\n        \r\n        // Add the same to the recipient\r\n        //\u7ed9\u63a5\u6536\u8005\u52a0\u4e0a\u76f8\u540c\u7684\u91cf\r\n        balanceOf[_to] += _value;\r\n        \r\n        //\u901a\u77e5\u4efb\u4f55\u76d1\u542c\u8be5\u4ea4\u6613\u7684\u5ba2\u6237\u7aef\r\n        Transfer(_from, _to, _value);\r\n        \r\n        // Asserts are used to use static analysis to find bugs in your code. They should never fail\r\n        \r\n        //\u5224\u65ad\u4e70\u3001\u5356\u53cc\u65b9\u7684\u6570\u636e\u662f\u5426\u548c\u8f6c\u6362\u524d\u4e00\u81f4\r\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n    }\r\n\r\n    \r\n     /**\r\n     * \u4ece\u4e3b\u5e10\u6237\u5408\u7ea6\u8c03\u7528\u8005\u53d1\u9001\u7ed9\u522b\u4eba\u4ee3\u5e01\r\n     * @param  _to address \u63a5\u53d7\u4ee3\u5e01\u7684\u5730\u5740\r\n     * @param  _value uint256 \u63a5\u53d7\u4ee3\u5e01\u7684\u6570\u91cf\r\n     */\r\n    function transfer(address _to, uint256 _value) public {\r\n        _transfer(msg.sender, _to, _value);\r\n    }\r\n\r\n     /**\r\n     * \u4ece\u67d0\u4e2a\u6307\u5b9a\u7684\u5e10\u6237\u4e2d\uff0c\u5411\u53e6\u4e00\u4e2a\u5e10\u6237\u53d1\u9001\u4ee3\u5e01\r\n     *\r\n     * \u8c03\u7528\u8fc7\u7a0b\uff0c\u4f1a\u68c0\u67e5\u8bbe\u7f6e\u7684\u5141\u8bb8\u6700\u5927\u4ea4\u6613\u989d\r\n     *\r\n     * @param  _from address \u53d1\u9001\u8005\u5730\u5740\r\n     * @param  _to address \u63a5\u53d7\u8005\u5730\u5740\r\n     * @param  _value uint256 \u8981\u8f6c\u79fb\u7684\u4ee3\u5e01\u6570\u91cf\r\n     * @return success        \u662f\u5426\u4ea4\u6613\u6210\u529f\r\n     */\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(_value <= allowance[_from][msg.sender]);     // Check allowance\r\n        allowance[_from][msg.sender] -= _value;\r\n        _transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n \t\t/**\r\n     * \u8bbe\u7f6e\u5e10\u6237\u5141\u8bb8\u652f\u4ed8\u7684\u6700\u5927\u91d1\u989d\r\n     * \u4e00\u822c\u5728\u667a\u80fd\u5408\u7ea6\u7684\u65f6\u5019\uff0c\u907f\u514d\u652f\u4ed8\u8fc7\u591a\uff0c\u9020\u6210\u98ce\u9669\r\n     * @param _spender \u5e10\u6237\u5730\u5740\r\n     * @param _value \u91d1\u989d\r\n     */\r\n    function approve(address _spender, uint256 _value) public\r\n        returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n\r\n\t\t/**\r\n     * \u8bbe\u7f6e\u5e10\u6237\u5141\u8bb8\u652f\u4ed8\u7684\u6700\u5927\u91d1\u989d\r\n     * \u4e00\u822c\u5728\u667a\u80fd\u5408\u7ea6\u7684\u65f6\u5019\uff0c\u907f\u514d\u652f\u4ed8\u8fc7\u591a\uff0c\u9020\u6210\u98ce\u9669\uff0c\u52a0\u5165\u65f6\u95f4\u53c2\u6570\uff0c\u53ef\u4ee5\u5728 tokenRecipient \u4e2d\u505a\u5176\u4ed6\u64cd\u4f5c\r\n     * @param _spender \u5e10\u6237\u5730\u5740\r\n     * @param _value \u91d1\u989d\r\n     * @param _extraData \u64cd\u4f5c\u7684\u65f6\u95f4\r\n     */\r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData)\r\n        public\r\n        returns (bool success) {\r\n        tokenRecipient spender = tokenRecipient(_spender);\r\n        if (approve(_spender, _value)) {\r\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u51cf\u5c11\u4ee3\u5e01\u8c03\u7528\u8005\u7684\u4f59\u989d\r\n     * \u64cd\u4f5c\u4ee5\u540e\u662f\u4e0d\u53ef\u9006\u7684\r\n     * @param _value \u8981\u5220\u9664\u7684\u6570\u91cf\r\n     */\r\n    function burn(uint256 _value) public returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value);   // Check if the sender has enough\r\n        balanceOf[msg.sender] -= _value;            // Subtract from the sender\r\n        totalSupply -= _value;                      // Updates totalSupply\r\n        Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u5220\u9664\u5e10\u6237\u7684\u4f59\u989d\uff08\u542b\u5176\u4ed6\u5e10\u6237\uff09\r\n     * \u5220\u9664\u4ee5\u540e\u662f\u4e0d\u53ef\u9006\u7684\r\n     * @param _from \u8981\u64cd\u4f5c\u7684\u5e10\u6237\u5730\u5740\r\n     * @param _value \u8981\u51cf\u53bb\u7684\u6570\u91cf\r\n     */\r\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\r\n        require(balanceOf[_from] >= _value);                // Check if the targeted balance is enough\r\n        require(_value <= allowance[_from][msg.sender]);    // Check allowance\r\n        balanceOf[_from] -= _value;                         // Subtract from the targeted balance\r\n        allowance[_from][msg.sender] -= _value;             // Subtract from the sender's allowance\r\n        totalSupply -= _value;                              // Update totalSupply\r\n        Burn(_from, _value);\r\n        return true;\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]", "ContractName": "TokenERC20", "CompilerVersion": "v0.4.20+commit.3155dd80", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000003b9aca00000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000d436172694e657420546f6b656e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034349540000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://3268fea39cb944bcb82493ce6d87e0760de2d6594d9ed944efef8715d6ca5116"}