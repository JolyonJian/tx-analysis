{"SourceCode": "pragma solidity ^0.4.24;\r\n\r\ninterface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) external; }\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        require(b <= a);\r\n        c = a - b;\r\n    }\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n}\r\n\r\ncontract Alchemy {\r\n    using SafeMath for uint256;\r\n\r\n    // \u4ee3\u5e01\u7684\u516c\u5171\u53d8\u91cf\uff1a\u540d\u79f0\u3001\u4ee3\u53f7\u3001\u5c0f\u6570\u70b9\u540e\u9762\u7684\u4f4d\u6570\u3001\u4ee3\u5e01\u53d1\u884c\u603b\u91cf\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals = 6; // \u5b98\u65b9\u5efa\u8bae18\u4f4d\r\n    uint256 public totalSupply;\r\n    address public owner;\r\n\r\n    address[] public ownerContracts;// \u5141\u8bb8\u8c03\u7528\u7684\u667a\u80fd\u5408\u7ea6\r\n    address public userPool;\r\n    address public platformPool;\r\n    address public smPool;\r\n\r\n    //  \u71c3\u70e7\u6c60\u914d\u7f6e\r\n    mapping(string => address) burnPoolAddreses;\r\n\r\n    // \u4ee3\u5e01\u4f59\u989d\u7684\u6570\u636e\r\n    mapping (address => uint256) public balanceOf;\r\n    // \u4ee3\u4ed8\u91d1\u989d\u9650\u5236\r\n    // \u6bd4\u5982map[A][B]=60\uff0c\u610f\u601d\u662f\u7528\u6237B\u53ef\u4ee5\u4f7f\u7528A\u7684\u94b1\u8fdb\u884c\u6d88\u8d39\uff0c\u4f7f\u7528\u4e0a\u9650\u662f60\uff0c\u6b64\u6761\u6570\u636e\u7531A\u6765\u8bbe\u7f6e\uff0c\u4e00\u822cB\u53ef\u4ee5\u4f7f\u4e2d\u95f4\u62c5\u4fdd\u5e73\u53f0\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    // \u4ea4\u6613\u6210\u529f\u4e8b\u4ef6\uff0c\u4f1a\u901a\u77e5\u7ed9\u5ba2\u6237\u7aef\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    // \u4ea4\u6613ETH\u6210\u529f\u4e8b\u4ef6\uff0c\u4f1a\u901a\u77e5\u7ed9\u5ba2\u6237\u7aef\r\n    event TransferETH(address indexed from, address indexed to, uint256 value);\r\n\r\n    // \u5c06\u9500\u6bc1\u7684\u4ee3\u5e01\u91cf\u901a\u77e5\u7ed9\u5ba2\u6237\u7aef\r\n    event Burn(address indexed from, uint256 value);\r\n\r\n    /**\r\n     * \u6784\u9020\u51fd\u6570\r\n     * \u521d\u59cb\u5316\u4ee3\u5e01\u53d1\u884c\u7684\u53c2\u6570\r\n     */\r\n    //990000000,\"AlchemyChain\",\"ALC\"\r\n    constructor(\r\n        uint256 initialSupply,\r\n        string tokenName,\r\n        string tokenSymbol\r\n    ) payable public  {\r\n        totalSupply = initialSupply * 10 ** uint256(decimals);  // \u8ba1\u7b97\u53d1\u884c\u91cf\r\n        balanceOf[msg.sender] = totalSupply;                // \u5c06\u53d1\u884c\u7684\u5e01\u7ed9\u521b\u5efa\u8005\r\n        name = tokenName;                                   // \u8bbe\u7f6e\u4ee3\u5e01\u540d\u79f0\r\n        symbol = tokenSymbol;                               // \u8bbe\u7f6e\u4ee3\u5e01\u7b26\u53f7\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // \u4fee\u6539\u5668\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    //\u67e5\u8be2\u5f53\u524d\u7684\u4ee5\u4ee5\u592a\u4f59\u989d\r\n    function getETHBalance() view public returns(uint){\r\n        return address(this).balance;\r\n    }\r\n\r\n    //\u6279\u91cf\u5e73\u5206\u4ee5\u592a\u4f59\u989d\r\n    function transferETH(address[] _tos) public onlyOwner returns (bool) {\r\n        require(_tos.length > 0);\r\n        require(address(this).balance > 0);\r\n        for(uint32 i=0;i<_tos.length;i++){\r\n            _tos[i].transfer(address(this).balance/_tos.length);\r\n            emit TransferETH(owner, _tos[i], address(this).balance/_tos.length);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    //\u76f4\u63a5\u8f6c\u8d26\u6307\u5b9a\u6570\u91cf\r\n    function transferETH(address _to, uint256 _value) payable public onlyOwner returns (bool){\r\n        require(_value > 0);\r\n        require(address(this).balance >= _value);\r\n        require(_to != address(0));\r\n        _to.transfer(_value);\r\n        emit TransferETH(owner, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    //\u76f4\u63a5\u8f6c\u8d26\u5168\u90e8\u6570\u91cf\r\n    function transferETH(address _to) payable public onlyOwner returns (bool){\r\n        require(_to != address(0));\r\n        require(address(this).balance > 0);\r\n        _to.transfer(address(this).balance);\r\n        emit TransferETH(owner, _to, address(this).balance);\r\n        return true;\r\n    }\r\n\r\n    //\u76f4\u63a5\u8f6c\u8d26\u5168\u90e8\u6570\u91cf\r\n    function transferETH() payable public onlyOwner returns (bool){\r\n        require(address(this).balance > 0);\r\n        owner.transfer(address(this).balance);\r\n        emit TransferETH(owner, owner, address(this).balance);\r\n        return true;\r\n    }\r\n\r\n    // \u63a5\u6536\u4ee5\u592a\r\n    function () payable public {\r\n        // \u5176\u4ed6\u903b\r\n    }\r\n\r\n    // \u4f17\u7b79\r\n    function funding() payable public returns (bool) {\r\n        require(msg.value <= balanceOf[owner]);\r\n        // SafeMath.sub will throw if there is not enough balance.\r\n        balanceOf[owner] = balanceOf[owner].sub(msg.value);\r\n        balanceOf[tx.origin] = balanceOf[tx.origin].add(msg.value);\r\n        emit Transfer(owner, tx.origin, msg.value);\r\n        return true;\r\n    }\r\n\r\n    function _contains() internal view returns (bool) {\r\n        for(uint i = 0; i < ownerContracts.length; i++){\r\n            if(ownerContracts[i] == msg.sender){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function setOwnerContracts(address _adr) public onlyOwner {\r\n        if(_adr != 0x0){\r\n            ownerContracts.push(_adr);\r\n        }\r\n    }\r\n\r\n    //\u4fee\u6539\u7ba1\u7406\u5e10\u53f7\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        if (_newOwner != address(0)) {\r\n            owner = _newOwner;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u5185\u90e8\u8f6c\u8d26\uff0c\u53ea\u80fd\u88ab\u672c\u5408\u7ea6\u8c03\u7528\r\n     */\r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n        require(userPool != 0x0);\r\n        require(platformPool != 0x0);\r\n        require(smPool != 0x0);\r\n        // \u68c0\u6d4b\u662f\u5426\u7a7a\u5730\u5740\r\n        require(_to != 0x0);\r\n        // \u68c0\u6d4b\u4f59\u989d\u662f\u5426\u5145\u8db3\r\n        require(_value > 0);\r\n        require(balanceOf[_from] >= _value);\r\n        // \u68c0\u6d4b\u6ea2\u51fa\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        // \u4fdd\u5b58\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\uff0c\u7528\u4e8e\u6700\u540e\u68c0\u6d4b\u503c\u662f\u5426\u6ea2\u51fa\r\n        uint previousBalances = balanceOf[_from].add(balanceOf[_to]);\r\n        // \u51fa\u8d26\r\n        balanceOf[_from] = balanceOf[_from].sub(_value);\r\n        uint256 burnTotal = 0;\r\n        uint256 platformToal = 0;\r\n        // \u5165\u8d26\u5982\u679c\u63a5\u53d7\u65b9\u662f\u667a\u80fd\u5408\u7ea6\u5730\u5740\uff0c\u5219\u76f4\u63a5\u9500\u6bc1\r\n        if (this == _to) {\r\n            //totalSupply -= _value;                      // \u4ece\u53d1\u884c\u7684\u5e01\u4e2d\u5220\u9664\r\n            burnTotal = _value*3;\r\n            platformToal = burnTotal.mul(15).div(100);\r\n            require(balanceOf[owner] >= (burnTotal + platformToal));\r\n            balanceOf[userPool] = balanceOf[userPool].add(burnTotal);\r\n            balanceOf[platformPool] = balanceOf[platformPool].add(platformToal);\r\n            balanceOf[owner] -= (burnTotal + platformToal);\r\n            emit Transfer(_from, _to, _value);\r\n            emit Transfer(owner, userPool, burnTotal);\r\n            emit Transfer(owner, platformPool, platformToal);\r\n            emit Burn(_from, _value);\r\n        } else if (smPool == _from) {//\u79c1\u52df\u65b9\u4ee3\u7528\u6237\u6295\u5165\u71c3\u70e7\u6570\u91cf\u4ee3\u5e01\r\n            address smBurnAddress = burnPoolAddreses[\"smBurn\"];\r\n            require(smBurnAddress != 0x0);\r\n            burnTotal = _value*3;\r\n            platformToal = burnTotal.mul(15).div(100);\r\n            require(balanceOf[owner] >= (burnTotal + platformToal));\r\n            balanceOf[userPool] = balanceOf[userPool].add(burnTotal);\r\n            balanceOf[platformPool] = balanceOf[platformPool].add(platformToal);\r\n            balanceOf[owner] -= (burnTotal + platformToal);\r\n            emit Transfer(_from, _to, _value);\r\n            emit Transfer(_to, smBurnAddress, _value);\r\n            emit Transfer(owner, userPool, burnTotal);\r\n            emit Transfer(owner, platformPool, platformToal);\r\n            emit Burn(_to, _value);\r\n        } else {\r\n            address appBurnAddress = burnPoolAddreses[\"appBurn\"];\r\n            address webBurnAddress = burnPoolAddreses[\"webBurn\"];\r\n            address normalBurnAddress = burnPoolAddreses[\"normalBurn\"];\r\n            //\u71c3\u70e7\u8f6c\u5e10\u7279\u6b8a\u5904\u7406\r\n            if (_to == appBurnAddress || _to == webBurnAddress || _to == normalBurnAddress) {\r\n                burnTotal = _value*3;\r\n                platformToal = burnTotal.mul(15).div(100);\r\n                require(balanceOf[owner] >= (burnTotal + platformToal));\r\n                balanceOf[userPool] = balanceOf[userPool].add(burnTotal);\r\n                balanceOf[platformPool] = balanceOf[platformPool].add(platformToal);\r\n                balanceOf[owner] -= (burnTotal + platformToal);\r\n                emit Transfer(_from, _to, _value);\r\n                emit Transfer(owner, userPool, burnTotal);\r\n                emit Transfer(owner, platformPool, platformToal);\r\n                emit Burn(_from, _value);\r\n            } else {\r\n                balanceOf[_to] = balanceOf[_to].add(_value);\r\n                emit Transfer(_from, _to, _value);\r\n                // \u68c0\u6d4b\u503c\u662f\u5426\u6ea2\u51fa\uff0c\u6216\u8005\u6709\u6570\u636e\u8ba1\u7b97\u9519\u8bef\r\n                assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u4ee3\u5e01\u8f6c\u8d26\r\n     * \u4ece\u81ea\u5df1\u7684\u8d26\u6237\u4e0a\u7ed9\u522b\u4eba\u8f6c\u8d26\r\n     * @param _to \u8f6c\u5165\u8d26\u6237\r\n     * @param _value \u8f6c\u8d26\u91d1\u989d\r\n     */\r\n    function transfer(address _to, uint256 _value) public {\r\n        _transfer(msg.sender, _to, _value);\r\n    }\r\n\r\n    /**\r\n     * \u4ee3\u5e01\u8f6c\u8d26\r\n     * \u4ece\u81ea\u5df1\u7684\u8d26\u6237\u4e0a\u7ed9\u522b\u4eba\u8f6c\u8d26\r\n     * @param _to \u8f6c\u5165\u8d26\u6237\r\n     * @param _value \u8f6c\u8d26\u91d1\u989d\r\n     */\r\n    function transferTo(address _to, uint256 _value) public {\r\n        require(_contains());\r\n        _transfer(tx.origin, _to, _value);\r\n    }\r\n\r\n    /**\r\n     * \u4ece\u5176\u4ed6\u8d26\u6237\u8f6c\u8d26\r\n     * \u4ece\u5176\u4ed6\u7684\u8d26\u6237\u4e0a\u7ed9\u522b\u4eba\u8f6c\u8d26\r\n     * @param _from \u8f6c\u51fa\u8d26\u6237\r\n     * @param _to \u8f6c\u5165\u8d26\u6237\r\n     * @param _value \u8f6c\u8d26\u91d1\u989d\r\n     */\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n        require(_value <= allowance[_from][msg.sender]);     // \u68c0\u67e5\u5141\u8bb8\u4ea4\u6613\u7684\u91d1\u989d\r\n        allowance[_from][msg.sender] -= _value;\r\n        _transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u8bbe\u7f6e\u4ee3\u4ed8\u91d1\u989d\u9650\u5236\r\n     * \u5141\u8bb8\u6d88\u8d39\u8005\u4f7f\u7528\u7684\u4ee3\u5e01\u91d1\u989d\r\n     * @param _spender \u5141\u8bb8\u4ee3\u4ed8\u7684\u8d26\u53f7\r\n     * @param _value \u5141\u8bb8\u4ee3\u4ed8\u7684\u91d1\u989d\r\n     */\r\n    function approve(address _spender, uint256 _value) public\r\n    returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u8bbe\u7f6e\u4ee3\u4ed8\u91d1\u989d\u9650\u5236\u5e76\u901a\u77e5\u5bf9\u65b9\uff08\u5408\u7ea6\uff09\r\n     * \u8bbe\u7f6e\u4ee3\u4ed8\u91d1\u989d\u9650\u5236\r\n     * @param _spender \u5141\u8bb8\u4ee3\u4ed8\u7684\u8d26\u53f7\r\n     * @param _value \u5141\u8bb8\u4ee3\u4ed8\u7684\u91d1\u989d\r\n     * @param _extraData \u56de\u6267\u6570\u636e\r\n     */\r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData)\r\n    public\r\n    returns (bool success) {\r\n        tokenRecipient spender = tokenRecipient(_spender);\r\n        if (approve(_spender, _value)) {\r\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u9500\u6bc1\u81ea\u5df1\u7684\u4ee3\u5e01\r\n     * \u4ece\u7cfb\u7edf\u4e2d\u9500\u6bc1\u4ee3\u5e01\r\n     * @param _value \u9500\u6bc1\u91cf\r\n     */\r\n    function burn(uint256 _value) public returns (bool) {\r\n        require(balanceOf[msg.sender] >= _value);   // \u68c0\u6d4b\u4f59\u989d\u662f\u5426\u5145\u8db3\r\n        balanceOf[msg.sender] -= _value;            // \u9500\u6bc1\u4ee3\u5e01\r\n        totalSupply -= _value;                      // \u4ece\u53d1\u884c\u7684\u5e01\u4e2d\u5220\u9664\r\n        emit Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u9500\u6bc1\u522b\u4eba\u7684\u4ee3\u5e01\r\n     * \u4ece\u7cfb\u7edf\u4e2d\u9500\u6bc1\u4ee3\u5e01\r\n     * @param _from \u9500\u6bc1\u7684\u5730\u5740\r\n     * @param _value \u9500\u6bc1\u91cf\r\n     */\r\n    function burnFrom(address _from, uint256 _value) public returns (bool) {\r\n        require(balanceOf[_from] >= _value);                // \u68c0\u6d4b\u4f59\u989d\u662f\u5426\u5145\u8db3\r\n        require(_value <= allowance[_from][msg.sender]);    // \u68c0\u6d4b\u4ee3\u4ed8\u989d\u5ea6\r\n        balanceOf[_from] -= _value;                         // \u9500\u6bc1\u4ee3\u5e01\r\n        allowance[_from][msg.sender] -= _value;             // \u9500\u6bc1\u989d\u5ea6\r\n        totalSupply -= _value;                              // \u4ece\u53d1\u884c\u7684\u5e01\u4e2d\u5220\u9664\r\n        emit Burn(_from, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u6279\u91cf\u8f6c\u8d26\r\n     * \u4ece\u81ea\u5df1\u7684\u8d26\u6237\u4e0a\u7ed9\u522b\u4eba\u8f6c\u8d26\r\n     * @param _to \u8f6c\u5165\u8d26\u6237\r\n     * @param _value \u8f6c\u8d26\u91d1\u989d\r\n     */\r\n    function transferArray(address[] _to, uint256[] _value) public {\r\n        require(_to.length == _value.length);\r\n        uint256 sum = 0;\r\n        for(uint256 i = 0; i< _value.length; i++) {\r\n            sum += _value[i];\r\n        }\r\n        require(balanceOf[msg.sender] >= sum);\r\n        for(uint256 k = 0; k < _to.length; k++){\r\n            _transfer(msg.sender, _to[k], _value[k]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u8bbe\u7f6e\u70bc\u91d1\u6c60\uff0c\u5e73\u53f0\u6536\u76ca\u6c60\u5730\u5740\r\n     */\r\n    function setUserPoolAddress(address _userPoolAddress, address _platformPoolAddress, address _smPoolAddress) public onlyOwner {\r\n        require(_userPoolAddress != 0x0);\r\n        require(_platformPoolAddress != 0x0);\r\n        require(_smPoolAddress != 0x0);\r\n        userPool = _userPoolAddress;\r\n        platformPool = _platformPoolAddress;\r\n        smPool = _smPoolAddress;\r\n    }\r\n\r\n    /**\r\n     * \u8bbe\u7f6e\u71c3\u70e7\u6c60\u5730\u5740,key\u4e3asmBurn,appBurn,webBurn,normalBurn\r\n     */\r\n    function setBurnPoolAddress(string key, address _burnPoolAddress) public onlyOwner {\r\n        if (_burnPoolAddress != 0x0)\r\n        burnPoolAddreses[key] = _burnPoolAddress;\r\n    }\r\n\r\n    /**\r\n     *  \u83b7\u53d6\u71c3\u70e7\u6c60\u5730\u5740,key\u4e3asmBurn,appBurn,webBurn,normalBurn\r\n     */\r\n    function  getBurnPoolAddress(string key) public view returns (address) {\r\n        return burnPoolAddreses[key];\r\n    }\r\n\r\n    /**\r\n     * \u79c1\u52df\u8f6c\u5e10\u7279\u6b8a\u5904\u7406\r\n     */\r\n    function smTransfer(address _to, uint256 _value) public returns (bool)  {\r\n        require(smPool == msg.sender);\r\n        _transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u71c3\u70e7\u8f6c\u5e10\u7279\u6b8a\u5904\u7406\r\n     */\r\n    function burnTransfer(address _from, uint256 _value, string key) public returns (bool)  {\r\n        require(burnPoolAddreses[key] != 0x0);\r\n        _transfer(_from, burnPoolAddreses[key], _value);\r\n        return true;\r\n    }\r\n\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"_userPoolAddress\",\"type\":\"address\"},{\"name\":\"_platformPoolAddress\",\"type\":\"address\"},{\"name\":\"_smPoolAddress\",\"type\":\"address\"}],\"name\":\"setUserPoolAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"userPool\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"platformPool\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tos\",\"type\":\"address[]\"}],\"name\":\"transferETH\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getETHBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"burnTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferETH\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"_burnPoolAddress\",\"type\":\"address\"}],\"name\":\"setBurnPoolAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"transferArray\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"smTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"getBurnPoolAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"funding\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_adr\",\"type\":\"address\"}],\"name\":\"setOwnerContracts\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"smPool\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferETH\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"transferETH\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerContracts\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]", "ContractName": "Alchemy", "CompilerVersion": "v0.4.24+commit.e67f0147", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000000000000000be238980000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000c4c6962657274792043617368000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034c43530000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://4bb3ab19bc72b100acc4b67e08b28ca758de3aaf59606518bbc20f27ac9ce1e7"}