{"SourceCode": "pragma solidity ^0.4.13;\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    if (msg.sender != owner) {\r\n      revert();\r\n    }\r\n    _;\r\n  }\r\n}\r\n\r\ncontract RBInformationStore is Ownable {\r\n    address public profitContainerAddress;\r\n    address public companyWalletAddress;\r\n    uint public etherRatioForOwner;\r\n    address public multiSigAddress;\r\n    address public accountAddressForSponsee;\r\n    bool public isPayableEnabledForAll = true;\r\n\r\n    modifier onlyMultiSig() {\r\n        require(multiSigAddress == msg.sender);\r\n        _;\r\n    }\r\n\r\n    function RBInformationStore\r\n    (\r\n        address _profitContainerAddress,\r\n        address _companyWalletAddress,\r\n        uint _etherRatioForOwner,\r\n        address _multiSigAddress,\r\n        address _accountAddressForSponsee\r\n    ) {\r\n        profitContainerAddress = _profitContainerAddress;\r\n        companyWalletAddress = _companyWalletAddress;\r\n        etherRatioForOwner = _etherRatioForOwner;\r\n        multiSigAddress = _multiSigAddress;\r\n        accountAddressForSponsee = _accountAddressForSponsee;\r\n    }\r\n\r\n    function changeProfitContainerAddress(address _address) onlyMultiSig {\r\n        profitContainerAddress = _address;\r\n    }\r\n\r\n    function changeCompanyWalletAddress(address _address) onlyMultiSig {\r\n        companyWalletAddress = _address;\r\n    }\r\n\r\n    function changeEtherRatioForOwner(uint _value) onlyMultiSig {\r\n        etherRatioForOwner = _value;\r\n    }\r\n\r\n    function changeMultiSigAddress(address _address) onlyMultiSig {\r\n        multiSigAddress = _address;\r\n    }\r\n\r\n    function changeOwner(address _address) onlyMultiSig {\r\n        owner = _address;\r\n    }\r\n\r\n    function changeAccountAddressForSponsee(address _address) onlyMultiSig {\r\n        accountAddressForSponsee = _address;\r\n    }\r\n\r\n    function changeIsPayableEnabledForAll() onlyMultiSig {\r\n        isPayableEnabledForAll = !isPayableEnabledForAll;\r\n    }\r\n}\r\n\r\ncontract Rate {\r\n    uint public ETH_USD_rate;\r\n    RBInformationStore public rbInformationStore;\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == rbInformationStore.owner());\r\n        _;\r\n    }\r\n\r\n    function Rate(uint _rate, address _address) {\r\n        ETH_USD_rate = _rate;\r\n        rbInformationStore = RBInformationStore(_address);\r\n    }\r\n\r\n    function setRate(uint _rate) onlyOwner {\r\n        ETH_USD_rate = _rate;\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ETH_USD_rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rbInformationStore\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_rate\",\"type\":\"uint256\"},{\"name\":\"_address\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]", "ContractName": "Rate", "CompilerVersion": "v0.4.18+commit.9cf6e910", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000a9da000000000000000000000000dbd9b1a3077e19d5ec975e759ada47031a94b954", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://cb971c93753b4760f9df443700146451b9602aa0fb21f8913d931530826fa913"}